[{"/home/michael/repos/invest-me/client/src/components/OneStock.js":"1","/home/michael/repos/invest-me/client/src/components/Login.js":"2","/home/michael/repos/invest-me/client/src/components/Portfolio.js":"3","/home/michael/repos/invest-me/client/src/components/StocksTable.js":"4","/home/michael/repos/invest-me/client/src/AppStyle.js":"5","/home/michael/repos/invest-me/client/src/index.js":"6","/home/michael/repos/invest-me/client/src/components/PrivateRoute.js":"7","/home/michael/repos/invest-me/client/src/components/Loading.js":"8","/home/michael/repos/invest-me/client/src/components/Home.js":"9","/home/michael/repos/invest-me/client/src/components/BigDataList.js":"10","/home/michael/repos/invest-me/client/src/components/Calculator.js":"11","/home/michael/repos/invest-me/client/src/components/Competition.js":"12","/home/michael/repos/invest-me/client/src/reportWebVitals.js":"13","/home/michael/repos/invest-me/client/src/components/Header.js":"14","/home/michael/repos/invest-me/client/src/contexts/Auth.js":"15","/home/michael/repos/invest-me/client/src/components/Profile.js":"16","/home/michael/repos/invest-me/client/src/network/index.js":"17","/home/michael/repos/invest-me/client/src/components/Register.js":"18","/home/michael/repos/invest-me/client/src/components/GenericDialog.js":"19","/home/michael/repos/invest-me/client/src/components/SmallLoading.js":"20","/home/michael/repos/invest-me/client/src/components/PortfolioStyles.js":"21","/home/michael/repos/invest-me/client/src/components/StockByPeriod.js":"22","/home/michael/repos/invest-me/client/src/components/CircularLoading.js":"23","/home/michael/repos/invest-me/client/src/recoil/Atom.js":"24","/home/michael/repos/invest-me/client/src/components/UpdateMoney.js":"25","/home/michael/repos/invest-me/client/src/components/GenericTable.js":"26","/home/michael/repos/invest-me/client/src/functions/helpers.js":"27"},{"size":1713,"mtime":1609156923180,"results":"28","hashOfConfig":"29"},{"size":5252,"mtime":1609077020211,"results":"30","hashOfConfig":"29"},{"size":11286,"mtime":1609236315942,"results":"31","hashOfConfig":"29"},{"size":3388,"mtime":1609005142397,"results":"32","hashOfConfig":"29"},{"size":1532,"mtime":1607695473476,"results":"33","hashOfConfig":"29"},{"size":573,"mtime":1607792242750,"results":"34","hashOfConfig":"29"},{"size":1517,"mtime":1609226926252,"results":"35","hashOfConfig":"29"},{"size":520,"mtime":1609148214544,"results":"36","hashOfConfig":"29"},{"size":3126,"mtime":1609176985597,"results":"37","hashOfConfig":"29"},{"size":2996,"mtime":1609100835047,"results":"38","hashOfConfig":"29"},{"size":5850,"mtime":1609235669053,"results":"39","hashOfConfig":"29"},{"size":2276,"mtime":1609095942307,"results":"40","hashOfConfig":"29"},{"size":362,"mtime":1607532441111,"results":"41","hashOfConfig":"29"},{"size":4690,"mtime":1609235212375,"results":"42","hashOfConfig":"29"},{"size":88,"mtime":1607586116384,"results":"43","hashOfConfig":"29"},{"size":5116,"mtime":1609230543910,"results":"44","hashOfConfig":"29"},{"size":1013,"mtime":1608279280275,"results":"45","hashOfConfig":"29"},{"size":7071,"mtime":1609075870156,"results":"46","hashOfConfig":"29"},{"size":1166,"mtime":1609075720030,"results":"47","hashOfConfig":"29"},{"size":452,"mtime":1609077163165,"results":"48","hashOfConfig":"29"},{"size":817,"mtime":1609095375176,"results":"49","hashOfConfig":"29"},{"size":968,"mtime":1609100671553,"results":"50","hashOfConfig":"29"},{"size":463,"mtime":1609148390132,"results":"51","hashOfConfig":"29"},{"size":133,"mtime":1609149962791,"results":"52","hashOfConfig":"29"},{"size":2407,"mtime":1609228845462,"results":"53","hashOfConfig":"29"},{"size":1895,"mtime":1608897258299,"results":"54","hashOfConfig":"29"},{"size":86,"mtime":1609227538352,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1atymq2",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/michael/repos/invest-me/client/src/components/OneStock.js",["125","126","127","128"],"/home/michael/repos/invest-me/client/src/components/Login.js",["129","130"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Paper,\n  Avatar,\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport network from \"../network/index\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport AuthApi from \"../contexts/Auth\";\nimport Cookies from \"js-cookie\";\nimport SmallLoading from \"./SmallLoading\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n}));\n\nfunction Login() {\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const classes = useStyles();\n  const [email, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    let rememberMeValue = Cookies.get(\"rememberMe\");\n    let token = Cookies.get(\"username\");\n    if (rememberMeValue && token) {\n      setCurrentUser({\n        id: Cookies.get(\"userId\"),\n        username: Cookies.get(\"username\"),\n      });\n      history.push(\"/\");\n    }\n  }, []);\n\n  const login = async (e) => {\n    if (!email || !password) {\n      return handleError(\"please enter email and password\");\n    }\n    let body = {\n      email: email,\n      password: password,\n      rememberMe: rememberMe,\n    };\n    try {\n      setLoginLoading(true);\n      const { data } = await network.post(\"/auth/login\", body);\n      if (data.success !== true) {\n        return setLoginLoading(false);\n      }\n      if (rememberMe) {\n        Cookies.set(\"rememberMe\", true);\n      } else {\n        Cookies.set(\"rememberMe\", false);\n      }\n      setCurrentUser({\n        id: Cookies.get(\"userId\"),\n        username: Cookies.get(\"username\"),\n      });\n      setLoginLoading(false);\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n      setLoginLoading(false);\n      handleError(\"invalid email or password\");\n    }\n  };\n\n  const handleError = useCallback((message) => {\n    setError(message);\n    setTimeout(() => {\n      setError(null);\n    }, 3000);\n  }, []);\n\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={(e) => e.preventDefault() && false}\n        >\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"Email\">Email</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              autoComplete=\"off\"\n              autoFocus\n              value={email}\n              onChange={(e) => setUser(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"off\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </FormControl>\n          <label>\n            <input\n              name=\"rememberMe\"\n              checked={rememberMe}\n              onChange={(e) => setRememberMe(() => !rememberMe)}\n              type=\"checkbox\"\n            />\n            Remember me\n          </label>\n          {error && (\n            <div>\n              <label style={{ color: \"red\" }}>{error}</label>\n            </div>\n          )}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={login}\n            className={classes.submit}\n            >\n            Sign in\n          </Button>\n            {loginLoading && <SmallLoading />}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            component={Link}\n            to=\"/register\"\n            className={classes.submit}\n          >\n            Register\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n}\n\nexport default Login;\n",["131","132"],"/home/michael/repos/invest-me/client/src/components/Portfolio.js",["133","134","135","136","137","138","139","140","141"],"/home/michael/repos/invest-me/client/src/components/StocksTable.js",["142","143","144"],"import React, { useCallback } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { financial } from \"../functions/helpers\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function StocksTable({ tableRows, onPressSell }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const handleStockClick = useCallback((symbol) => {\n    history.push(`/one-stock/${symbol}`);\n  }, []);\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Stock</TableCell>\n              <TableCell align=\"right\">Symbol</TableCell>\n              <TableCell align=\"right\">Last rate</TableCell>\n              <TableCell align=\"right\">Amount</TableCell>\n              <TableCell align=\"right\">AVG b.price</TableCell>\n              <TableCell align=\"right\">\n                Total value{\" \"}\n                <img\n                  height=\"15px\"\n                  width=\"15px\"\n                  src=\"https://img.icons8.com/material-outlined/24/000000/shekel.png\"\n                />\n              </TableCell>\n              <TableCell align=\"right\">\n                Profit{\" \"}\n                <img\n                  height=\"15px\"\n                  width=\"15px\"\n                  src=\"https://img.icons8.com/material-outlined/24/000000/shekel.png\"\n                />\n              </TableCell>\n              <TableCell align=\"right\">Yield</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableRows.length !== 0 &&\n              tableRows.map((row) => (\n                <TableRow key={row.title}>\n                  <TableCell\n                    onClick={() => handleStockClick(row.symbol)}\n                    style={{ cursor: \"pointer\" }}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    {row.title}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.symbol}</TableCell>\n                  <TableCell align=\"right\">{row.lastRate}</TableCell>\n                  <TableCell align=\"right\">{row.currentAmount}</TableCell>\n\n                  <TableCell align=\"right\">{financial(row.avgPrice)}</TableCell>\n                  <TableCell align=\"right\">\n                    {financial(row.currentPrice / 100)}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {financial(row.profitInShekels)}\n                  </TableCell>\n                  <TableCell align=\"right\">{financial(row.change)}%</TableCell>\n                  {onPressSell && (\n                    <Button onClick={() => onPressSell(row)}>sell</Button>\n                  )}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/AppStyle.js",["145"],"import { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));",["146","147"],"/home/michael/repos/invest-me/client/src/index.js",[],["148","149"],"/home/michael/repos/invest-me/client/src/components/PrivateRoute.js",["150","151","152","153"],"import React, { useEffect, useCallback, useState } from \"react\";\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\n// import { useAuth } from '../contexts/AuthContext'\nimport AuthApi from \"../contexts/Auth\";\nimport Cookies from \"js-cookie\";\nimport network from \"../network/index\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  // const { currentUser } = useAuth()\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  const getUserInfo = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/users/info\");\n      setLoading(false);\n      setCurrentUser(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    getUserInfo();\n    let rememberMeValue = Cookies.get(\"rememberMe\");\n    let token = Cookies.get(\"accessToken\");\n    if (token && rememberMeValue) {\n      return;\n    } else {\n      Cookies.remove(\"accessToken\");\n      Cookies.remove(\"refreshToken\");\n      Cookies.remove(\"userId\");\n      Cookies.remove(\"username\");\n      Cookies.remove(\"rememberMe\");\n      history.push(\"/login\");\n    }\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return Cookies.get(\"accessToken\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to=\"/login\n            \"\n          />\n        );\n      }}\n    ></Route>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/Loading.js",[],"/home/michael/repos/invest-me/client/src/components/Home.js",["154","155"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport network from \"../network/index\";\nimport { startCase } from \"lodash\";\nimport GenericTable from \"./GenericTable\";\nimport TopStocksTable from \"./TopStocksTable\";\nimport { useStyles } from \"./HomeStyles\";\nimport Loading from \"./Loading\";\n\nconst stockHeaders = [\"Stock\", \"Last Rate\", \"Yield\"];\n\nconst usersHeaders = [\n  \"username\",\n  \"BuyingPrice\",\n  \"Current value\",\n  \"Total profit\",\n  \"Yield\",\n];\n\nexport default function Home() {\n  const [options, setOptions] = useState([]);\n  const [selectValues, setSelectValues] = useState(\"lastThirtyDays\");\n  const [stockRows, setStocksRows] = useState([]);\n  const [usersRows, setUsersRows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n\n  const handleSelectChange = useCallback((e) => {\n    setSelectValues(e.value);\n  }, []);\n\n  const fetchOptions = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/stocks/periods\");\n      data.forEach((period) => (period.label = startCase(period.label)));\n      setOptions(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchAllUsersProfit = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-users-profit\");\n      setUsersRows(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchTopStocks = useCallback(async () => {\n    try {\n      const { data } = await network.post(\"/stocks/top-stocks\", {\n        atr: selectValues,\n      });\n      setStocksRows(data);\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [selectValues]);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchTopStocks();\n    fetchAllUsersProfit();\n  }, []);\n\n  useEffect(() => {\n    fetchTopStocks();\n  }, [selectValues]);\n\n  if (loading) {\n    return <Loading type={\"spin\"} color={\"blue\"} height={333} width={185} />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.topStocks}>\n          <div className={classes.header}>\n            <h3 className={classes.headerTitle}>top stocks</h3>\n            <Select\n              name=\"colors\"\n              defaultValue={selectValues}\n              options={options}\n              onChange={handleSelectChange}\n              className={classes.textField}\n              classNamePrefix=\"select\"\n              placeholder=\"select period\"\n            />\n          </div>\n          <div>\n            <TopStocksTable\n              classes={classes}\n              headers={stockHeaders}\n              rows={stockRows}\n            />\n          </div>\n        </div>\n        <div>\n          <div>\n            <div className={classes.topInvestors}>\n              <h3 className={classes.headerTitle}>Top investors</h3>\n              <GenericTable\n                headers={usersHeaders}\n                rows={usersRows}\n                classes={classes}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/BigDataList.js",["156","157","158","159"],"import { DataGrid } from \"@material-ui/data-grid\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport network from \"../network/index\";\nimport _ from \"lodash\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"react-select\";\nimport { useHistory } from 'react-router-dom'\nimport Loading from './Loading'\nimport { startCase, camelCase } from 'lodash'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  control: {\n    padding: \"2px\",\n    marginBottom: \"1fr\",\n  },\n  dataGrid: { cursor: \"pointer\", height: 600, width: \"100%\" },\n}));\n\nexport default function BigDataList() {\n  const history = useHistory()\n  const [bigData, setBigData] = useState();\n  const [columns, setColumns] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [selectValues, setSelectValues] = useState(null);\n  const [loading, setLoading] = useState(true)\n  const classes = useStyles();\n\n\n  const handleCellClick = useCallback((cell) => {\n    history.push(`/one-stock/${cell.row.symbol}`)\n  }, []);\n\n  // const handleClickOpen = useCallback(() => {\n  //   setOpen(true);\n  // }, []);\n\n  // const handleClose = useCallback(() => {\n  //   setOpen(false);\n  // }, []);\n\n  \n  const handleSelectChange = useCallback((e) => {\n    setSelectValues(Array.isArray(e) ? e.map((x) => x.value) : []);\n  }, []);\n  \n  const fetchOptions = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/stocks/periods\");\n      const mapped = data.map((option) => ({label: startCase(option.label), value: option.value}))\n      setOptions(mapped);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n  \n  const fetchBigDataList = useCallback(async () => {\n    try {\n      const { data } = await network.post(\"/stocks/all\", selectValues);\n      const oneStock = data[0];\n      const resColumns = Object.keys(oneStock).map((key, i) => {\n        return {\n          field: key,\n          headerName: _.startCase(key),\n          width: 130,\n        };\n      });\n      setLoading(false);\n      setColumns(resColumns);\n      setBigData(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [selectValues]);\n  \n  useEffect(() => {\n    fetchOptions();\n    fetchBigDataList();\n  }, []);\n  \n  useEffect(() => {\n    fetchBigDataList();\n  }, [selectValues]);\n  \n  if(loading){\n    return <Loading type={\"spin\"} color={\"blue\"} height={333} width={185}  />\n  }\n  \n  \n  return (\n    <div className={classes.root}>\n      <div className={classes.control}>\n        <Select\n          isMulti\n          name=\"colors\"\n          options={options}\n          onChange={handleSelectChange}\n          className=\"basic-multi-select\"\n          classNamePrefix=\"select\"\n        />\n      </div>\n      <div className={classes.dataGrid}>\n        {bigData && columns && (\n          <DataGrid\n            onCellClick={handleCellClick}\n            rows={bigData}\n            columns={columns}\n            pageSize={20}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n",["160","161"],"/home/michael/repos/invest-me/client/src/components/Calculator.js",["162","163","164","165","166","167","168","169"],"/home/michael/repos/invest-me/client/src/components/Competition.js",["170","171"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport network from \"../network/index\";\nimport useStyles from \"./CompetitionStyles\";\nimport StocksTable from \"./StocksTable\";\nimport GenericTable from \"./GenericTable\";\nimport Loading from './Loading'\n\nconst usersHeaders = [\n  \"username\",\n  \"BuyingPrice\",\n  \"Current value\",\n  \"Total profit\",\n  \"Yield\",\n];\n\nexport default function Competition() {\n  const classes = useStyles();\n  const [usersData, setUsersData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchPortfolios = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-portfolios\");\n      const array = Object.entries(data);\n      return array;\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchAllUsersProfit = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-users-profit\");\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const joinedData = useCallback(async () => {\n    Promise.all([fetchPortfolios(), fetchAllUsersProfit()]).then((ans) => {\n      const newArr = [];\n      for (let i = 0; i < ans[0].length; i++) {\n        for (let j = 0; j < ans[1].length; j++) {\n          if (ans[0][i][0] === ans[1][j][\"username\"]) {\n            newArr.push([ans[0][i], [ans[1][j]]]);\n          }\n        }\n      }\n      setUsersData(newArr);\n      setLoading(false)\n    });\n  }, []);\n  \n  useEffect(() => {\n    joinedData();\n  }, []);\n\n  if(loading){\n    return <Loading type={\"spin\"} color={\"blue\"} height={333} width={185} />\n  }\n  \n  return (\n    <div className={classes.root}>\n      {usersData &&\n        usersData.map((portfolio, i) => (\n          <div className={classes.tableWrapper}>\n            <h3 className={classes.username}>{portfolio[0][0]}</h3>\n            <div className={classes.table}>\n              <StocksTable key={i} tableRows={portfolio[0][1]} />\n            </div>\n            <div className={classes.table}>\n              <GenericTable\n                key={i}\n                headers={usersHeaders}\n                rows={portfolio[1]}\n                classes={classes}\n              />\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/reportWebVitals.js",[],["172","173"],"/home/michael/repos/invest-me/client/src/components/Header.js",["174","175","176","177","178"],"/home/michael/repos/invest-me/client/src/contexts/Auth.js",[],"/home/michael/repos/invest-me/client/src/components/Profile.js",["179","180","181","182","183"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport network from \"../network/index\";\nimport moment from \"moment\";\nimport { Button } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport Loading from \"./Loading\";\nimport AuthApi from \"../contexts/Auth\";\nimport CircularLoading from \"./CircularLoading\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    gridAutoRows: \"100px\",\n    justifyContent: \"center\",\n  },\n  dualBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  button: {\n    margin: \"auto\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"25ch\",\n  },\n}));\n\nexport default function Profile() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const { userValue } = React.useContext(AuthApi);\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\n  const [currentUser, setCurrentUser] = userValue;\n  const [success, setSuccess] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { register: updateProfile, handleSubmit: submitProfile } = useForm({\n    mode: \"onBlur\",\n  });\n\n  const getUserInfo = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/users/info\");\n      setCurrentUser(data);\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setError(\"system error\");\n      setTimeout(() => {\n        setError(null);\n      }, 3000);\n    }\n  }, []);\n  const onChangeProfile = useCallback(async (data) => {\n    getUserInfo();\n    try {\n      setLoadingUpdate(true);\n      await network.post(\"/users/info\", data);\n      getUserInfo();\n      setLoadingUpdate(false);\n      setSuccess(\"updated successfully\");\n      setTimeout(() => {\n        setSuccess(null);\n      }, 3000);\n    } catch (err) {\n      console.error(err);\n      setError(\"system error\");\n      setTimeout(() => {\n        setError(null);\n      }, 3000);\n    }\n  }, []);\n  useEffect(() => {\n    getUserInfo();\n  }, []);\n\n  if (loading) {\n    return <Loading type={\"spin\"} color={\"blue\"} height={333} width={185} />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <form\n        className={classes.root}\n        onSubmit={submitProfile(onChangeProfile)}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div className={classes.dualBox}>\n          <div>\n            <TextField\n              helperText=\"First Name\"\n              name=\"firstName\"\n              inputRef={updateProfile()}\n              id=\"outlined-margin-dense\"\n              defaultValue={currentUser.firstName}\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"text\"\n            />\n          </div>\n          <div>\n            <TextField\n              helperText=\"Last Name\"\n              name=\"lastName\"\n              inputRef={updateProfile()}\n              id=\"outlined-margin-dense\"\n              defaultValue={currentUser.lastName}\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div className={classes.dualBox}>\n          <div>\n            <TextField\n              helperText=\"username\"\n              name=\"username\"\n              inputRef={updateProfile()}\n              id=\"outlined-margin-dense\"\n              defaultValue={currentUser.username}\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"text\"\n            />\n          </div>\n          <div>\n            <TextField\n              helperText=\"Birth Date\"\n              name=\"birthDate\"\n              inputRef={updateProfile()}\n              id=\"outlined-margin-dense\"\n              defaultValue={moment(currentUser.birthDate).format(\"YYYY-MM-DD\")}\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"date\"\n              InputLabelProps={{ shrink: true }}\n            />\n          </div>\n        </div>\n        <div className={classes.dualBox}>\n          <div>\n            <TextField\n              helperText=\"Cash\"\n              name=\"cash\"\n              inputRef={updateProfile()}\n              defaultValue={currentUser.cash}\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div className={classes.button}>\n          <Button\n            type=\"submit\"\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            update\n          </Button>\n        </div>\n        <div className={classes.button}>\n          {loadingUpdate && <CircularLoading />}\n          {success && <span style={{ color: \"blue\" }}>{success}</span>}\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/network/index.js",[],"/home/michael/repos/invest-me/client/src/components/Register.js",["184","185","186"],"import React, { useState } from \"react\";\nimport {\n  Typography,\n  Paper,\n  Avatar,\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport network from \"../network/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from \"react-hook-form\";\nimport GenericDialog from \"./GenericDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n}));\n\nexport default function Register(props) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [birthDate, setBirthDate] = useState(\"\");\n  const history = useHistory();\n  const [dialogOpen, setDialogOpen] = useState(\"\");\n\n  const onRegister = (data) => {\n    network\n      .post(\"/auth/register\", data)\n      .then((res) => {\n        setDialogOpen(true)\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register Account\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onRegister)}>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"firstName\">First name</InputLabel>\n            <Input\n              id=\"firstName\"\n              name=\"firstName\"\n              autoComplete=\"off\"\n              autoFocus\n              error={errors.firstName ? true : false}\n              value={firstName}\n              inputRef={register({ required: true })}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            {errors.firstName && errors.firstName.type === \"required\" && (\n              <span style={{ color: \"red\" }}>firstName is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"lastName\">Last name</InputLabel>\n            <Input\n              id=\"lastName\"\n              name=\"lastName\"\n              autoComplete=\"off\"\n              inputRef={register({ required: true })}\n              autoFocus\n              error={errors.lastName ? true : false}\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            {errors.lastName && errors.lastName.type === \"required\" && (\n              <span style={{ color: \"red\" }}>lastName is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"name\">username</InputLabel>\n            <Input\n              id=\"username\"\n              name=\"username\"\n              autoComplete=\"off\"\n              inputRef={register({ required: true })}\n              autoFocus\n              error={errors.username ? true : false}\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            {errors.username && errors.username.type === \"required\" && (\n              <span style={{ color: \"red\" }}>username is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              inputRef={register({ required: true })}\n              autoComplete=\"off\"\n              value={email}\n              error={errors.email ? true : false}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            {errors.email && errors.email.type === \"required\" && (\n              <span style={{ color: \"red\" }}>email is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"off\"\n              inputRef={register({ required: true, minLength: 6 })}\n              error={errors.password ? true : false}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            {errors.password && errors.password.type === \"minLength\" && (\n              <span style={{ color: \"red\" }}>\n                password must be at least 6 characters length\n              </span>\n            )}\n            {errors.password && errors.password.type === \"required\" && (\n              <span style={{ color: \"red\" }}>password is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel shrink htmlFor=\"birthDate\">\n              Birth Date\n            </InputLabel>\n            <Input\n              error={errors.birthDate ? true : false}\n              inputRef={register({ required: true })}\n              name=\"birthDate\"\n              type=\"date\"\n              id=\"birthDate\"\n              autoComplete=\"off\"\n              value={birthDate}\n              onChange={(e) => setBirthDate(e.target.value)}\n            />\n          </FormControl>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onRegister}\n            className={classes.submit}\n          >\n            Register\n          </Button>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            component={Link}\n            to=\"/login\"\n            className={classes.submit}\n          >\n            Go back to Login\n          </Button>\n        </form>\n      </Paper>\n      {dialogOpen && (\n        <GenericDialog open={dialogOpen} setOpen={setDialogOpen} />\n      )}\n    </main>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/GenericDialog.js",["187"],"/home/michael/repos/invest-me/client/src/components/SmallLoading.js",[],"/home/michael/repos/invest-me/client/src/components/PortfolioStyles.js",["188"],"/home/michael/repos/invest-me/client/src/components/StockByPeriod.js",["189","190"],"import React, { useState, useEffect } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    gridAutoRows: \"100px\",\n    justifyContent: \"center\",\n  },\n  title: {\n    margin: \"auto\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst StockByPeriod = ({ stock1, stock2, stockMeta }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <h1 className={classes.title}>{stockMeta.title}</h1>\n\n      <div>\n        <BarChart width={1200} height={250} data={stock1}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"period\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"yield\" fill=\"#8884d8\" />\n        </BarChart>\n      </div>\n    </div>\n  );\n};\n\nexport default StockByPeriod;\n","/home/michael/repos/invest-me/client/src/components/CircularLoading.js",[],"/home/michael/repos/invest-me/client/src/recoil/Atom.js",[],"/home/michael/repos/invest-me/client/src/components/UpdateMoney.js",["191"],"/home/michael/repos/invest-me/client/src/components/GenericTable.js",["192","193","194","195"],"/home/michael/repos/invest-me/client/src/functions/helpers.js",[],{"ruleId":"196","severity":1,"message":"197","line":5,"column":22,"nodeType":"198","messageId":"199","endLine":5,"endColumn":30},{"ruleId":"200","severity":1,"message":"201","line":37,"column":6,"nodeType":"202","endLine":37,"endColumn":8,"suggestions":"203"},{"ruleId":"200","severity":1,"message":"201","line":48,"column":6,"nodeType":"202","endLine":48,"endColumn":8,"suggestions":"204"},{"ruleId":"200","severity":1,"message":"205","line":53,"column":6,"nodeType":"202","endLine":53,"endColumn":8,"suggestions":"206"},{"ruleId":"196","severity":1,"message":"207","line":55,"column":10,"nodeType":"198","messageId":"199","endLine":55,"endColumn":21},{"ruleId":"200","severity":1,"message":"208","line":74,"column":6,"nodeType":"202","endLine":74,"endColumn":8,"suggestions":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"196","severity":1,"message":"214","line":37,"column":10,"nodeType":"198","messageId":"199","endLine":37,"endColumn":15},{"ruleId":"196","severity":1,"message":"215","line":65,"column":15,"nodeType":"198","messageId":"199","endLine":65,"endColumn":19},{"ruleId":"200","severity":1,"message":"216","line":77,"column":6,"nodeType":"202","endLine":77,"endColumn":8,"suggestions":"217"},{"ruleId":"200","severity":1,"message":"218","line":91,"column":6,"nodeType":"202","endLine":91,"endColumn":8,"suggestions":"219"},{"ruleId":"196","severity":1,"message":"215","line":127,"column":15,"nodeType":"198","messageId":"199","endLine":127,"endColumn":19},{"ruleId":"200","severity":1,"message":"220","line":141,"column":6,"nodeType":"202","endLine":141,"endColumn":36,"suggestions":"221"},{"ruleId":"196","severity":1,"message":"215","line":174,"column":15,"nodeType":"198","messageId":"199","endLine":174,"endColumn":19},{"ruleId":"200","severity":1,"message":"220","line":187,"column":6,"nodeType":"202","endLine":187,"endColumn":75,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":314,"column":15,"nodeType":"225","endLine":314,"endColumn":27},{"ruleId":"200","severity":1,"message":"226","line":26,"column":6,"nodeType":"202","endLine":26,"endColumn":8,"suggestions":"227"},{"ruleId":"228","severity":1,"message":"229","line":41,"column":17,"nodeType":"230","endLine":45,"endColumn":19},{"ruleId":"228","severity":1,"message":"229","line":49,"column":17,"nodeType":"230","endLine":53,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":1,"column":22,"nodeType":"198","messageId":"199","endLine":1,"endColumn":30},{"ruleId":"210","replacedBy":"231"},{"ruleId":"212","replacedBy":"232"},{"ruleId":"210","replacedBy":"233"},{"ruleId":"212","replacedBy":"234"},{"ruleId":"196","severity":1,"message":"207","line":11,"column":10,"nodeType":"198","messageId":"199","endLine":11,"endColumn":21},{"ruleId":"196","severity":1,"message":"235","line":12,"column":10,"nodeType":"198","messageId":"199","endLine":12,"endColumn":17},{"ruleId":"200","severity":1,"message":"218","line":23,"column":6,"nodeType":"202","endLine":23,"endColumn":8,"suggestions":"236"},{"ruleId":"200","severity":1,"message":"237","line":39,"column":6,"nodeType":"202","endLine":39,"endColumn":8,"suggestions":"238"},{"ruleId":"200","severity":1,"message":"239","line":67,"column":6,"nodeType":"202","endLine":67,"endColumn":8,"suggestions":"240"},{"ruleId":"200","severity":1,"message":"241","line":71,"column":6,"nodeType":"202","endLine":71,"endColumn":20,"suggestions":"242"},{"ruleId":"196","severity":1,"message":"243","line":9,"column":21,"nodeType":"198","messageId":"199","endLine":9,"endColumn":30},{"ruleId":"200","severity":1,"message":"226","line":32,"column":6,"nodeType":"202","endLine":32,"endColumn":8,"suggestions":"244"},{"ruleId":"200","severity":1,"message":"245","line":79,"column":6,"nodeType":"202","endLine":79,"endColumn":8,"suggestions":"246"},{"ruleId":"200","severity":1,"message":"247","line":83,"column":6,"nodeType":"202","endLine":83,"endColumn":20,"suggestions":"248"},{"ruleId":"210","replacedBy":"249"},{"ruleId":"212","replacedBy":"250"},{"ruleId":"196","severity":1,"message":"197","line":2,"column":22,"nodeType":"198","messageId":"199","endLine":2,"endColumn":30},{"ruleId":"196","severity":1,"message":"251","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":19},{"ruleId":"196","severity":1,"message":"252","line":46,"column":10,"nodeType":"198","messageId":"199","endLine":46,"endColumn":15},{"ruleId":"200","severity":1,"message":"253","line":66,"column":6,"nodeType":"202","endLine":66,"endColumn":8,"suggestions":"254"},{"ruleId":"200","severity":1,"message":"255","line":80,"column":6,"nodeType":"202","endLine":80,"endColumn":17,"suggestions":"256"},{"ruleId":"200","severity":1,"message":"257","line":84,"column":6,"nodeType":"202","endLine":84,"endColumn":13,"suggestions":"258"},{"ruleId":"200","severity":1,"message":"257","line":88,"column":6,"nodeType":"202","endLine":88,"endColumn":13,"suggestions":"259"},{"ruleId":"200","severity":1,"message":"260","line":95,"column":5,"nodeType":"202","endLine":95,"endColumn":16,"suggestions":"261"},{"ruleId":"200","severity":1,"message":"262","line":53,"column":6,"nodeType":"202","endLine":53,"endColumn":8,"suggestions":"263"},{"ruleId":"200","severity":1,"message":"264","line":57,"column":6,"nodeType":"202","endLine":57,"endColumn":8,"suggestions":"265"},{"ruleId":"210","replacedBy":"266"},{"ruleId":"212","replacedBy":"267"},{"ruleId":"196","severity":1,"message":"268","line":21,"column":16,"nodeType":"198","messageId":"199","endLine":21,"endColumn":23},{"ruleId":"200","severity":1,"message":"218","line":39,"column":6,"nodeType":"202","endLine":39,"endColumn":8,"suggestions":"269"},{"ruleId":"200","severity":1,"message":"226","line":52,"column":6,"nodeType":"202","endLine":52,"endColumn":8,"suggestions":"270"},{"ruleId":"200","severity":1,"message":"271","line":70,"column":6,"nodeType":"202","endLine":70,"endColumn":8,"suggestions":"272"},{"ruleId":"200","severity":1,"message":"273","line":74,"column":6,"nodeType":"202","endLine":74,"endColumn":8,"suggestions":"274"},{"ruleId":"196","severity":1,"message":"197","line":2,"column":22,"nodeType":"198","messageId":"199","endLine":2,"endColumn":30},{"ruleId":"196","severity":1,"message":"252","line":39,"column":10,"nodeType":"198","messageId":"199","endLine":39,"endColumn":15},{"ruleId":"200","severity":1,"message":"218","line":57,"column":6,"nodeType":"202","endLine":57,"endColumn":8,"suggestions":"275"},{"ruleId":"200","severity":1,"message":"276","line":76,"column":6,"nodeType":"202","endLine":76,"endColumn":8,"suggestions":"277"},{"ruleId":"200","severity":1,"message":"273","line":79,"column":6,"nodeType":"202","endLine":79,"endColumn":8,"suggestions":"278"},{"ruleId":"196","severity":1,"message":"279","line":62,"column":9,"nodeType":"198","messageId":"199","endLine":62,"endColumn":16},{"ruleId":"196","severity":1,"message":"252","line":63,"column":10,"nodeType":"198","messageId":"199","endLine":63,"endColumn":15},{"ruleId":"196","severity":1,"message":"280","line":63,"column":17,"nodeType":"198","messageId":"199","endLine":63,"endColumn":25},{"ruleId":"196","severity":1,"message":"281","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":17},{"ruleId":"196","severity":1,"message":"197","line":1,"column":22,"nodeType":"198","messageId":"199","endLine":1,"endColumn":30},{"ruleId":"196","severity":1,"message":"282","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"283","line":1,"column":27,"nodeType":"198","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"284","line":42,"column":6,"nodeType":"202","endLine":42,"endColumn":20,"suggestions":"285"},{"ruleId":"196","severity":1,"message":"282","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"286","line":1,"column":27,"nodeType":"198","messageId":"199","endLine":1,"endColumn":38},{"ruleId":"196","severity":1,"message":"283","line":1,"column":40,"nodeType":"198","messageId":"199","endLine":1,"endColumn":49},{"ruleId":"196","severity":1,"message":"287","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":9},"no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'params.symbol'. Either include it or remove the dependency array.","ArrayExpression",["288"],["289"],"React Hook useEffect has missing dependencies: 'fetchOneStock' and 'fetchStockMeta'. Either include them or remove the dependency array.",["290"],"'currentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["291"],"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"'value' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchUserProfit', 'getUserInfo', and 'getUserPortfolio'. Either include them or remove the dependency array.",["294"],"React Hook useCallback has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.",["295"],"React Hook useCallback has missing dependencies: 'fetchUserProfit', 'getUserInfo', and 'getUserPortfolio'. Either include them or remove the dependency array.",["296"],["297"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["298"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["292"],["293"],["292"],["293"],"'loading' is assigned a value but never used.",["299"],"React Hook useEffect has missing dependencies: 'getUserInfo' and 'history'. Either include them or remove the dependency array.",["300"],"React Hook useEffect has missing dependencies: 'fetchAllUsersProfit', 'fetchOptions', and 'fetchTopStocks'. Either include them or remove the dependency array.",["301"],"React Hook useEffect has a missing dependency: 'fetchTopStocks'. Either include it or remove the dependency array.",["302"],"'camelCase' is defined but never used.",["303"],"React Hook useEffect has missing dependencies: 'fetchBigDataList' and 'fetchOptions'. Either include them or remove the dependency array.",["304"],"React Hook useEffect has a missing dependency: 'fetchBigDataList'. Either include it or remove the dependency array.",["305"],["292"],["293"],"'AsyncSelect' is defined but never used.","'error' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'loadingStockOptions'. Either include it or remove the dependency array.",["306"],"React Hook useEffect has a missing dependency: 'loadingPeriodOptions'. Either include it or remove the dependency array.",["307"],"React Hook useEffect has a missing dependency: 'loadingStockOptions'. Either include it or remove the dependency array.",["308"],["309"],"React Hook useCallback has an unnecessary dependency: 'stockLink'. Either exclude it or remove the dependency array.",["310"],"React Hook useCallback has missing dependencies: 'fetchAllUsersProfit' and 'fetchPortfolios'. Either include them or remove the dependency array.",["311"],"React Hook useEffect has a missing dependency: 'joinedData'. Either include it or remove the dependency array.",["312"],["292"],["293"],"'setAuth' is assigned a value but never used.",["313"],["314"],"React Hook useCallback has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["315"],"React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["316"],["317"],"React Hook useCallback has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["318"],["319"],"'history' is assigned a value but never used.","'setError' is assigned a value but never used.","'TextField' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useCallback has missing dependencies: 'getUserInfo' and 'setOpen'. Either include them or remove the dependency array. If 'getUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["320"],"'useCallback' is defined but never used.","'_' is defined but never used.",{"desc":"321","fix":"322"},{"desc":"321","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},"no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"330","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"336","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"354","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"330","fix":"363"},{"desc":"336","fix":"364"},{"desc":"326","fix":"365"},{"desc":"366","fix":"367"},{"desc":"330","fix":"368"},{"desc":"366","fix":"369"},{"desc":"366","fix":"370"},{"desc":"371","fix":"372"},"Update the dependencies array to be: [params.symbol]",{"range":"373","text":"374"},{"range":"375","text":"374"},"Update the dependencies array to be: [fetchOneStock, fetchStockMeta]",{"range":"376","text":"377"},"Update the dependencies array to be: [history, setCurrentUser]",{"range":"378","text":"379"},"Update the dependencies array to be: [fetchUserProfit, getUserInfo, getUserPortfolio]",{"range":"380","text":"381"},"Update the dependencies array to be: [setCurrentUser]",{"range":"382","text":"383"},"Update the dependencies array to be: [amount, stockToUpdate, price, getUserInfo, getUserPortfolio, fetchUserProfit]",{"range":"384","text":"385"},"Update the dependencies array to be: [currentAmount, stockSellAmount, stockForSell, ifNegative, sellPrice, getUserInfo, fetchUserProfit, getUserPortfolio]",{"range":"386","text":"387"},"Update the dependencies array to be: [history]",{"range":"388","text":"389"},{"range":"390","text":"383"},"Update the dependencies array to be: [getUserInfo, history]",{"range":"391","text":"392"},"Update the dependencies array to be: [fetchAllUsersProfit, fetchOptions, fetchTopStocks]",{"range":"393","text":"394"},"Update the dependencies array to be: [fetchTopStocks, selectValues]",{"range":"395","text":"396"},{"range":"397","text":"389"},"Update the dependencies array to be: [fetchBigDataList, fetchOptions]",{"range":"398","text":"399"},"Update the dependencies array to be: [fetchBigDataList, selectValues]",{"range":"400","text":"401"},"Update the dependencies array to be: [loadingStockOptions]",{"range":"402","text":"403"},"Update the dependencies array to be: [loadingPeriodOptions, stockLink]",{"range":"404","text":"405"},"Update the dependencies array to be: [loadingStockOptions, query]",{"range":"406","text":"407"},{"range":"408","text":"407"},"Update the dependencies array to be: []",{"range":"409","text":"410"},"Update the dependencies array to be: [fetchAllUsersProfit, fetchPortfolios]",{"range":"411","text":"412"},"Update the dependencies array to be: [joinedData]",{"range":"413","text":"414"},{"range":"415","text":"383"},{"range":"416","text":"389"},{"range":"417","text":"379"},"Update the dependencies array to be: [getUserInfo]",{"range":"418","text":"419"},{"range":"420","text":"383"},{"range":"421","text":"419"},{"range":"422","text":"419"},"Update the dependencies array to be: [cashToUpdate, getUserInfo, setOpen]",{"range":"423","text":"424"},[1085,1087],"[params.symbol]",[1338,1340],[1412,1414],"[fetchOneStock, fetchStockMeta]",[2077,2079],"[history, setCurrentUser]",[2618,2620],"[fetchUserProfit, getUserInfo, getUserPortfolio]",[2914,2916],"[setCurrentUser]",[4102,4132],"[amount, stockToUpdate, price, getUserInfo, getUserPortfolio, fetchUserProfit]",[5327,5396],"[currentAmount, stockSellAmount, stockForSell, ifNegative, sellPrice, getUserInfo, fetchUserProfit, getUserPortfolio]",[916,918],"[history]",[817,819],[1240,1242],"[getUserInfo, history]",[1821,1823],"[fetchAllUsersProfit, fetchOptions, fetchTopStocks]",[1874,1888],"[fetchTopStocks, selectValues]",[1034,1036],[2230,2232],"[fetchBigDataList, fetchOptions]",[2287,2301],"[fetchBigDataList, selectValues]",[1907,1909],"[loadingStockOptions]",[2243,2254],"[loadingPeriodOptions, stockLink]",[2310,2317],"[loadingStockOptions, query]",[2373,2380],[2524,2535],"[]",[1478,1480],"[fetchAllUsersProfit, fetchPortfolios]",[1529,1531],"[joinedData]",[1486,1488],[1765,1767],[2244,2246],[2294,2296],"[getUserInfo]",[1615,1617],[2097,2099],[2146,2148],[1346,1360],"[cashToUpdate, getUserInfo, setOpen]"]