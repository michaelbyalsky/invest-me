[{"/home/michael/repos/invest-me/client/src/components/OneStock.js":"1","/home/michael/repos/invest-me/client/src/components/Login.js":"2","/home/michael/repos/invest-me/client/src/components/Portfolio.js":"3","/home/michael/repos/invest-me/client/src/components/StocksTable.js":"4","/home/michael/repos/invest-me/client/src/AppStyle.js":"5","/home/michael/repos/invest-me/client/src/index.js":"6","/home/michael/repos/invest-me/client/src/components/PrivateRoute.js":"7","/home/michael/repos/invest-me/client/src/components/Loading.js":"8","/home/michael/repos/invest-me/client/src/components/Home.js":"9","/home/michael/repos/invest-me/client/src/components/BigDataList.js":"10","/home/michael/repos/invest-me/client/src/components/Calculator.js":"11","/home/michael/repos/invest-me/client/src/components/Competition.js":"12","/home/michael/repos/invest-me/client/src/reportWebVitals.js":"13","/home/michael/repos/invest-me/client/src/components/Header.js":"14","/home/michael/repos/invest-me/client/src/contexts/Auth.js":"15","/home/michael/repos/invest-me/client/src/components/Profile.js":"16","/home/michael/repos/invest-me/client/src/network/index.js":"17","/home/michael/repos/invest-me/client/src/components/Register.js":"18","/home/michael/repos/invest-me/client/src/components/GenericDialog.js":"19","/home/michael/repos/invest-me/client/src/components/SmallLoading.js":"20","/home/michael/repos/invest-me/client/src/components/PortfolioStyles.js":"21","/home/michael/repos/invest-me/client/src/components/StockByPeriod.js":"22","/home/michael/repos/invest-me/client/src/components/CircularLoading.js":"23","/home/michael/repos/invest-me/client/src/recoil/Atom.js":"24","/home/michael/repos/invest-me/client/src/components/UpdateMoney.js":"25"},{"size":1713,"mtime":1609101056098,"results":"26","hashOfConfig":"27"},{"size":5252,"mtime":1609077020211,"results":"28","hashOfConfig":"27"},{"size":11538,"mtime":1609156923180,"results":"29","hashOfConfig":"27"},{"size":3388,"mtime":1609005142397,"results":"30","hashOfConfig":"27"},{"size":1532,"mtime":1607695473476,"results":"31","hashOfConfig":"27"},{"size":573,"mtime":1607792242750,"results":"32","hashOfConfig":"27"},{"size":1292,"mtime":1608372249794,"results":"33","hashOfConfig":"27"},{"size":520,"mtime":1609148214544,"results":"34","hashOfConfig":"27"},{"size":3125,"mtime":1609148715350,"results":"35","hashOfConfig":"27"},{"size":2996,"mtime":1609100835047,"results":"36","hashOfConfig":"27"},{"size":5850,"mtime":1609148471285,"results":"37","hashOfConfig":"27"},{"size":2276,"mtime":1609095942307,"results":"38","hashOfConfig":"27"},{"size":362,"mtime":1607532441111,"results":"39","hashOfConfig":"27"},{"size":4928,"mtime":1609156812792,"results":"40","hashOfConfig":"27"},{"size":88,"mtime":1607586116384,"results":"41","hashOfConfig":"27"},{"size":4158,"mtime":1609100868148,"results":"42","hashOfConfig":"27"},{"size":1013,"mtime":1608279280275,"results":"43","hashOfConfig":"27"},{"size":7071,"mtime":1609075870156,"results":"44","hashOfConfig":"27"},{"size":1166,"mtime":1609075720030,"results":"45","hashOfConfig":"27"},{"size":452,"mtime":1609077163165,"results":"46","hashOfConfig":"27"},{"size":817,"mtime":1609095375176,"results":"47","hashOfConfig":"27"},{"size":968,"mtime":1609100671553,"results":"48","hashOfConfig":"27"},{"size":463,"mtime":1609148390132,"results":"49","hashOfConfig":"27"},{"size":133,"mtime":1609149962791,"results":"50","hashOfConfig":"27"},{"size":1755,"mtime":1609156822691,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"1atymq2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/michael/repos/invest-me/client/src/components/OneStock.js",["117","118","119","120"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport network from \"../network/index\";\nimport StockByPeriod from \"./StockByPeriod\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { startCase } from \"lodash\";\nimport Loading from './Loading'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    justifyContent: \"center\",\n  },\n}));\n\n\nexport default function OneStock() {\n  const params = useParams();\n  const [stock1, setStock1] = useState();\n  const [stockMeta1, setStockMeta1] = useState();\n  const [loading, setLoading] = useState(true)\n  const classes = useStyles();\n  const fetchOneStock = useCallback(async () => {\n    try {\n      const { data: period } = await network.get(\n        `/stocks/one-stock-data/${params.symbol}`\n      );\n      const array = Object.entries(period).map((arr) => ({\n        period: startCase(arr[0]),\n        yield: arr[1],\n      }));\n      setStock1(array);\n      setLoading(false)\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchStockMeta = useCallback(async () => {\n    try {\n      const { data: meta } = await network.get(\n        `/stocks/by-symbol/${params.symbol}`\n      );\n      setStockMeta1(meta);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchOneStock();\n    fetchStockMeta();\n  }, []);\n\nif (loading) {\n  return <Loading type={\"spin\"} color={\"blue\"} height={333} width={185} />\n}\n\n  return (\n    <div className={classes.root}>\n      {stockMeta1 && stock1 && (\n        <div>\n          <StockByPeriod stockMeta={stockMeta1} stock1={stock1} />\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/Login.js",["121","122"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Paper,\n  Avatar,\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport network from \"../network/index\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport AuthApi from \"../contexts/Auth\";\nimport Cookies from \"js-cookie\";\nimport SmallLoading from \"./SmallLoading\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n}));\n\nfunction Login() {\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const classes = useStyles();\n  const [email, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    let rememberMeValue = Cookies.get(\"rememberMe\");\n    let token = Cookies.get(\"username\");\n    if (rememberMeValue && token) {\n      setCurrentUser({\n        id: Cookies.get(\"userId\"),\n        username: Cookies.get(\"username\"),\n      });\n      history.push(\"/\");\n    }\n  }, []);\n\n  const login = async (e) => {\n    if (!email || !password) {\n      return handleError(\"please enter email and password\");\n    }\n    let body = {\n      email: email,\n      password: password,\n      rememberMe: rememberMe,\n    };\n    try {\n      setLoginLoading(true);\n      const { data } = await network.post(\"/auth/login\", body);\n      if (data.success !== true) {\n        return setLoginLoading(false);\n      }\n      if (rememberMe) {\n        Cookies.set(\"rememberMe\", true);\n      } else {\n        Cookies.set(\"rememberMe\", false);\n      }\n      setCurrentUser({\n        id: Cookies.get(\"userId\"),\n        username: Cookies.get(\"username\"),\n      });\n      setLoginLoading(false);\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n      setLoginLoading(false);\n      handleError(\"invalid email or password\");\n    }\n  };\n\n  const handleError = useCallback((message) => {\n    setError(message);\n    setTimeout(() => {\n      setError(null);\n    }, 3000);\n  }, []);\n\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={(e) => e.preventDefault() && false}\n        >\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"Email\">Email</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              autoComplete=\"off\"\n              autoFocus\n              value={email}\n              onChange={(e) => setUser(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"off\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </FormControl>\n          <label>\n            <input\n              name=\"rememberMe\"\n              checked={rememberMe}\n              onChange={(e) => setRememberMe(() => !rememberMe)}\n              type=\"checkbox\"\n            />\n            Remember me\n          </label>\n          {error && (\n            <div>\n              <label style={{ color: \"red\" }}>{error}</label>\n            </div>\n          )}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={login}\n            className={classes.submit}\n            >\n            Sign in\n          </Button>\n            {loginLoading && <SmallLoading />}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            component={Link}\n            to=\"/register\"\n            className={classes.submit}\n          >\n            Register\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n}\n\nexport default Login;\n",["123","124"],"/home/michael/repos/invest-me/client/src/components/Portfolio.js",["125","126","127","128","129","130","131","132","133","134","135","136","137"],"/home/michael/repos/invest-me/client/src/components/StocksTable.js",["138","139","140"],"import React, { useCallback } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { financial } from \"../functions/helpers\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function StocksTable({ tableRows, onPressSell }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const handleStockClick = useCallback((symbol) => {\n    history.push(`/one-stock/${symbol}`);\n  }, []);\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Stock</TableCell>\n              <TableCell align=\"right\">Symbol</TableCell>\n              <TableCell align=\"right\">Last rate</TableCell>\n              <TableCell align=\"right\">Amount</TableCell>\n              <TableCell align=\"right\">AVG b.price</TableCell>\n              <TableCell align=\"right\">\n                Total value{\" \"}\n                <img\n                  height=\"15px\"\n                  width=\"15px\"\n                  src=\"https://img.icons8.com/material-outlined/24/000000/shekel.png\"\n                />\n              </TableCell>\n              <TableCell align=\"right\">\n                Profit{\" \"}\n                <img\n                  height=\"15px\"\n                  width=\"15px\"\n                  src=\"https://img.icons8.com/material-outlined/24/000000/shekel.png\"\n                />\n              </TableCell>\n              <TableCell align=\"right\">Yield</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableRows.length !== 0 &&\n              tableRows.map((row) => (\n                <TableRow key={row.title}>\n                  <TableCell\n                    onClick={() => handleStockClick(row.symbol)}\n                    style={{ cursor: \"pointer\" }}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    {row.title}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.symbol}</TableCell>\n                  <TableCell align=\"right\">{row.lastRate}</TableCell>\n                  <TableCell align=\"right\">{row.currentAmount}</TableCell>\n\n                  <TableCell align=\"right\">{financial(row.avgPrice)}</TableCell>\n                  <TableCell align=\"right\">\n                    {financial(row.currentPrice / 100)}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {financial(row.profitInShekels)}\n                  </TableCell>\n                  <TableCell align=\"right\">{financial(row.change)}%</TableCell>\n                  {onPressSell && (\n                    <Button onClick={() => onPressSell(row)}>sell</Button>\n                  )}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/AppStyle.js",["141"],"import { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));",["142","143"],"/home/michael/repos/invest-me/client/src/index.js",[],"/home/michael/repos/invest-me/client/src/components/PrivateRoute.js",["144","145","146"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n// import { useAuth } from '../contexts/AuthContext'\nimport AuthApi from \"../contexts/Auth\";\nimport Cookies from \"js-cookie\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  // const { currentUser } = useAuth()\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const history = useHistory();\n\n  useEffect(() => {\n    let rememberMeValue = Cookies.get(\"rememberMe\");\n    let token = Cookies.get(\"accessToken\");\n    if (token && rememberMeValue) {\n      setCurrentUser({\n        id: Cookies.get(\"userId\"),\n        username: Cookies.get(\"username\"),\n      });\n    } else {\n      Cookies.remove('accessToken')\n      Cookies.remove('refreshToken')\n      Cookies.remove('userId');\n      Cookies.remove('username');\n      Cookies.remove('rememberMe');\n      history.push(\"/login\");\n    }\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return Cookies.get(\"accessToken\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to=\"/login\n            \"\n          />\n        );\n      }}\n    ></Route>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/Loading.js",[],"/home/michael/repos/invest-me/client/src/components/Home.js",["147","148"],"/home/michael/repos/invest-me/client/src/components/BigDataList.js",["149","150","151","152"],"import { DataGrid } from \"@material-ui/data-grid\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport network from \"../network/index\";\nimport _ from \"lodash\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"react-select\";\nimport { useHistory } from 'react-router-dom'\nimport Loading from './Loading'\nimport { startCase, camelCase } from 'lodash'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  control: {\n    padding: \"2px\",\n    marginBottom: \"1fr\",\n  },\n  dataGrid: { cursor: \"pointer\", height: 600, width: \"100%\" },\n}));\n\nexport default function BigDataList() {\n  const history = useHistory()\n  const [bigData, setBigData] = useState();\n  const [columns, setColumns] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [selectValues, setSelectValues] = useState(null);\n  const [loading, setLoading] = useState(true)\n  const classes = useStyles();\n\n\n  const handleCellClick = useCallback((cell) => {\n    history.push(`/one-stock/${cell.row.symbol}`)\n  }, []);\n\n  // const handleClickOpen = useCallback(() => {\n  //   setOpen(true);\n  // }, []);\n\n  // const handleClose = useCallback(() => {\n  //   setOpen(false);\n  // }, []);\n\n  \n  const handleSelectChange = useCallback((e) => {\n    setSelectValues(Array.isArray(e) ? e.map((x) => x.value) : []);\n  }, []);\n  \n  const fetchOptions = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/stocks/periods\");\n      const mapped = data.map((option) => ({label: startCase(option.label), value: option.value}))\n      setOptions(mapped);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n  \n  const fetchBigDataList = useCallback(async () => {\n    try {\n      const { data } = await network.post(\"/stocks/all\", selectValues);\n      const oneStock = data[0];\n      const resColumns = Object.keys(oneStock).map((key, i) => {\n        return {\n          field: key,\n          headerName: _.startCase(key),\n          width: 130,\n        };\n      });\n      setLoading(false);\n      setColumns(resColumns);\n      setBigData(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [selectValues]);\n  \n  useEffect(() => {\n    fetchOptions();\n    fetchBigDataList();\n  }, []);\n  \n  useEffect(() => {\n    fetchBigDataList();\n  }, [selectValues]);\n  \n  if(loading){\n    return <Loading type={\"spin\"} color={\"blue\"} height={333} width={185}  />\n  }\n  \n  \n  return (\n    <div className={classes.root}>\n      <div className={classes.control}>\n        <Select\n          isMulti\n          name=\"colors\"\n          options={options}\n          onChange={handleSelectChange}\n          className=\"basic-multi-select\"\n          classNamePrefix=\"select\"\n        />\n      </div>\n      <div className={classes.dataGrid}>\n        {bigData && columns && (\n          <DataGrid\n            onCellClick={handleCellClick}\n            rows={bigData}\n            columns={columns}\n            pageSize={20}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n",["153","154"],"/home/michael/repos/invest-me/client/src/components/Calculator.js",["155","156","157","158","159","160","161","162"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AsyncSelect from \"react-select/async\";\nimport network from \"../network/index\";\nimport Select from \"react-select\";\nimport { startCase } from \"lodash\";\nimport { financial } from \"../functions/helpers\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularLoading from \"./CircularLoading\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    gridAutoRows: \"100px\",\n    justifyContent: \"center\",\n  },\n  moneyBar: {\n    display: \"flex\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"25ch\",\n  },\n  table: {\n    minWidth: 650,\n  },\n  cash: {\n    margin: \"auto\",\n  },\n  loading: {\n    margin: \"auto\",\n  }\n}));\n\nconst Calculator = () => {\n  const classes = useStyles();\n  const [cash, setCash] = useState(0);\n  const [query, setQuery] = useState(\"\");\n  const [stockLink, setStockLink] = useState(null);\n  const [periodYield, setPeriodYield] = useState(0);\n  const [estimateYield, setEstimateYield] = useState(0);\n  const [options, setOptions] = useState();\n  const [stockOption, setStockOptions] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [defaultValue, setDefaultValue] = useState(\"\");\n  const [stockValue, setStockValue] = useState(\"\");\n  const [optionValue, setOptionValue] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n  // const [stockTitle, setStockTitle] = useState('')\n\n  const onClear = useCallback(() => {\n    setCash(0);\n    setStockLink(null);\n    setPeriodYield(0);\n    setEstimateYield(0);\n    setOptions(\"\");\n    setStockOptions([]);\n    setQuery(\"\");\n    setDefaultValue(\"\");\n    loadingStockOptions();\n    setStockValue(\"\");\n    setOptionValue(\"\");\n    // setStockTitle('')\n  }, []);\n\n  const handleSelectStockChange = useCallback(async (value) => {\n    setStockLink(value.symbol);\n    setStockValue(value);\n    // setStockTitle(value.label)\n  }, []);\n\n  useEffect(() => {\n    setEstimateYield(financial((cash * periodYield) / 100));\n  }, [cash, periodYield]);\n\n  useEffect(() => {\n    loadingPeriodOptions();\n  }, [stockLink]);\n\n  useEffect(() => {\n    loadingStockOptions();\n  }, [query]);\n\n  useEffect(() => {\n    loadingStockOptions();\n  }, [query]);\n\n  const handleSelectPeriodChange = useCallback(\n    (value) => {\n      setOptionValue(value);\n      setPeriodYield(value.value);\n    },\n    [stockLink]\n  );\n\n  const handleInputStockChange = useCallback((value) => {\n    setQuery(value);\n  }, []);\n\n  const onChangeCash = useCallback((e) => {\n    setCash(e.target.value);\n  }, []);\n\n  const loadingStockOptions = useCallback(async () => {\n    try {\n      setLoading(true);\n      const { data } = await network.get(`/stocks/search?q=${query}`);\n      const mapped = data.map((stock) => ({\n        label: stock.title,\n        symbol: stock.symbol,\n      }));\n      setStockOptions(mapped);\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [query]);\n\n  const loadingPeriodOptions = useCallback(async () => {\n    if (!stockLink) {\n      return setError(\"first choose link\");\n    }\n    try {\n      setLoading(true);\n      const { data } = await network.get(`stocks/one-stock-data/${stockLink}`);\n      const list = Object.entries(data);\n      const mapped = list.map((item) => ({\n        label: startCase(item[0]),\n        value: item[1],\n      }));\n      setOptions(mapped);\n      setLoading(false);\n      return mapped;\n      //   return mapped;\n    } catch (err) {\n      console.error(err);\n    }\n  }, [stockLink]);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.cash}>\n        <TextField\n          // isClearable={true}\n          label=\"Cash\"\n          id=\"outlined-margin-dense\"\n          value={cash}\n          className={classes.textField}\n          margin=\"dense\"\n          variant=\"outlined\"\n          type=\"number\"\n          onChange={onChangeCash}\n        />\n      </div>\n      <div className={classes.moneyBar}>\n        <div>\n          <Select\n            // isClearable={true}\n            className={classes.textField}\n            cacheOptions\n            defaultOptions\n            hideSelectedOptions={false}\n            value={stockValue}\n            onChange={handleSelectStockChange}\n            placeholder={\"select stock\"}\n            onInputChange={handleInputStockChange}\n            options={stockOption}\n          />\n        </div>\n        <div>\n          <Select\n            className={classes.textField}\n            cacheOptions\n            // defaultOptions\n            value={optionValue}\n            defaultValue={defaultValue}\n            onChange={handleSelectPeriodChange}\n            placeholder={\"select period\"}\n            options={options}\n          />\n        </div>\n      </div>\n      <div className={classes.moneyBar}>\n        <div>\n          <TextField\n            helperText=\"Period yield %\"\n            id=\"outlined-margin-dense\"\n            value={`${periodYield}`}\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"number\"\n          />\n        </div>\n        <div>\n          <TextField\n            helperText=\"Estimate yield\"\n            id=\"outlined-margin-dense\"\n            value={estimateYield}\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"number\"\n          />\n        </div>\n      </div>\n      <div className={classes.cash}>\n        <Button onClick={onClear} variant=\"contained\" color=\"primary\">\n          clear\n        </Button>\n      </div>\n      <div className={classes.loading}>{loading && <CircularLoading />}</div>\n    </div>\n  );\n};\n\nexport default Calculator;\n","/home/michael/repos/invest-me/client/src/components/Competition.js",["163","164"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport network from \"../network/index\";\nimport useStyles from \"./CompetitionStyles\";\nimport StocksTable from \"./StocksTable\";\nimport GenericTable from \"./GenericTable\";\nimport Loading from './Loading'\n\nconst usersHeaders = [\n  \"username\",\n  \"BuyingPrice\",\n  \"Current value\",\n  \"Total profit\",\n  \"Yield\",\n];\n\nexport default function Competition() {\n  const classes = useStyles();\n  const [usersData, setUsersData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchPortfolios = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-portfolios\");\n      const array = Object.entries(data);\n      return array;\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchAllUsersProfit = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-users-profit\");\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const joinedData = useCallback(async () => {\n    Promise.all([fetchPortfolios(), fetchAllUsersProfit()]).then((ans) => {\n      const newArr = [];\n      for (let i = 0; i < ans[0].length; i++) {\n        for (let j = 0; j < ans[1].length; j++) {\n          if (ans[0][i][0] === ans[1][j][\"username\"]) {\n            newArr.push([ans[0][i], [ans[1][j]]]);\n          }\n        }\n      }\n      setUsersData(newArr);\n      setLoading(false)\n    });\n  }, []);\n  \n  useEffect(() => {\n    joinedData();\n  }, []);\n\n  if(loading){\n    return <Loading type={\"spin\"} color={\"blue\"} height={333} width={185} />\n  }\n  \n  return (\n    <div className={classes.root}>\n      {usersData &&\n        usersData.map((portfolio, i) => (\n          <div className={classes.tableWrapper}>\n            <h3 className={classes.username}>{portfolio[0][0]}</h3>\n            <div className={classes.table}>\n              <StocksTable key={i} tableRows={portfolio[0][1]} />\n            </div>\n            <div className={classes.table}>\n              <GenericTable\n                key={i}\n                headers={usersHeaders}\n                rows={portfolio[1]}\n                classes={classes}\n              />\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/reportWebVitals.js",[],["165","166"],"/home/michael/repos/invest-me/client/src/components/Header.js",["167","168","169","170","171","172","173"],"/home/michael/repos/invest-me/client/src/contexts/Auth.js",[],"/home/michael/repos/invest-me/client/src/components/Profile.js",["174","175","176"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport network from \"../network/index\";\nimport moment from \"moment\";\nimport { Button } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport Loading from './Loading'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    gridAutoRows: \"100px\",\n    justifyContent: \"center\",\n  },\n  dualBox: {\n    display: \"flex\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"25ch\",\n  },\n}));\n\nexport default function Profile() {\n  const classes = useStyles();\n  const [userInfo, setUserInfo] = useState(null);\n  const [loading, setLoading] = useState(true)\n\n  const { register: updateProfile, handleSubmit: submitProfile } = useForm({\n    mode: \"onBlur\",\n  });\n\n  const getUserInfo = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/users/info\");\n      setUserInfo(data);\n      setLoading(false)\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n  const onChangeProfile = useCallback(async (data) => {\n    getUserInfo();\n    try {\n      await network.post(\"/users/info\", data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    getUserInfo();\n  }, []);\n\n  if (loading){\n    return <Loading type={\"spin\"} color={\"blue\"} height={333} width={185}  />\n  }\n\n  return (\n    <div className={classes.root}>\n      <form\n        className={classes.root}\n        onSubmit={submitProfile(onChangeProfile)}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div className={classes.dualBox}>\n          <div>\n            <TextField\n              helperText=\"First Name\"\n              name=\"firstName\"\n              inputRef={updateProfile()}\n              id=\"outlined-margin-dense\"\n              defaultValue={userInfo.firstName}\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"text\"\n            />\n          </div>\n          <div>\n            <TextField\n              helperText=\"Last Name\"\n              name=\"lastName\"\n              inputRef={updateProfile()}\n              id=\"outlined-margin-dense\"\n              defaultValue={userInfo.lastName}\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div className={classes.dualBox}>\n          <div>\n            <TextField\n              helperText=\"username\"\n              name=\"username\"\n              inputRef={updateProfile()}\n              id=\"outlined-margin-dense\"\n              defaultValue={userInfo.username}\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"text\"\n            />\n          </div>\n          <div>\n            <TextField\n              helperText=\"Birth Date\"\n              name=\"birthDate\"\n              inputRef={updateProfile()}\n              id=\"outlined-margin-dense\"\n              defaultValue={moment(userInfo.birthDate).format(\"YYYY-MM-DD\")}\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"date\"\n              InputLabelProps={{ shrink: true }}\n            />\n          </div>\n        </div>\n        <div className={classes.dualBox}>\n          <div>\n            <TextField\n              helperText=\"Cash\"\n              name=\"cash\"\n              inputRef={updateProfile()}\n              defaultValue={userInfo[\"UserMoney.cash\"]}\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div>\n          <Button\n            type=\"submit\"\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            update\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/network/index.js",[],"/home/michael/repos/invest-me/client/src/components/Register.js",["177","178","179"],"import React, { useState } from \"react\";\nimport {\n  Typography,\n  Paper,\n  Avatar,\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport network from \"../network/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from \"react-hook-form\";\nimport GenericDialog from \"./GenericDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n}));\n\nexport default function Register(props) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [birthDate, setBirthDate] = useState(\"\");\n  const history = useHistory();\n  const [dialogOpen, setDialogOpen] = useState(\"\");\n\n  const onRegister = (data) => {\n    network\n      .post(\"/auth/register\", data)\n      .then((res) => {\n        setDialogOpen(true)\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register Account\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onRegister)}>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"firstName\">First name</InputLabel>\n            <Input\n              id=\"firstName\"\n              name=\"firstName\"\n              autoComplete=\"off\"\n              autoFocus\n              error={errors.firstName ? true : false}\n              value={firstName}\n              inputRef={register({ required: true })}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            {errors.firstName && errors.firstName.type === \"required\" && (\n              <span style={{ color: \"red\" }}>firstName is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"lastName\">Last name</InputLabel>\n            <Input\n              id=\"lastName\"\n              name=\"lastName\"\n              autoComplete=\"off\"\n              inputRef={register({ required: true })}\n              autoFocus\n              error={errors.lastName ? true : false}\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            {errors.lastName && errors.lastName.type === \"required\" && (\n              <span style={{ color: \"red\" }}>lastName is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"name\">username</InputLabel>\n            <Input\n              id=\"username\"\n              name=\"username\"\n              autoComplete=\"off\"\n              inputRef={register({ required: true })}\n              autoFocus\n              error={errors.username ? true : false}\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            {errors.username && errors.username.type === \"required\" && (\n              <span style={{ color: \"red\" }}>username is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              inputRef={register({ required: true })}\n              autoComplete=\"off\"\n              value={email}\n              error={errors.email ? true : false}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            {errors.email && errors.email.type === \"required\" && (\n              <span style={{ color: \"red\" }}>email is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"off\"\n              inputRef={register({ required: true, minLength: 6 })}\n              error={errors.password ? true : false}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            {errors.password && errors.password.type === \"minLength\" && (\n              <span style={{ color: \"red\" }}>\n                password must be at least 6 characters length\n              </span>\n            )}\n            {errors.password && errors.password.type === \"required\" && (\n              <span style={{ color: \"red\" }}>password is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel shrink htmlFor=\"birthDate\">\n              Birth Date\n            </InputLabel>\n            <Input\n              error={errors.birthDate ? true : false}\n              inputRef={register({ required: true })}\n              name=\"birthDate\"\n              type=\"date\"\n              id=\"birthDate\"\n              autoComplete=\"off\"\n              value={birthDate}\n              onChange={(e) => setBirthDate(e.target.value)}\n            />\n          </FormControl>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onRegister}\n            className={classes.submit}\n          >\n            Register\n          </Button>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            component={Link}\n            to=\"/login\"\n            className={classes.submit}\n          >\n            Go back to Login\n          </Button>\n        </form>\n      </Paper>\n      {dialogOpen && (\n        <GenericDialog open={dialogOpen} setOpen={setDialogOpen} />\n      )}\n    </main>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/GenericDialog.js",["180"],"/home/michael/repos/invest-me/client/src/components/SmallLoading.js",[],"/home/michael/repos/invest-me/client/src/components/PortfolioStyles.js",["181"],"/home/michael/repos/invest-me/client/src/components/StockByPeriod.js",["182","183"],"import React, { useState, useEffect } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    gridAutoRows: \"100px\",\n    justifyContent: \"center\",\n  },\n  title: {\n    margin: \"auto\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst StockByPeriod = ({ stock1, stock2, stockMeta }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <h1 className={classes.title}>{stockMeta.title}</h1>\n\n      <div>\n        <BarChart width={1200} height={250} data={stock1}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"period\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"yield\" fill=\"#8884d8\" />\n        </BarChart>\n      </div>\n    </div>\n  );\n};\n\nexport default StockByPeriod;\n","/home/michael/repos/invest-me/client/src/components/CircularLoading.js",[],"/home/michael/repos/invest-me/client/src/recoil/Atom.js",[],"/home/michael/repos/invest-me/client/src/components/UpdateMoney.js",["184","185","186"],{"ruleId":"187","severity":1,"message":"188","line":5,"column":22,"nodeType":"189","messageId":"190","endLine":5,"endColumn":30},{"ruleId":"191","severity":1,"message":"192","line":37,"column":6,"nodeType":"193","endLine":37,"endColumn":8,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"192","line":48,"column":6,"nodeType":"193","endLine":48,"endColumn":8,"suggestions":"195"},{"ruleId":"191","severity":1,"message":"196","line":53,"column":6,"nodeType":"193","endLine":53,"endColumn":8,"suggestions":"197"},{"ruleId":"187","severity":1,"message":"198","line":55,"column":10,"nodeType":"189","messageId":"190","endLine":55,"endColumn":21},{"ruleId":"191","severity":1,"message":"199","line":74,"column":6,"nodeType":"193","endLine":74,"endColumn":8,"suggestions":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"187","severity":1,"message":"205","line":30,"column":10,"nodeType":"189","messageId":"190","endLine":30,"endColumn":14},{"ruleId":"187","severity":1,"message":"206","line":30,"column":16,"nodeType":"189","messageId":"190","endLine":30,"endColumn":23},{"ruleId":"187","severity":1,"message":"207","line":31,"column":10,"nodeType":"189","messageId":"190","endLine":31,"endColumn":21},{"ruleId":"187","severity":1,"message":"208","line":31,"column":23,"nodeType":"189","messageId":"190","endLine":31,"endColumn":37},{"ruleId":"187","severity":1,"message":"209","line":38,"column":10,"nodeType":"189","messageId":"190","endLine":38,"endColumn":15},{"ruleId":"187","severity":1,"message":"210","line":68,"column":15,"nodeType":"189","messageId":"190","endLine":68,"endColumn":19},{"ruleId":"191","severity":1,"message":"211","line":80,"column":6,"nodeType":"193","endLine":80,"endColumn":8,"suggestions":"212"},{"ruleId":"191","severity":1,"message":"213","line":99,"column":6,"nodeType":"193","endLine":99,"endColumn":8,"suggestions":"214"},{"ruleId":"187","severity":1,"message":"210","line":135,"column":15,"nodeType":"189","messageId":"190","endLine":135,"endColumn":19},{"ruleId":"191","severity":1,"message":"215","line":149,"column":6,"nodeType":"193","endLine":149,"endColumn":36,"suggestions":"216"},{"ruleId":"187","severity":1,"message":"210","line":182,"column":15,"nodeType":"189","messageId":"190","endLine":182,"endColumn":19},{"ruleId":"191","severity":1,"message":"215","line":195,"column":6,"nodeType":"193","endLine":195,"endColumn":75,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":322,"column":15,"nodeType":"220","endLine":322,"endColumn":27},{"ruleId":"191","severity":1,"message":"221","line":26,"column":6,"nodeType":"193","endLine":26,"endColumn":8,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":41,"column":17,"nodeType":"225","endLine":45,"endColumn":19},{"ruleId":"223","severity":1,"message":"224","line":49,"column":17,"nodeType":"225","endLine":53,"endColumn":19},{"ruleId":"187","severity":1,"message":"188","line":1,"column":22,"nodeType":"189","messageId":"190","endLine":1,"endColumn":30},{"ruleId":"201","replacedBy":"226"},{"ruleId":"203","replacedBy":"227"},{"ruleId":"187","severity":1,"message":"228","line":6,"column":22,"nodeType":"189","messageId":"190","endLine":6,"endColumn":26},{"ruleId":"187","severity":1,"message":"198","line":11,"column":10,"nodeType":"189","messageId":"190","endLine":11,"endColumn":21},{"ruleId":"191","severity":1,"message":"199","line":30,"column":6,"nodeType":"193","endLine":30,"endColumn":8,"suggestions":"229"},{"ruleId":"191","severity":1,"message":"230","line":66,"column":6,"nodeType":"193","endLine":66,"endColumn":8,"suggestions":"231"},{"ruleId":"191","severity":1,"message":"232","line":70,"column":6,"nodeType":"193","endLine":70,"endColumn":20,"suggestions":"233"},{"ruleId":"187","severity":1,"message":"234","line":9,"column":21,"nodeType":"189","messageId":"190","endLine":9,"endColumn":30},{"ruleId":"191","severity":1,"message":"221","line":32,"column":6,"nodeType":"193","endLine":32,"endColumn":8,"suggestions":"235"},{"ruleId":"191","severity":1,"message":"236","line":79,"column":6,"nodeType":"193","endLine":79,"endColumn":8,"suggestions":"237"},{"ruleId":"191","severity":1,"message":"238","line":83,"column":6,"nodeType":"193","endLine":83,"endColumn":20,"suggestions":"239"},{"ruleId":"201","replacedBy":"240"},{"ruleId":"203","replacedBy":"241"},{"ruleId":"187","severity":1,"message":"188","line":2,"column":22,"nodeType":"189","messageId":"190","endLine":2,"endColumn":30},{"ruleId":"187","severity":1,"message":"242","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":19},{"ruleId":"187","severity":1,"message":"243","line":46,"column":10,"nodeType":"189","messageId":"190","endLine":46,"endColumn":15},{"ruleId":"191","severity":1,"message":"244","line":66,"column":6,"nodeType":"193","endLine":66,"endColumn":8,"suggestions":"245"},{"ruleId":"191","severity":1,"message":"246","line":80,"column":6,"nodeType":"193","endLine":80,"endColumn":17,"suggestions":"247"},{"ruleId":"191","severity":1,"message":"248","line":84,"column":6,"nodeType":"193","endLine":84,"endColumn":13,"suggestions":"249"},{"ruleId":"191","severity":1,"message":"248","line":88,"column":6,"nodeType":"193","endLine":88,"endColumn":13,"suggestions":"250"},{"ruleId":"191","severity":1,"message":"251","line":95,"column":5,"nodeType":"193","endLine":95,"endColumn":16,"suggestions":"252"},{"ruleId":"191","severity":1,"message":"253","line":53,"column":6,"nodeType":"193","endLine":53,"endColumn":8,"suggestions":"254"},{"ruleId":"191","severity":1,"message":"255","line":57,"column":6,"nodeType":"193","endLine":57,"endColumn":8,"suggestions":"256"},{"ruleId":"201","replacedBy":"257"},{"ruleId":"203","replacedBy":"258"},{"ruleId":"187","severity":1,"message":"198","line":27,"column":10,"nodeType":"189","messageId":"190","endLine":27,"endColumn":21},{"ruleId":"187","severity":1,"message":"259","line":32,"column":9,"nodeType":"189","messageId":"190","endLine":32,"endColumn":21},{"ruleId":"191","severity":1,"message":"221","line":47,"column":6,"nodeType":"193","endLine":47,"endColumn":8,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":59,"column":16,"nodeType":"263","messageId":"264","endLine":59,"endColumn":18},{"ruleId":"191","severity":1,"message":"213","line":65,"column":6,"nodeType":"193","endLine":65,"endColumn":8,"suggestions":"265"},{"ruleId":"191","severity":1,"message":"266","line":83,"column":6,"nodeType":"193","endLine":83,"endColumn":8,"suggestions":"267"},{"ruleId":"191","severity":1,"message":"268","line":87,"column":6,"nodeType":"193","endLine":87,"endColumn":8,"suggestions":"269"},{"ruleId":"187","severity":1,"message":"188","line":2,"column":22,"nodeType":"189","messageId":"190","endLine":2,"endColumn":30},{"ruleId":"191","severity":1,"message":"270","line":51,"column":6,"nodeType":"193","endLine":51,"endColumn":8,"suggestions":"271"},{"ruleId":"191","severity":1,"message":"272","line":55,"column":6,"nodeType":"193","endLine":55,"endColumn":8,"suggestions":"273"},{"ruleId":"187","severity":1,"message":"274","line":62,"column":9,"nodeType":"189","messageId":"190","endLine":62,"endColumn":16},{"ruleId":"187","severity":1,"message":"243","line":63,"column":10,"nodeType":"189","messageId":"190","endLine":63,"endColumn":15},{"ruleId":"187","severity":1,"message":"275","line":63,"column":17,"nodeType":"189","messageId":"190","endLine":63,"endColumn":25},{"ruleId":"187","severity":1,"message":"276","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":1,"column":22,"nodeType":"189","messageId":"190","endLine":1,"endColumn":30},{"ruleId":"187","severity":1,"message":"277","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"278","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"279","line":14,"column":7,"nodeType":"189","messageId":"190","endLine":14,"endColumn":22},{"ruleId":"187","severity":1,"message":"280","line":22,"column":9,"nodeType":"189","messageId":"190","endLine":22,"endColumn":19},{"ruleId":"191","severity":1,"message":"281","line":28,"column":6,"nodeType":"193","endLine":28,"endColumn":8,"suggestions":"282"},"no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'params.symbol'. Either include it or remove the dependency array.","ArrayExpression",["283"],["284"],"React Hook useEffect has missing dependencies: 'fetchOneStock' and 'fetchStockMeta'. Either include them or remove the dependency array.",["285"],"'currentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["286"],"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"'cash' is assigned a value but never used.","'setCash' is assigned a value but never used.","'investments' is assigned a value but never used.","'setInvestments' is assigned a value but never used.","'value' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchUserMoney', 'fetchUserProfit', and 'getUserPortfolio'. Either include them or remove the dependency array.",["289"],"React Hook useCallback has a missing dependency: 'setUserMoney'. Either include it or remove the dependency array.",["290"],"React Hook useCallback has missing dependencies: 'fetchUserMoney', 'fetchUserProfit', and 'getUserPortfolio'. Either include them or remove the dependency array.",["291"],["292"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["293"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["287"],["288"],"'Link' is defined but never used.",["294"],"React Hook useEffect has missing dependencies: 'fetchAllUsersProfit', 'fetchOptions', and 'fetchTopStocks'. Either include them or remove the dependency array.",["295"],"React Hook useEffect has a missing dependency: 'fetchTopStocks'. Either include it or remove the dependency array.",["296"],"'camelCase' is defined but never used.",["297"],"React Hook useEffect has missing dependencies: 'fetchBigDataList' and 'fetchOptions'. Either include them or remove the dependency array.",["298"],"React Hook useEffect has a missing dependency: 'fetchBigDataList'. Either include it or remove the dependency array.",["299"],["287"],["288"],"'AsyncSelect' is defined but never used.","'error' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'loadingStockOptions'. Either include it or remove the dependency array.",["300"],"React Hook useEffect has a missing dependency: 'loadingPeriodOptions'. Either include it or remove the dependency array.",["301"],"React Hook useEffect has a missing dependency: 'loadingStockOptions'. Either include it or remove the dependency array.",["302"],["303"],"React Hook useCallback has an unnecessary dependency: 'stockLink'. Either exclude it or remove the dependency array.",["304"],"React Hook useCallback has missing dependencies: 'fetchAllUsersProfit' and 'fetchPortfolios'. Either include them or remove the dependency array.",["305"],"React Hook useEffect has a missing dependency: 'joinedData'. Either include it or remove the dependency array.",["306"],["287"],["288"],"'handleChange' is assigned a value but never used.",["307"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["308"],"React Hook useCallback has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["309"],"React Hook useEffect has a missing dependency: 'fetchUserMoney'. Either include it or remove the dependency array.",["310"],"React Hook useCallback has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["312"],"'history' is assigned a value but never used.","'setError' is assigned a value but never used.","'TextField' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'updateCash' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'cashToUpdate'. Either include it or remove the dependency array.",["313"],{"desc":"314","fix":"315"},{"desc":"314","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},"no-global-assign","no-unsafe-negation",{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"319","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"329","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"345","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"329","fix":"354"},{"desc":"323","fix":"355"},{"desc":"319","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"359","fix":"361"},{"desc":"362","fix":"363"},"Update the dependencies array to be: [params.symbol]",{"range":"364","text":"365"},{"range":"366","text":"365"},"Update the dependencies array to be: [fetchOneStock, fetchStockMeta]",{"range":"367","text":"368"},"Update the dependencies array to be: [history, setCurrentUser]",{"range":"369","text":"370"},"Update the dependencies array to be: [fetchUserMoney, fetchUserProfit, getUserPortfolio]",{"range":"371","text":"372"},"Update the dependencies array to be: [setUserMoney]",{"range":"373","text":"374"},"Update the dependencies array to be: [amount, stockToUpdate, price, fetchUserProfit, fetchUserMoney, getUserPortfolio]",{"range":"375","text":"376"},"Update the dependencies array to be: [currentAmount, stockSellAmount, stockForSell, ifNegative, sellPrice, fetchUserProfit, fetchUserMoney, getUserPortfolio]",{"range":"377","text":"378"},"Update the dependencies array to be: [history]",{"range":"379","text":"380"},{"range":"381","text":"370"},"Update the dependencies array to be: [fetchAllUsersProfit, fetchOptions, fetchTopStocks]",{"range":"382","text":"383"},"Update the dependencies array to be: [fetchTopStocks, selectValues]",{"range":"384","text":"385"},{"range":"386","text":"380"},"Update the dependencies array to be: [fetchBigDataList, fetchOptions]",{"range":"387","text":"388"},"Update the dependencies array to be: [fetchBigDataList, selectValues]",{"range":"389","text":"390"},"Update the dependencies array to be: [loadingStockOptions]",{"range":"391","text":"392"},"Update the dependencies array to be: [loadingPeriodOptions, stockLink]",{"range":"393","text":"394"},"Update the dependencies array to be: [loadingStockOptions, query]",{"range":"395","text":"396"},{"range":"397","text":"396"},"Update the dependencies array to be: []",{"range":"398","text":"399"},"Update the dependencies array to be: [fetchAllUsersProfit, fetchPortfolios]",{"range":"400","text":"401"},"Update the dependencies array to be: [joinedData]",{"range":"402","text":"403"},{"range":"404","text":"380"},{"range":"405","text":"374"},{"range":"406","text":"370"},"Update the dependencies array to be: [fetchUserMoney]",{"range":"407","text":"408"},"Update the dependencies array to be: [getUserInfo]",{"range":"409","text":"410"},{"range":"411","text":"410"},"Update the dependencies array to be: [cashToUpdate]",{"range":"412","text":"413"},[1085,1087],"[params.symbol]",[1338,1340],[1412,1414],"[fetchOneStock, fetchStockMeta]",[2077,2079],"[history, setCurrentUser]",[2714,2716],"[fetchUserMoney, fetchUserProfit, getUserPortfolio]",[3175,3177],"[setUserMoney]",[4368,4398],"[amount, stockToUpdate, price, fetchUserProfit, fetchUserMoney, getUserPortfolio]",[5594,5663],"[currentAmount, stockSellAmount, stockForSell, ifNegative, sellPrice, fetchUserProfit, fetchUserMoney, getUserPortfolio]",[916,918],"[history]",[1015,1017],[1820,1822],"[fetchAllUsersProfit, fetchOptions, fetchTopStocks]",[1873,1887],"[fetchTopStocks, selectValues]",[1034,1036],[2230,2232],"[fetchBigDataList, fetchOptions]",[2287,2301],"[fetchBigDataList, selectValues]",[1907,1909],"[loadingStockOptions]",[2243,2254],"[loadingPeriodOptions, stockLink]",[2310,2317],"[loadingStockOptions, query]",[2373,2380],[2524,2535],"[]",[1478,1480],"[fetchAllUsersProfit, fetchPortfolios]",[1529,1531],"[joinedData]",[1727,1729],[2180,2182],[2659,2661],[2712,2714],"[fetchUserMoney]",[1345,1347],"[getUserInfo]",[1395,1397],[889,891],"[cashToUpdate]"]