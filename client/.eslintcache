[{"/home/michael/repos/invest-me/client/src/index.js":"1","/home/michael/repos/invest-me/client/src/components/Register.js":"2","/home/michael/repos/invest-me/client/src/components/Portfolio.js":"3","/home/michael/repos/invest-me/client/src/components/Header.js":"4","/home/michael/repos/invest-me/client/src/components/Login.js":"5","/home/michael/repos/invest-me/client/src/App.js":"6","/home/michael/repos/invest-me/client/src/components/PrivateRoute.js":"7","/home/michael/repos/invest-me/client/src/components/Home.js":"8","/home/michael/repos/invest-me/client/src/reportWebVitals.js":"9","/home/michael/repos/invest-me/client/src/contexts/Auth.js":"10","/home/michael/repos/invest-me/client/src/components/BigDataList.js":"11","/home/michael/repos/invest-me/client/src/AppStyle.js":"12","/home/michael/repos/invest-me/client/src/components/SideBar.js":"13","/home/michael/repos/invest-me/client/src/network/index.js":"14","/home/michael/repos/invest-me/client/src/recoil/Atom.js":"15"},{"size":573,"mtime":1607792242750,"results":"16","hashOfConfig":"17"},{"size":127,"mtime":1607583694620,"results":"18","hashOfConfig":"17"},{"size":11338,"mtime":1607876085371,"results":"19","hashOfConfig":"17"},{"size":4265,"mtime":1607694091394,"results":"20","hashOfConfig":"17"},{"size":4979,"mtime":1607768077606,"results":"21","hashOfConfig":"17"},{"size":2320,"mtime":1607773147481,"results":"22","hashOfConfig":"17"},{"size":1098,"mtime":1607773268626,"results":"23","hashOfConfig":"17"},{"size":279,"mtime":1607763830472,"results":"24","hashOfConfig":"17"},{"size":362,"mtime":1607532441111,"results":"25","hashOfConfig":"17"},{"size":88,"mtime":1607586116384,"results":"26","hashOfConfig":"17"},{"size":1110,"mtime":1607765965300,"results":"27","hashOfConfig":"17"},{"size":1532,"mtime":1607695473476,"results":"28","hashOfConfig":"17"},{"size":2717,"mtime":1607768245340,"results":"29","hashOfConfig":"17"},{"size":871,"mtime":1607763646895,"results":"30","hashOfConfig":"17"},{"size":129,"mtime":1607792129824,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1atymq2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"/home/michael/repos/invest-me/client/src/index.js",[],["71","72"],"/home/michael/repos/invest-me/client/src/components/Register.js",[],"/home/michael/repos/invest-me/client/src/components/Portfolio.js",["73","74","75","76","77","78","79","80","81","82","83","84"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport network from \"../network/index\";\nimport { useRecoilState } from \"recoil\";\nimport { stocksArrayState } from \"../recoil/Atom\";\nimport { useForm } from \"react-hook-form\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport AsyncSelect from \"react-select/async\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    gridTemplateRows: \"100px 400px\",\n    justifyContent: \"center\",\n  },\n  moneyBar: {\n    display: \"flex\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"25ch\",\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const rows = [\n//   createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n//   createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n//   createData(\"Eclair\", 262, 16.0, 24, 6.0),\n//   createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n//   createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n// ];\n\nconst financial = (x) => {\n  return Number.parseFloat(x).toFixed(2);\n};\n\nexport default function Portfolio() {\n  const classes = useStyles();\n  const [cash, setCash] = useState(0);\n  const [investments, setInvestments] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [openSell, setOpenSell] = useState(false);\n  const [stocksArray, setStocksArray] = useRecoilState(stocksArrayState);\n  const [query, setQuery] = useState(\"\");\n  const [stockToUpdate, setStockToUpdate] = useState(null);\n  const [amount, setAmount] = useState(0);\n  const [price, setPrice] = useState(0);\n  const [value, setValue] = useState(\"\");\n  const [rows, setRows] = useState([]);\n  const [stockSellAmount, setStockSellAmount] = useState(0);\n  const [stockForSell, setStockForSell] = useState(\"\");\n  const [ifNegetive, setIfNegetive] = useState(false);\n  const [sellPrice, setSellPrice] = useState(0);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCloseSell = () => {\n    setOpenSell(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const fetchAllStocks = async () => {\n    try {\n      const { data } = await network.get(\"/stocks/stocks-array\");\n      // setStocksArray(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchAllStocks();\n  }, []);\n\n  // useEffect(() => {\n  //   searchStocks();\n  // }, [query]);\n\n  const fetchUserMoney = useCallback(async () => {\n    try {\n      const {\n        data: { cash },\n      } = await network.get(\"/users/money\");\n      const { data } = await network.get(\"/users/investments\");\n      setCash(cash);\n      setInvestments(financial(data[0].totalCost / 1000));\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const getUserPortfolio = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/users/stocks\");\n      setRows(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const onAddStock = async () => {\n    if (Number(amount) <= 0) {\n      return;\n    }\n    try {\n      const obj = {\n        symbol: stockToUpdate,\n        price: price,\n        amount: Number(amount),\n      };\n      const { data } = await network.post(\"/users/stocks\", obj);\n      getUserPortfolio();\n      setStockToUpdate(\"\");\n      setPrice(\"\");\n      setAmount(0);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const loadingOption = async () => {\n    try {\n      const { data } = await network.get(`/stocks/search?q=${query}`);\n      const maped = data.map((stock) => ({\n        label: stock.title,\n        symbol: stock.symbol,\n        price: stock.lastRate,\n      }));\n      return maped;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  //remove stock\n  const onSellStock = useCallback(async () => {\n    try {\n      const obj = {\n        symbol: parseFloat(stockForSell),\n        amount: -Number(stockSellAmount),\n        negetive: ifNegetive,\n        price: sellPrice,\n      };\n      console.log(obj);\n      const { data } = await network.patch(\"/users/stocks\", obj);\n      setStockForSell(\"\");\n      setStockSellAmount(0);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [sellPrice, ifNegetive, stockForSell, stockSellAmount]);\n\n  const onPressSell = useCallback((value) => {\n    console.log(value);\n    setStockForSell(value.symbol);\n    if (value.yield < 0) {\n      setIfNegetive(true);\n    } else {\n      setIfNegetive(false);\n    }\n    setSellPrice(value[\"Stock.lastRate\"]);\n    setOpenSell(true);\n  }, []);\n\n  const handleInputChange = useCallback((value) => {\n    setQuery(value);\n  }, []);\n\n  const handleSelectChange = (value) => {\n    setStockToUpdate(value.symbol);\n    setPrice(value.price);\n    setValue(value.lable);\n  };\n\n  useEffect(() => {\n    fetchUserMoney();\n    getUserPortfolio();\n  }, []);\n  console.log(query);\n  return (\n    <div className={classes.root}>\n      <div className={classes.moneyBar}>\n        <div>\n          <TextField\n            label=\"Cash\"\n            id=\"outlined-margin-dense\"\n            value={cash}\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"number\"\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"Investments\"\n            id=\"outlined-margin-dense\"\n            value={investments}\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"number\"\n          />\n        </div>\n      </div>\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          new stock\n        </Button>\n        <Dialog\n          fullWidth=\"true\"\n          open={openSell}\n          onClose={handleCloseSell}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\n            Add stock\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Add new stock to your stock portfolio\n            </DialogContentText>\n\n            <TextField\n              label=\"amount\"\n              id=\"outlined-margin-dense\"\n              value={stockSellAmount}\n              className={classes.textField}\n              helperText=\"stock sell amount\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(e) => setStockSellAmount(e.target.value)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleCloseSell} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={onSellStock} color=\"primary\">\n              sell stock\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          fullWidth=\"true\"\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\n            Add stock\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Add new stock to your stock portfolio\n            </DialogContentText>\n            <AsyncSelect\n              cacheOptions\n              defaultOptions\n              hideSelectedOptions={false}\n              cacheOptions\n              // value={stockToUpdate}\n              onChange={handleSelectChange}\n              placeholder={\"slect stock\"}\n              onInputChange={handleInputChange}\n              loadOptions={loadingOption}\n            />\n            <TextField\n              label=\"Dense\"\n              id=\"outlined-margin-dense\"\n              value={amount}\n              className={classes.textField}\n              helperText=\"stock amount\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(e) => setAmount(e.target.value)}\n            />\n            <TextField\n              label=\"price\"\n              id=\"outlined-margin-dense\"\n              value={price}\n              className={classes.textField}\n              helperText=\"stock buying price\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(e) => setPrice(e.target.value)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={onAddStock} color=\"primary\">\n              Add stock\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Stock</TableCell>\n                <TableCell align=\"right\">Symbol</TableCell>\n                <TableCell align=\"right\">Last rate</TableCell>\n                <TableCell align=\"right\">Amount</TableCell>\n                <TableCell align=\"right\">AVG b.price</TableCell>\n                <TableCell align=\"right\">Total value shekel</TableCell>\n                <TableCell align=\"right\">Yield</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.length !== 0 &&\n                rows.map((row) => (\n                  <TableRow key={row.title}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row[\"Stock.title\"]}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.symbol}</TableCell>\n                    <TableCell align=\"right\">{row[\"Stock.lastRate\"]}</TableCell>\n                    <TableCell align=\"right\">{row.totalAmount}</TableCell>\n                    <TableCell align=\"right\">\n                      {financial(row.avgPrice)}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {financial(row.totalCost / 100)}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {financial(row.change)}%\n                    </TableCell>\n                    <button onClick={() => onPressSell(row)}>delete</button>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/Header.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import Toolbar from \"@material-ui/core/Toolbar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AuthApi from \"../contexts/Auth\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header({classes, handleDrawerOpen, drawerOpen, handleDrawerClose }) {\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: drawerOpen,\n        })}\n      >\n        <Toolbar>\n        <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            InvestMe\n          </Typography>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item xs={6} sm={3}>\n              <Typography className={classes.title}>cash</Typography>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Typography className={classes.title}>investments</Typography>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Typography className={classes.title}>total money</Typography>\n            </Grid>\n          </Grid>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    // </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/Login.js",["104","105"],"/home/michael/repos/invest-me/client/src/App.js",[],"/home/michael/repos/invest-me/client/src/components/PrivateRoute.js",["106","107","108","109"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n// import { useAuth } from '../contexts/AuthContext'\nimport AuthApi from \"../contexts/Auth\";\nimport Cookies from \"js-cookie\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  // const { currentUser } = useAuth()\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const history = useHistory();\n\n  useEffect(() => {\n    let rememberMeValue = Cookies.get(\"rememberMe\");\n    let token = Cookies.get(\"accessToken\");\n    if (token) {\n      setCurrentUser({\n        id: Cookies.get(\"userId\"),\n        username: Cookies.get(\"username\"),\n      });\n    } else {\n      history.push(\"/login\");\n    }\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return Cookies.get(\"accessToken\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to=\"/login\n            \"\n          />\n        );\n      }}\n    ></Route>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/Home.js",["110","111","112","113","114","115"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport api from \"../network/index\";\nimport BigDataList from \"./BigDataList\";\nimport _ from \"lodash\";\n\nexport default function Home() {\n\n\n\n\n  return (\n    <div>\n      <div>\n      home\n      </div>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/reportWebVitals.js",[],["116","117"],"/home/michael/repos/invest-me/client/src/contexts/Auth.js",[],"/home/michael/repos/invest-me/client/src/components/BigDataList.js",["118","119"],"import { DataGrid } from \"@material-ui/data-grid\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport network from \"../network/index\";\nimport _ from \"lodash\";\n\nexport default function BigDataList() {\n  const [bigData, setBigData] = useState();\n  const [columns, setColumns] = useState(null);\n  const fetchBigDataList = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/stocks/all\");\n      const oneStock = data[0];\n      const oneStockValues = Object.values(oneStock);\n      const resColumns = Object.keys(oneStock).map((key, i) => {\n        return {\n          field: key,\n          headerName: _.startCase(key),\n          width: 130\n        };\n      });\n      setColumns(resColumns);\n      setBigData(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchBigDataList();\n  }, []);\n\n  return (\n    <div style={{ height: 600, width: \"100%\" }}>\n    {bigData && columns &&\n      <DataGrid\n        rows={bigData}\n        columns={columns}\n        pageSize={20}\n        checkboxSelection\n      />\n    }\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/AppStyle.js",["120"],"/home/michael/repos/invest-me/client/src/components/SideBar.js",["121","122","123","124","125","126","127","128","129","130"],"import { useState } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { Link } from \"react-router-dom\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport GroupIcon from \"@material-ui/icons/Group\";\n\nconst SideBar = ({\n  classes,\n  handleDrawerOpen,\n  drawerOpen,\n  handleDrawerClose,\n}) => {\n  const theme = useTheme();\n\n  const items = [\n    {\n      path: \"/\",\n      title: \"Home\",\n      icon: <HomeIcon />,\n    },\n    {\n      path: \"/all-stocks\",\n      title: \"all stocks\",\n      icon: <BarChartIcon />,\n    },\n    {\n      path: \"/portfolio\",\n      title: \"portfolio\",\n      icon: <WorkIcon />,\n    },\n    {\n      path: \"/compatition\",\n      title: \"compatition\",\n      icon: <GroupIcon />,\n    },\n  ];\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={drawerOpen}\n      BackdropProps={{ invisible: false }}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      ModalProps={{\n        keepMounted: true, // Better open performance on mobile.\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === \"ltr\" ? (\n            <ChevronLeftIcon />\n          ) : (\n            <ChevronRightIcon />\n          )}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {items.map((item, index) => (\n          <Link to={item.path} push>\n            <ListItem button key={item}>\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.title} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default SideBar;\n\n","/home/michael/repos/invest-me/client/src/network/index.js",[],"/home/michael/repos/invest-me/client/src/recoil/Atom.js",["131"],"import { atom, atomFamily } from \"recoil\";\n\nexport const stocksArrayState = atom({\n    key: 'stocksState',\n    default: [],\n  });",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":22,"nodeType":"138","messageId":"139","endLine":2,"endColumn":30},{"ruleId":"136","severity":1,"message":"140","line":20,"column":10,"nodeType":"138","messageId":"139","endLine":20,"endColumn":17},{"ruleId":"136","severity":1,"message":"141","line":21,"column":8,"nodeType":"138","messageId":"139","endLine":21,"endColumn":18},{"ruleId":"136","severity":1,"message":"142","line":22,"column":8,"nodeType":"138","messageId":"139","endLine":22,"endColumn":14},{"ruleId":"136","severity":1,"message":"143","line":66,"column":10,"nodeType":"138","messageId":"139","endLine":66,"endColumn":21},{"ruleId":"136","severity":1,"message":"144","line":66,"column":23,"nodeType":"138","messageId":"139","endLine":66,"endColumn":37},{"ruleId":"136","severity":1,"message":"145","line":71,"column":10,"nodeType":"138","messageId":"139","endLine":71,"endColumn":15},{"ruleId":"136","severity":1,"message":"146","line":91,"column":15,"nodeType":"138","messageId":"139","endLine":91,"endColumn":19},{"ruleId":"136","severity":1,"message":"146","line":138,"column":15,"nodeType":"138","messageId":"139","endLine":138,"endColumn":19},{"ruleId":"136","severity":1,"message":"146","line":172,"column":15,"nodeType":"138","messageId":"139","endLine":172,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":205,"column":6,"nodeType":"149","endLine":205,"endColumn":8,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":289,"column":15,"nodeType":"153","endLine":289,"endColumn":27},{"ruleId":"136","severity":1,"message":"154","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":14},{"ruleId":"136","severity":1,"message":"155","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":24},{"ruleId":"136","severity":1,"message":"156","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":12,"column":22,"nodeType":"138","messageId":"139","endLine":12,"endColumn":30},{"ruleId":"136","severity":1,"message":"157","line":13,"column":8,"nodeType":"138","messageId":"139","endLine":13,"endColumn":14},{"ruleId":"136","severity":1,"message":"158","line":14,"column":8,"nodeType":"138","messageId":"139","endLine":14,"endColumn":19},{"ruleId":"136","severity":1,"message":"159","line":16,"column":8,"nodeType":"138","messageId":"139","endLine":16,"endColumn":12},{"ruleId":"136","severity":1,"message":"160","line":18,"column":8,"nodeType":"138","messageId":"139","endLine":18,"endColumn":15},{"ruleId":"136","severity":1,"message":"161","line":21,"column":8,"nodeType":"138","messageId":"139","endLine":21,"endColumn":23},{"ruleId":"136","severity":1,"message":"162","line":22,"column":8,"nodeType":"138","messageId":"139","endLine":22,"endColumn":24},{"ruleId":"136","severity":1,"message":"163","line":23,"column":8,"nodeType":"138","messageId":"139","endLine":23,"endColumn":16},{"ruleId":"136","severity":1,"message":"164","line":24,"column":8,"nodeType":"138","messageId":"139","endLine":24,"endColumn":20},{"ruleId":"136","severity":1,"message":"165","line":25,"column":8,"nodeType":"138","messageId":"139","endLine":25,"endColumn":20},{"ruleId":"136","severity":1,"message":"166","line":26,"column":8,"nodeType":"138","messageId":"139","endLine":26,"endColumn":17},{"ruleId":"136","severity":1,"message":"167","line":27,"column":8,"nodeType":"138","messageId":"139","endLine":27,"endColumn":16},{"ruleId":"136","severity":1,"message":"168","line":29,"column":7,"nodeType":"138","messageId":"139","endLine":29,"endColumn":16},{"ruleId":"136","severity":1,"message":"169","line":46,"column":10,"nodeType":"138","messageId":"139","endLine":46,"endColumn":21},{"ruleId":"136","severity":1,"message":"170","line":46,"column":23,"nodeType":"138","messageId":"139","endLine":46,"endColumn":37},{"ruleId":"136","severity":1,"message":"171","line":47,"column":9,"nodeType":"138","messageId":"139","endLine":47,"endColumn":21},{"ruleId":"136","severity":1,"message":"169","line":55,"column":10,"nodeType":"138","messageId":"139","endLine":55,"endColumn":21},{"ruleId":"147","severity":1,"message":"172","line":73,"column":6,"nodeType":"149","endLine":73,"endColumn":8,"suggestions":"173"},{"ruleId":"136","severity":1,"message":"174","line":6,"column":22,"nodeType":"138","messageId":"139","endLine":6,"endColumn":26},{"ruleId":"136","severity":1,"message":"169","line":11,"column":10,"nodeType":"138","messageId":"139","endLine":11,"endColumn":21},{"ruleId":"136","severity":1,"message":"175","line":15,"column":9,"nodeType":"138","messageId":"139","endLine":15,"endColumn":24},{"ruleId":"147","severity":1,"message":"172","line":25,"column":6,"nodeType":"149","endLine":25,"endColumn":8,"suggestions":"176"},{"ruleId":"136","severity":1,"message":"177","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"178","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":38},{"ruleId":"136","severity":1,"message":"179","line":1,"column":40,"nodeType":"138","messageId":"139","endLine":1,"endColumn":49},{"ruleId":"136","severity":1,"message":"180","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":11},{"ruleId":"136","severity":1,"message":"181","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":19},{"ruleId":"136","severity":1,"message":"182","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":9},{"ruleId":"132","replacedBy":"183"},{"ruleId":"134","replacedBy":"184"},{"ruleId":"136","severity":1,"message":"185","line":13,"column":13,"nodeType":"138","messageId":"139","endLine":13,"endColumn":27},{"ruleId":"147","severity":1,"message":"186","line":30,"column":6,"nodeType":"149","endLine":30,"endColumn":8,"suggestions":"187"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":22,"nodeType":"138","messageId":"139","endLine":1,"endColumn":30},{"ruleId":"136","severity":1,"message":"177","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":18},{"ruleId":"136","severity":1,"message":"158","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":19},{"ruleId":"136","severity":1,"message":"188","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":12},{"ruleId":"136","severity":1,"message":"189","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":20},{"ruleId":"136","severity":1,"message":"190","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":14},{"ruleId":"136","severity":1,"message":"191","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":15},{"ruleId":"136","severity":1,"message":"192","line":10,"column":8,"nodeType":"138","messageId":"139","endLine":10,"endColumn":18},{"ruleId":"136","severity":1,"message":"193","line":13,"column":8,"nodeType":"138","messageId":"139","endLine":13,"endColumn":16},{"ruleId":"136","severity":1,"message":"166","line":19,"column":8,"nodeType":"138","messageId":"139","endLine":19,"endColumn":17},{"ruleId":"136","severity":1,"message":"167","line":20,"column":8,"nodeType":"138","messageId":"139","endLine":20,"endColumn":16},{"ruleId":"136","severity":1,"message":"194","line":1,"column":16,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","'useForm' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'stocksArray' is assigned a value but never used.","'setStocksArray' is assigned a value but never used.","'value' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUserMoney' and 'getUserPortfolio'. Either include them or remove the dependency array.","ArrayExpression",["197"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'Drawer' is defined but never used.","'CssBaseline' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'useStyles' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["198"],"'Link' is defined but never used.","'rememberMeValue' is assigned a value but never used.",["199"],"'useState' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'api' is defined but never used.","'BigDataList' is defined but never used.","'_' is defined but never used.",["195"],["196"],"'oneStockValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchBigDataList'. Either include it or remove the dependency array.",["200"],"'clsx' is defined but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'atomFamily' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"203","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [fetchUserMoney, getUserPortfolio]",{"range":"208","text":"209"},"Update the dependencies array to be: [history, setCurrentUser]",{"range":"210","text":"211"},{"range":"212","text":"211"},"Update the dependencies array to be: [fetchBigDataList]",{"range":"213","text":"214"},[5750,5752],"[fetchUserMoney, getUserPortfolio]",[1963,1965],"[history, setCurrentUser]",[821,823],[871,873],"[fetchBigDataList]"]