[{"/home/michael/repos/invest-me/client/src/components/OneStock.js":"1","/home/michael/repos/invest-me/client/src/components/Login.js":"2","/home/michael/repos/invest-me/client/src/components/Portfolio.js":"3","/home/michael/repos/invest-me/client/src/components/StocksTable.js":"4","/home/michael/repos/invest-me/client/src/AppStyle.js":"5","/home/michael/repos/invest-me/client/src/index.js":"6","/home/michael/repos/invest-me/client/src/components/PrivateRoute.js":"7","/home/michael/repos/invest-me/client/src/components/Loading.js":"8","/home/michael/repos/invest-me/client/src/components/Home.js":"9","/home/michael/repos/invest-me/client/src/components/BigDataList.js":"10","/home/michael/repos/invest-me/client/src/components/Calculator.js":"11","/home/michael/repos/invest-me/client/src/components/Competition.js":"12","/home/michael/repos/invest-me/client/src/reportWebVitals.js":"13","/home/michael/repos/invest-me/client/src/components/Header.js":"14","/home/michael/repos/invest-me/client/src/contexts/Auth.js":"15","/home/michael/repos/invest-me/client/src/components/Profile.js":"16","/home/michael/repos/invest-me/client/src/network/index.js":"17"},{"size":1517,"mtime":1608910753367,"results":"18","hashOfConfig":"19"},{"size":4986,"mtime":1609004175767,"results":"20","hashOfConfig":"19"},{"size":10587,"mtime":1609011083863,"results":"21","hashOfConfig":"19"},{"size":3388,"mtime":1609005142397,"results":"22","hashOfConfig":"19"},{"size":1532,"mtime":1607695473476,"results":"23","hashOfConfig":"19"},{"size":573,"mtime":1607792242750,"results":"24","hashOfConfig":"19"},{"size":1292,"mtime":1608372249794,"results":"25","hashOfConfig":"19"},{"size":492,"mtime":1609011601959,"results":"26","hashOfConfig":"19"},{"size":3114,"mtime":1609013646450,"results":"27","hashOfConfig":"19"},{"size":2970,"mtime":1609014644522,"results":"28","hashOfConfig":"19"},{"size":4264,"mtime":1609013991536,"results":"29","hashOfConfig":"19"},{"size":2251,"mtime":1609014104026,"results":"30","hashOfConfig":"19"},{"size":362,"mtime":1607532441111,"results":"31","hashOfConfig":"19"},{"size":4003,"mtime":1608908623979,"results":"32","hashOfConfig":"19"},{"size":88,"mtime":1607586116384,"results":"33","hashOfConfig":"19"},{"size":4131,"mtime":1609015465907,"results":"34","hashOfConfig":"19"},{"size":1013,"mtime":1608279280275,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1atymq2",{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/michael/repos/invest-me/client/src/components/OneStock.js",["79","80","81","82"],"/home/michael/repos/invest-me/client/src/components/Login.js",["83","84"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Paper,\n  Avatar,\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport network from \"../network/index\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport AuthApi from \"../contexts/Auth\";\nimport Cookies from \"js-cookie\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n}));\n\nfunction Login() {\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const classes = useStyles();\n  const [email, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    let rememberMeValue = Cookies.get(\"rememberMe\");\n    let token = Cookies.get(\"username\");\n    if (rememberMeValue && token) {\n      setCurrentUser({\n        id: Cookies.get(\"userId\"),\n        username: Cookies.get(\"username\"),\n      });\n      history.push(\"/\");\n    }\n  }, []);\n\n  const login = async (e) => {\n    if (!email || !password) {\n      return handleError(\"please enter email and password\");\n    }\n    let body = {\n      email: email,\n      password: password,\n      rememberMe: rememberMe,\n    };\n    try {\n      const { data } = await network.post(\"/auth/login\", body);\n      if (data.success !== true) {\n        return;\n      }\n      if (rememberMe) {\n        Cookies.set(\"rememberMe\", true);\n      } else {\n        Cookies.set(\"rememberMe\", false);\n      }\n      setCurrentUser({\n        id: Cookies.get(\"userId\"),\n        username: Cookies.get(\"username\"),\n      });\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n      handleError(\"invalid email or password\");\n    }\n  };\n\n  const handleError = useCallback((message) => {\n    setError(message)\n    setTimeout(() => {\n      setError(null)\n    }, 3000)\n  }, []);\n\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={(e) => e.preventDefault() && false}\n        >\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"Email\">Email</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              autoComplete=\"off\"\n              autoFocus\n              value={email}\n              onChange={(e) => setUser(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"off\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </FormControl>\n          <label>\n            <input\n              name=\"rememberMe\"\n              checked={rememberMe}\n              onChange={(e) => setRememberMe(() => !rememberMe)}\n              type=\"checkbox\"\n            />\n            Remember me\n          </label>\n          {error && (\n            <div>\n              <label style={{ color: \"red\" }}>{error}</label>\n            </div>\n          )}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={login}\n            className={classes.submit}\n          >\n            Sign in\n          </Button>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            component={Link}\n            to=\"/register\"\n            className={classes.submit}\n          >\n            Register\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n}\n\nexport default Login;\n","/home/michael/repos/invest-me/client/src/components/Portfolio.js",["85","86","87","88","89","90","91","92","93","94"],"/home/michael/repos/invest-me/client/src/components/StocksTable.js",["95","96","97"],"import React, { useCallback } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { financial } from \"../functions/helpers\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function StocksTable({ tableRows, onPressSell }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const handleStockClick = useCallback((symbol) => {\n    history.push(`/one-stock/${symbol}`);\n  }, []);\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Stock</TableCell>\n              <TableCell align=\"right\">Symbol</TableCell>\n              <TableCell align=\"right\">Last rate</TableCell>\n              <TableCell align=\"right\">Amount</TableCell>\n              <TableCell align=\"right\">AVG b.price</TableCell>\n              <TableCell align=\"right\">\n                Total value{\" \"}\n                <img\n                  height=\"15px\"\n                  width=\"15px\"\n                  src=\"https://img.icons8.com/material-outlined/24/000000/shekel.png\"\n                />\n              </TableCell>\n              <TableCell align=\"right\">\n                Profit{\" \"}\n                <img\n                  height=\"15px\"\n                  width=\"15px\"\n                  src=\"https://img.icons8.com/material-outlined/24/000000/shekel.png\"\n                />\n              </TableCell>\n              <TableCell align=\"right\">Yield</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableRows.length !== 0 &&\n              tableRows.map((row) => (\n                <TableRow key={row.title}>\n                  <TableCell\n                    onClick={() => handleStockClick(row.symbol)}\n                    style={{ cursor: \"pointer\" }}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    {row.title}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.symbol}</TableCell>\n                  <TableCell align=\"right\">{row.lastRate}</TableCell>\n                  <TableCell align=\"right\">{row.currentAmount}</TableCell>\n\n                  <TableCell align=\"right\">{financial(row.avgPrice)}</TableCell>\n                  <TableCell align=\"right\">\n                    {financial(row.currentPrice / 100)}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {financial(row.profitInShekels)}\n                  </TableCell>\n                  <TableCell align=\"right\">{financial(row.change)}%</TableCell>\n                  {onPressSell && (\n                    <Button onClick={() => onPressSell(row)}>sell</Button>\n                  )}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/AppStyle.js",["98"],"import { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));",["99","100"],"/home/michael/repos/invest-me/client/src/index.js",[],"/home/michael/repos/invest-me/client/src/components/PrivateRoute.js",["101","102","103"],"/home/michael/repos/invest-me/client/src/components/Loading.js",[],"/home/michael/repos/invest-me/client/src/components/Home.js",["104","105","106"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport Select from \"react-select\";\nimport network from \"../network/index\";\nimport { startCase } from \"lodash\";\nimport GenericTable from \"./GenericTable\";\nimport TopStocksTable from \"./TopStocksTable\";\nimport { useStyles } from \"./HomeStyles\";\nimport Loading from './Loading'\n\nconst stockHeaders = [\"Stock\", \"Last Rate\", \"Yield\"];\nconst usersHeaders = [\n  \"username\",\n  \"BuyingPrice\",\n  \"Current value\",\n  \"Total profit\",\n  \"Yield\",\n];\n\nexport default function Home() {\n  const [options, setOptions] = useState([]);\n  const [selectValues, setSelectValues] = useState(\"lastThirtyDays\");\n  const [stockRows, setStocksRows] = useState([]);\n  const [usersRows, setUsersRows] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const classes = useStyles();\n\n  const handleSelectChange = useCallback((e) => {\n    setSelectValues(e.value);\n  }, []);\n\n  const fetchOptions = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/stocks/periods\");\n      data.forEach((period) => (period.label = startCase(period.label)));\n      setOptions(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchAllUsersProfit = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-users-profit\");\n      setUsersRows(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchTopStocks = useCallback(async () => {\n    try {\n      const { data } = await network.post(\"/stocks/top-stocks\", {\n        atr: selectValues,\n      });\n      setStocksRows(data);\n      setLoading(false)\n    } catch (err) {\n      console.error(err);\n    }\n  }, [selectValues]);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchTopStocks();\n    fetchAllUsersProfit();\n  }, []);\n\n  useEffect(() => {\n    fetchTopStocks();\n  }, [selectValues]);\n\nif(loading){\n  return <Loading type={\"spin\"} color={\"blue\"} />\n}\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.topStocks}>\n          <div className={classes.header}>\n            <h3 className={classes.headerTitle}>top stocks</h3>\n            <Select\n              name=\"colors\"\n              defaultValue={selectValues}\n              options={options}\n              onChange={handleSelectChange}\n              className={classes.textField}\n              classNamePrefix=\"select\"\n              placeholder=\"select period\"\n            />\n          </div>\n          <div>\n            <TopStocksTable\n              classes={classes}\n              headers={stockHeaders}\n              rows={stockRows}\n            />\n          </div>\n        </div>\n        <div>\n          <div>\n            <div className={classes.topInvestors}>\n              <h3 className={classes.headerTitle}>Top investors</h3>\n              <GenericTable\n                headers={usersHeaders}\n                rows={usersRows}\n                classes={classes}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/BigDataList.js",["107","108","109","110"],"import { DataGrid } from \"@material-ui/data-grid\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport network from \"../network/index\";\nimport _ from \"lodash\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"react-select\";\nimport { useHistory } from 'react-router-dom'\nimport Loading from './Loading'\nimport { startCase, camelCase } from 'lodash'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  control: {\n    padding: \"2px\",\n    marginBottom: \"1fr\",\n  },\n  dataGrid: { cursor: \"pointer\", height: 600, width: \"100%\" },\n}));\n\nexport default function BigDataList() {\n  const history = useHistory()\n  const [bigData, setBigData] = useState();\n  const [columns, setColumns] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [selectValues, setSelectValues] = useState(null);\n  const [loading, setLoading] = useState(true)\n  const classes = useStyles();\n\n\n  const handleCellClick = useCallback((cell) => {\n    history.push(`/one-stock/${cell.row.symbol}`)\n  }, []);\n\n  // const handleClickOpen = useCallback(() => {\n  //   setOpen(true);\n  // }, []);\n\n  // const handleClose = useCallback(() => {\n  //   setOpen(false);\n  // }, []);\n\n  \n  const handleSelectChange = useCallback((e) => {\n    setSelectValues(Array.isArray(e) ? e.map((x) => x.value) : []);\n  }, []);\n  \n  const fetchOptions = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/stocks/periods\");\n      const mapped = data.map((option) => ({label: startCase(option.label), value: option.value}))\n      setOptions(mapped);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n  \n  const fetchBigDataList = useCallback(async () => {\n    try {\n      const { data } = await network.post(\"/stocks/all\", selectValues);\n      const oneStock = data[0];\n      const resColumns = Object.keys(oneStock).map((key, i) => {\n        return {\n          field: key,\n          headerName: _.startCase(key),\n          width: 130,\n        };\n      });\n      setLoading(false);\n      setColumns(resColumns);\n      setBigData(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [selectValues]);\n  \n  useEffect(() => {\n    fetchOptions();\n    fetchBigDataList();\n  }, []);\n  \n  useEffect(() => {\n    fetchBigDataList();\n  }, [selectValues]);\n  \n  if(loading){\n    return <Loading type={\"spin\"} color={\"blue\"} />\n  }\n  \n  \n  return (\n    <div className={classes.root}>\n      <div className={classes.control}>\n        <Select\n          isMulti\n          name=\"colors\"\n          options={options}\n          onChange={handleSelectChange}\n          className=\"basic-multi-select\"\n          classNamePrefix=\"select\"\n        />\n      </div>\n      <div className={classes.dataGrid}>\n        {bigData && columns && (\n          <DataGrid\n            onCellClick={handleCellClick}\n            rows={bigData}\n            columns={columns}\n            pageSize={20}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/Calculator.js",["111","112"],"/home/michael/repos/invest-me/client/src/components/Competition.js",["113","114"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport network from \"../network/index\";\nimport useStyles from \"./CompetitionStyles\";\nimport StocksTable from \"./StocksTable\";\nimport GenericTable from \"./GenericTable\";\nimport Loading from './Loading'\n\nconst usersHeaders = [\n  \"username\",\n  \"BuyingPrice\",\n  \"Current value\",\n  \"Total profit\",\n  \"Yield\",\n];\n\nexport default function Competition() {\n  const classes = useStyles();\n  const [usersData, setUsersData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchPortfolios = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-portfolios\");\n      const array = Object.entries(data);\n      return array;\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchAllUsersProfit = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-users-profit\");\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const joinedData = useCallback(async () => {\n    Promise.all([fetchPortfolios(), fetchAllUsersProfit()]).then((ans) => {\n      const newArr = [];\n      for (let i = 0; i < ans[0].length; i++) {\n        for (let j = 0; j < ans[1].length; j++) {\n          if (ans[0][i][0] === ans[1][j][\"username\"]) {\n            newArr.push([ans[0][i], [ans[1][j]]]);\n          }\n        }\n      }\n      setUsersData(newArr);\n      setLoading(false)\n    });\n  }, []);\n  \n  useEffect(() => {\n    joinedData();\n  }, []);\n\n  if(loading){\n    return <Loading type={\"spin\"} color={\"blue\"} />\n  }\n  \n  return (\n    <div className={classes.root}>\n      {usersData &&\n        usersData.map((portfolio, i) => (\n          <div className={classes.tableWrapper}>\n            <h3 className={classes.username}>{portfolio[0][0]}</h3>\n            <div className={classes.table}>\n              <StocksTable key={i} tableRows={portfolio[0][1]} />\n            </div>\n            <div className={classes.table}>\n              <GenericTable\n                key={i}\n                headers={usersHeaders}\n                rows={portfolio[1]}\n                classes={classes}\n              />\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/reportWebVitals.js",[],["115","116"],"/home/michael/repos/invest-me/client/src/components/Header.js",["117","118","119","120","121","122"],"import Toolbar from \"@material-ui/core/Toolbar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AuthApi from \"../contexts/Auth\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport network from \"../network/index\";\n\nexport default function Header({\n  classes,\n  handleDrawerOpen,\n  drawerOpen,\n}) {\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const history = useHistory();\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleProfile = useCallback(() => {\n    setAnchorEl(null);\n    history.push(\"/profile\");\n  }, []);\n\n  const handleLogout = useCallback(async () => {\n    try {\n      await network.post(\"/auth/logout\", {\n        token: Cookies.get(\"refreshToken\"),\n      });\n      Cookies.remove(\"accessToken\");\n      Cookies.remove(\"userId\");\n      Cookies.remove(\"refreshToken\");\n      Cookies.remove(\"rememberMe\");\n      Cookies.remove(\"username\");\n      setCurrentUser(null);\n      history.push(\"/login\");\n      setAnchorEl(null);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: drawerOpen,\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n          className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          InvestMe\n        </Typography>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={6} sm={3}>\n            {/* <Typography className={classes.title}>cash</Typography> */}\n          </Grid>\n          <Grid item xs={6} sm={3}>\n            {/* <Typography className={classes.title}>investments</Typography> */}\n          </Grid>\n          <Grid item xs={6} sm={3}>\n            {/* <Typography className={classes.title}>total money</Typography> */}\n          </Grid>\n        </Grid>\n        {auth && (\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleLogout}>logout</MenuItem>\n              <MenuItem onClick={handleProfile}>My account</MenuItem>\n            </Menu>\n          </div>\n        )}\n      </Toolbar>\n    </AppBar>\n    // </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/contexts/Auth.js",[],"/home/michael/repos/invest-me/client/src/components/Profile.js",["123","124","125"],"/home/michael/repos/invest-me/client/src/network/index.js",[],{"ruleId":"126","severity":1,"message":"127","line":5,"column":22,"nodeType":"128","messageId":"129","endLine":5,"endColumn":30},{"ruleId":"130","severity":1,"message":"131","line":34,"column":6,"nodeType":"132","endLine":34,"endColumn":8,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"131","line":45,"column":6,"nodeType":"132","endLine":45,"endColumn":8,"suggestions":"134"},{"ruleId":"130","severity":1,"message":"135","line":50,"column":6,"nodeType":"132","endLine":50,"endColumn":8,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"137","line":54,"column":10,"nodeType":"128","messageId":"129","endLine":54,"endColumn":21},{"ruleId":"130","severity":1,"message":"138","line":72,"column":6,"nodeType":"132","endLine":72,"endColumn":8,"suggestions":"139"},{"ruleId":"126","severity":1,"message":"140","line":11,"column":8,"nodeType":"128","messageId":"129","endLine":11,"endColumn":18},{"ruleId":"126","severity":1,"message":"141","line":36,"column":10,"nodeType":"128","messageId":"129","endLine":36,"endColumn":15},{"ruleId":"126","severity":1,"message":"142","line":62,"column":15,"nodeType":"128","messageId":"129","endLine":62,"endColumn":19},{"ruleId":"130","severity":1,"message":"143","line":72,"column":6,"nodeType":"132","endLine":72,"endColumn":8,"suggestions":"144"},{"ruleId":"126","severity":1,"message":"142","line":124,"column":15,"nodeType":"128","messageId":"129","endLine":124,"endColumn":19},{"ruleId":"130","severity":1,"message":"145","line":133,"column":6,"nodeType":"132","endLine":133,"endColumn":36,"suggestions":"146"},{"ruleId":"126","severity":1,"message":"142","line":165,"column":15,"nodeType":"128","messageId":"129","endLine":165,"endColumn":19},{"ruleId":"130","severity":1,"message":"145","line":173,"column":6,"nodeType":"132","endLine":173,"endColumn":75,"suggestions":"147"},{"ruleId":"130","severity":1,"message":"148","line":200,"column":6,"nodeType":"132","endLine":200,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":303,"column":15,"nodeType":"152","endLine":303,"endColumn":27},{"ruleId":"130","severity":1,"message":"153","line":26,"column":6,"nodeType":"132","endLine":26,"endColumn":8,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":41,"column":17,"nodeType":"157","endLine":45,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":49,"column":17,"nodeType":"157","endLine":53,"endColumn":19},{"ruleId":"126","severity":1,"message":"127","line":1,"column":22,"nodeType":"128","messageId":"129","endLine":1,"endColumn":30},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"126","severity":1,"message":"162","line":6,"column":22,"nodeType":"128","messageId":"129","endLine":6,"endColumn":26},{"ruleId":"126","severity":1,"message":"137","line":11,"column":10,"nodeType":"128","messageId":"129","endLine":11,"endColumn":21},{"ruleId":"130","severity":1,"message":"138","line":30,"column":6,"nodeType":"132","endLine":30,"endColumn":8,"suggestions":"163"},{"ruleId":"126","severity":1,"message":"164","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":9},{"ruleId":"130","severity":1,"message":"165","line":68,"column":6,"nodeType":"132","endLine":68,"endColumn":8,"suggestions":"166"},{"ruleId":"130","severity":1,"message":"167","line":72,"column":6,"nodeType":"132","endLine":72,"endColumn":20,"suggestions":"168"},{"ruleId":"126","severity":1,"message":"169","line":9,"column":21,"nodeType":"128","messageId":"129","endLine":9,"endColumn":30},{"ruleId":"130","severity":1,"message":"153","line":32,"column":6,"nodeType":"132","endLine":32,"endColumn":8,"suggestions":"170"},{"ruleId":"130","severity":1,"message":"171","line":79,"column":6,"nodeType":"132","endLine":79,"endColumn":8,"suggestions":"172"},{"ruleId":"130","severity":1,"message":"173","line":83,"column":6,"nodeType":"132","endLine":83,"endColumn":20,"suggestions":"174"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":30},{"ruleId":"130","severity":1,"message":"175","line":48,"column":6,"nodeType":"132","endLine":48,"endColumn":17,"suggestions":"176"},{"ruleId":"130","severity":1,"message":"177","line":53,"column":6,"nodeType":"132","endLine":53,"endColumn":8,"suggestions":"178"},{"ruleId":"130","severity":1,"message":"179","line":57,"column":6,"nodeType":"132","endLine":57,"endColumn":8,"suggestions":"180"},{"ruleId":"158","replacedBy":"181"},{"ruleId":"160","replacedBy":"182"},{"ruleId":"126","severity":1,"message":"183","line":9,"column":10,"nodeType":"128","messageId":"129","endLine":9,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":9,"column":22,"nodeType":"128","messageId":"129","endLine":9,"endColumn":30},{"ruleId":"126","severity":1,"message":"137","line":27,"column":10,"nodeType":"128","messageId":"129","endLine":27,"endColumn":21},{"ruleId":"126","severity":1,"message":"184","line":29,"column":9,"nodeType":"128","messageId":"129","endLine":29,"endColumn":21},{"ruleId":"130","severity":1,"message":"153","line":44,"column":6,"nodeType":"132","endLine":44,"endColumn":8,"suggestions":"185"},{"ruleId":"130","severity":1,"message":"186","line":62,"column":6,"nodeType":"132","endLine":62,"endColumn":8,"suggestions":"187"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":30},{"ruleId":"130","severity":1,"message":"188","line":51,"column":6,"nodeType":"132","endLine":51,"endColumn":8,"suggestions":"189"},{"ruleId":"130","severity":1,"message":"190","line":55,"column":6,"nodeType":"132","endLine":55,"endColumn":8,"suggestions":"191"},"no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'params.symbol'. Either include it or remove the dependency array.","ArrayExpression",["192"],["193"],"React Hook useEffect has missing dependencies: 'fetchOneStock' and 'fetchStockMeta'. Either include them or remove the dependency array.",["194"],"'currentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["195"],"'Typography' is defined but never used.","'value' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserProfit'. Either include it or remove the dependency array.",["196"],"React Hook useCallback has a missing dependency: 'getUserPortfolio'. Either include it or remove the dependency array.",["197"],["198"],"React Hook useEffect has missing dependencies: 'fetchUserMoney' and 'getUserPortfolio'. Either include them or remove the dependency array.",["199"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["200"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["201"],"no-negated-in-lhs",["202"],"'Link' is defined but never used.",["203"],"'_' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchAllUsersProfit', 'fetchOptions', and 'fetchTopStocks'. Either include them or remove the dependency array.",["204"],"React Hook useEffect has a missing dependency: 'fetchTopStocks'. Either include it or remove the dependency array.",["205"],"'camelCase' is defined but never used.",["206"],"React Hook useEffect has missing dependencies: 'fetchBigDataList' and 'fetchOptions'. Either include them or remove the dependency array.",["207"],"React Hook useEffect has a missing dependency: 'fetchBigDataList'. Either include it or remove the dependency array.",["208"],"React Hook useEffect has a missing dependency: 'loadingPeriodOptions'. Either include it or remove the dependency array.",["209"],"React Hook useCallback has missing dependencies: 'fetchAllUsersProfit' and 'fetchPortfolios'. Either include them or remove the dependency array.",["210"],"React Hook useEffect has a missing dependency: 'joinedData'. Either include it or remove the dependency array.",["211"],["201"],["202"],"'makeStyles' is defined but never used.","'handleChange' is assigned a value but never used.",["212"],"React Hook useCallback has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["213"],"React Hook useCallback has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["214"],"React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["215"],{"desc":"216","fix":"217"},{"desc":"216","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"231","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"231","fix":"249"},{"desc":"221","fix":"250"},{"desc":"251","fix":"252"},{"desc":"251","fix":"253"},"Update the dependencies array to be: [params.symbol]",{"range":"254","text":"255"},{"range":"256","text":"255"},"Update the dependencies array to be: [fetchOneStock, fetchStockMeta]",{"range":"257","text":"258"},"Update the dependencies array to be: [history, setCurrentUser]",{"range":"259","text":"260"},"Update the dependencies array to be: [fetchUserProfit]",{"range":"261","text":"262"},"Update the dependencies array to be: [amount, stockToUpdate, price, getUserPortfolio]",{"range":"263","text":"264"},"Update the dependencies array to be: [currentAmount, stockSellAmount, stockForSell, ifNegative, sellPrice, getUserPortfolio]",{"range":"265","text":"266"},"Update the dependencies array to be: [fetchUserMoney, getUserPortfolio]",{"range":"267","text":"268"},"Update the dependencies array to be: [history]",{"range":"269","text":"270"},{"range":"271","text":"260"},"Update the dependencies array to be: [fetchAllUsersProfit, fetchOptions, fetchTopStocks]",{"range":"272","text":"273"},"Update the dependencies array to be: [fetchTopStocks, selectValues]",{"range":"274","text":"275"},{"range":"276","text":"270"},"Update the dependencies array to be: [fetchBigDataList, fetchOptions]",{"range":"277","text":"278"},"Update the dependencies array to be: [fetchBigDataList, selectValues]",{"range":"279","text":"280"},"Update the dependencies array to be: [loadingPeriodOptions, stockLink]",{"range":"281","text":"282"},"Update the dependencies array to be: [fetchAllUsersProfit, fetchPortfolios]",{"range":"283","text":"284"},"Update the dependencies array to be: [joinedData]",{"range":"285","text":"286"},{"range":"287","text":"270"},{"range":"288","text":"260"},"Update the dependencies array to be: [getUserInfo]",{"range":"289","text":"290"},{"range":"291","text":"290"},[982,984],"[params.symbol]",[1235,1237],[1309,1311],"[fetchOneStock, fetchStockMeta]",[1975,1977],"[history, setCurrentUser]",[2408,2410],"[fetchUserProfit]",[3865,3895],"[amount, stockToUpdate, price, getUserPortfolio]",[4923,4992],"[currentAmount, stockSellAmount, stockForSell, ifNegative, sellPrice, getUserPortfolio]",[5600,5602],"[fetchUserMoney, getUserPortfolio]",[916,918],"[history]",[1015,1017],[1843,1845],"[fetchAllUsersProfit, fetchOptions, fetchTopStocks]",[1896,1910],"[fetchTopStocks, selectValues]",[1034,1036],[2230,2232],"[fetchBigDataList, fetchOptions]",[2287,2301],"[fetchBigDataList, selectValues]",[1334,1345],"[loadingPeriodOptions, stockLink]",[1478,1480],"[fetchAllUsersProfit, fetchPortfolios]",[1529,1531],"[joinedData]",[1453,1455],[1932,1934],[1345,1347],"[getUserInfo]",[1395,1397]]