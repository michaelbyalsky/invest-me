[{"/home/michael/repos/invest-me/client/src/components/OneStock.js":"1","/home/michael/repos/invest-me/client/src/components/Login.js":"2","/home/michael/repos/invest-me/client/src/components/Portfolio.js":"3","/home/michael/repos/invest-me/client/src/components/StocksTable.js":"4","/home/michael/repos/invest-me/client/src/AppStyle.js":"5","/home/michael/repos/invest-me/client/src/index.js":"6","/home/michael/repos/invest-me/client/src/components/PrivateRoute.js":"7","/home/michael/repos/invest-me/client/src/components/Loading.js":"8","/home/michael/repos/invest-me/client/src/components/Home.js":"9","/home/michael/repos/invest-me/client/src/components/BigDataList.js":"10","/home/michael/repos/invest-me/client/src/components/Calculator.js":"11","/home/michael/repos/invest-me/client/src/components/Competition.js":"12","/home/michael/repos/invest-me/client/src/reportWebVitals.js":"13","/home/michael/repos/invest-me/client/src/components/Header.js":"14","/home/michael/repos/invest-me/client/src/contexts/Auth.js":"15","/home/michael/repos/invest-me/client/src/components/Profile.js":"16","/home/michael/repos/invest-me/client/src/network/index.js":"17","/home/michael/repos/invest-me/client/src/components/Register.js":"18","/home/michael/repos/invest-me/client/src/components/GenericDialog.js":"19","/home/michael/repos/invest-me/client/src/components/SmallLoading.js":"20"},{"size":1517,"mtime":1608910753367,"results":"21","hashOfConfig":"22"},{"size":5252,"mtime":1609077020211,"results":"23","hashOfConfig":"22"},{"size":10601,"mtime":1609066477628,"results":"24","hashOfConfig":"22"},{"size":3388,"mtime":1609005142397,"results":"25","hashOfConfig":"22"},{"size":1532,"mtime":1607695473476,"results":"26","hashOfConfig":"22"},{"size":573,"mtime":1607792242750,"results":"27","hashOfConfig":"22"},{"size":1292,"mtime":1608372249794,"results":"28","hashOfConfig":"22"},{"size":491,"mtime":1609076464791,"results":"29","hashOfConfig":"22"},{"size":3114,"mtime":1609013646450,"results":"30","hashOfConfig":"22"},{"size":2970,"mtime":1609014644522,"results":"31","hashOfConfig":"22"},{"size":5339,"mtime":1609068051610,"results":"32","hashOfConfig":"22"},{"size":2251,"mtime":1609014104026,"results":"33","hashOfConfig":"22"},{"size":362,"mtime":1607532441111,"results":"34","hashOfConfig":"22"},{"size":4003,"mtime":1608908623979,"results":"35","hashOfConfig":"22"},{"size":88,"mtime":1607586116384,"results":"36","hashOfConfig":"22"},{"size":4131,"mtime":1609015465907,"results":"37","hashOfConfig":"22"},{"size":1013,"mtime":1608279280275,"results":"38","hashOfConfig":"22"},{"size":7071,"mtime":1609075870156,"results":"39","hashOfConfig":"22"},{"size":1166,"mtime":1609075720030,"results":"40","hashOfConfig":"22"},{"size":452,"mtime":1609077163165,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1atymq2",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/michael/repos/invest-me/client/src/components/OneStock.js",["92","93","94","95"],"/home/michael/repos/invest-me/client/src/components/Login.js",["96","97"],"/home/michael/repos/invest-me/client/src/components/Portfolio.js",["98","99","100","101","102","103","104","105"],"/home/michael/repos/invest-me/client/src/components/StocksTable.js",["106","107","108"],"import React, { useCallback } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { financial } from \"../functions/helpers\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function StocksTable({ tableRows, onPressSell }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const handleStockClick = useCallback((symbol) => {\n    history.push(`/one-stock/${symbol}`);\n  }, []);\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Stock</TableCell>\n              <TableCell align=\"right\">Symbol</TableCell>\n              <TableCell align=\"right\">Last rate</TableCell>\n              <TableCell align=\"right\">Amount</TableCell>\n              <TableCell align=\"right\">AVG b.price</TableCell>\n              <TableCell align=\"right\">\n                Total value{\" \"}\n                <img\n                  height=\"15px\"\n                  width=\"15px\"\n                  src=\"https://img.icons8.com/material-outlined/24/000000/shekel.png\"\n                />\n              </TableCell>\n              <TableCell align=\"right\">\n                Profit{\" \"}\n                <img\n                  height=\"15px\"\n                  width=\"15px\"\n                  src=\"https://img.icons8.com/material-outlined/24/000000/shekel.png\"\n                />\n              </TableCell>\n              <TableCell align=\"right\">Yield</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableRows.length !== 0 &&\n              tableRows.map((row) => (\n                <TableRow key={row.title}>\n                  <TableCell\n                    onClick={() => handleStockClick(row.symbol)}\n                    style={{ cursor: \"pointer\" }}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    {row.title}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.symbol}</TableCell>\n                  <TableCell align=\"right\">{row.lastRate}</TableCell>\n                  <TableCell align=\"right\">{row.currentAmount}</TableCell>\n\n                  <TableCell align=\"right\">{financial(row.avgPrice)}</TableCell>\n                  <TableCell align=\"right\">\n                    {financial(row.currentPrice / 100)}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {financial(row.profitInShekels)}\n                  </TableCell>\n                  <TableCell align=\"right\">{financial(row.change)}%</TableCell>\n                  {onPressSell && (\n                    <Button onClick={() => onPressSell(row)}>sell</Button>\n                  )}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/AppStyle.js",["109"],"import { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));",["110","111"],"/home/michael/repos/invest-me/client/src/index.js",[],"/home/michael/repos/invest-me/client/src/components/PrivateRoute.js",["112","113","114"],"/home/michael/repos/invest-me/client/src/components/Loading.js",[],"/home/michael/repos/invest-me/client/src/components/Home.js",["115","116","117"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport Select from \"react-select\";\nimport network from \"../network/index\";\nimport { startCase } from \"lodash\";\nimport GenericTable from \"./GenericTable\";\nimport TopStocksTable from \"./TopStocksTable\";\nimport { useStyles } from \"./HomeStyles\";\nimport Loading from './Loading'\n\nconst stockHeaders = [\"Stock\", \"Last Rate\", \"Yield\"];\nconst usersHeaders = [\n  \"username\",\n  \"BuyingPrice\",\n  \"Current value\",\n  \"Total profit\",\n  \"Yield\",\n];\n\nexport default function Home() {\n  const [options, setOptions] = useState([]);\n  const [selectValues, setSelectValues] = useState(\"lastThirtyDays\");\n  const [stockRows, setStocksRows] = useState([]);\n  const [usersRows, setUsersRows] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const classes = useStyles();\n\n  const handleSelectChange = useCallback((e) => {\n    setSelectValues(e.value);\n  }, []);\n\n  const fetchOptions = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/stocks/periods\");\n      data.forEach((period) => (period.label = startCase(period.label)));\n      setOptions(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchAllUsersProfit = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-users-profit\");\n      setUsersRows(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchTopStocks = useCallback(async () => {\n    try {\n      const { data } = await network.post(\"/stocks/top-stocks\", {\n        atr: selectValues,\n      });\n      setStocksRows(data);\n      setLoading(false)\n    } catch (err) {\n      console.error(err);\n    }\n  }, [selectValues]);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchTopStocks();\n    fetchAllUsersProfit();\n  }, []);\n\n  useEffect(() => {\n    fetchTopStocks();\n  }, [selectValues]);\n\nif(loading){\n  return <Loading type={\"spin\"} color={\"blue\"} />\n}\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.topStocks}>\n          <div className={classes.header}>\n            <h3 className={classes.headerTitle}>top stocks</h3>\n            <Select\n              name=\"colors\"\n              defaultValue={selectValues}\n              options={options}\n              onChange={handleSelectChange}\n              className={classes.textField}\n              classNamePrefix=\"select\"\n              placeholder=\"select period\"\n            />\n          </div>\n          <div>\n            <TopStocksTable\n              classes={classes}\n              headers={stockHeaders}\n              rows={stockRows}\n            />\n          </div>\n        </div>\n        <div>\n          <div>\n            <div className={classes.topInvestors}>\n              <h3 className={classes.headerTitle}>Top investors</h3>\n              <GenericTable\n                headers={usersHeaders}\n                rows={usersRows}\n                classes={classes}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/BigDataList.js",["118","119","120","121"],"import { DataGrid } from \"@material-ui/data-grid\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport network from \"../network/index\";\nimport _ from \"lodash\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"react-select\";\nimport { useHistory } from 'react-router-dom'\nimport Loading from './Loading'\nimport { startCase, camelCase } from 'lodash'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  control: {\n    padding: \"2px\",\n    marginBottom: \"1fr\",\n  },\n  dataGrid: { cursor: \"pointer\", height: 600, width: \"100%\" },\n}));\n\nexport default function BigDataList() {\n  const history = useHistory()\n  const [bigData, setBigData] = useState();\n  const [columns, setColumns] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [selectValues, setSelectValues] = useState(null);\n  const [loading, setLoading] = useState(true)\n  const classes = useStyles();\n\n\n  const handleCellClick = useCallback((cell) => {\n    history.push(`/one-stock/${cell.row.symbol}`)\n  }, []);\n\n  // const handleClickOpen = useCallback(() => {\n  //   setOpen(true);\n  // }, []);\n\n  // const handleClose = useCallback(() => {\n  //   setOpen(false);\n  // }, []);\n\n  \n  const handleSelectChange = useCallback((e) => {\n    setSelectValues(Array.isArray(e) ? e.map((x) => x.value) : []);\n  }, []);\n  \n  const fetchOptions = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/stocks/periods\");\n      const mapped = data.map((option) => ({label: startCase(option.label), value: option.value}))\n      setOptions(mapped);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n  \n  const fetchBigDataList = useCallback(async () => {\n    try {\n      const { data } = await network.post(\"/stocks/all\", selectValues);\n      const oneStock = data[0];\n      const resColumns = Object.keys(oneStock).map((key, i) => {\n        return {\n          field: key,\n          headerName: _.startCase(key),\n          width: 130,\n        };\n      });\n      setLoading(false);\n      setColumns(resColumns);\n      setBigData(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [selectValues]);\n  \n  useEffect(() => {\n    fetchOptions();\n    fetchBigDataList();\n  }, []);\n  \n  useEffect(() => {\n    fetchBigDataList();\n  }, [selectValues]);\n  \n  if(loading){\n    return <Loading type={\"spin\"} color={\"blue\"} />\n  }\n  \n  \n  return (\n    <div className={classes.root}>\n      <div className={classes.control}>\n        <Select\n          isMulti\n          name=\"colors\"\n          options={options}\n          onChange={handleSelectChange}\n          className=\"basic-multi-select\"\n          classNamePrefix=\"select\"\n        />\n      </div>\n      <div className={classes.dataGrid}>\n        {bigData && columns && (\n          <DataGrid\n            onCellClick={handleCellClick}\n            rows={bigData}\n            columns={columns}\n            pageSize={20}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/Calculator.js",["122","123","124","125","126","127","128","129"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AsyncSelect from \"react-select/async\";\nimport network from \"../network/index\";\nimport Select from \"react-select\";\nimport { startCase } from \"lodash\";\nimport { financial } from \"../functions/helpers\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    gridAutoRows: \"100px\",\n    justifyContent: \"center\",\n  },\n  moneyBar: {\n    display: \"flex\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"25ch\",\n  },\n  table: {\n    minWidth: 650,\n  },\n  cash: {\n    margin: \"auto\",\n    marginBottom: \"40px\",\n  },\n}));\n\nconst Calculator = () => {\n  const classes = useStyles();\n  const [cash, setCash] = useState(0);\n  const [query, setQuery] = useState(\"\");\n  const [stockLink, setStockLink] = useState(null);\n  const [periodYield, setPeriodYield] = useState(\"\");\n  const [estimateYield, setEstimateYield] = useState(\"\");\n  const [options, setOptions] = useState();\n  const [stockOption, setStockOptions] = useState();\n  const [error, setError] = useState(\"\");\n  const [defaultValue, setDefaultValue] = useState(\"\");\n  // const [stockTitle, setStockTitle] = useState('')\n\n  const onClear = useCallback(() => {\n    setCash(0);\n    setStockLink(null);\n    setPeriodYield(\"\");\n    setEstimateYield(\"\");\n    setOptions(\"\");\n    setStockOptions(\"\");\n    setQuery(\"\");\n    setDefaultValue(\"\");\n    loadingStockOptions();\n    // setStockTitle('')\n  }, []);\n\n  const handleSelectStockChange = useCallback(async (value) => {\n    setStockLink(value.symbol);\n    // setStockTitle(value.label)\n  }, []);\n\n  useEffect(() => {\n    setEstimateYield(financial((cash * periodYield) / 100));\n  }, [cash, periodYield]);\n\n  useEffect(() => {\n    loadingPeriodOptions();\n  }, [stockLink]);\n\n  useEffect(() => {\n    loadingStockOptions();\n  }, [query]);\n\n  useEffect(() => {\n    loadingStockOptions();\n  }, [query]);\n\n  const handleSelectPeriodChange = useCallback(\n    (value) => {\n      setPeriodYield(value.value);\n    },\n    [stockLink]\n  );\n\n  const handleInputStockChange = useCallback((value) => {\n    setQuery(value);\n  }, []);\n\n  const onChangeCash = useCallback((e) => {\n    setCash(e.target.value);\n  }, []);\n\n  const loadingStockOptions = useCallback(async () => {\n    try {\n      const { data } = await network.get(`/stocks/search?q=${query}`);\n      const mapped = data.map((stock) => ({\n        label: stock.title,\n        symbol: stock.symbol,\n      }));\n      setStockOptions(mapped);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [query]);\n\n  const loadingPeriodOptions = useCallback(async () => {\n    if (!stockLink) {\n      return setError(\"first choose link\");\n    }\n    try {\n      const { data } = await network.get(`stocks/one-stock-data/${stockLink}`);\n      const list = Object.entries(data);\n      const mapped = list.map((item) => ({\n        label: startCase(item[0]),\n        value: item[1],\n      }));\n      setOptions(mapped);\n      return mapped;\n      //   return mapped;\n    } catch (err) {\n      console.error(err);\n    }\n  }, [stockLink]);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.cash}>\n        <TextField\n          // isClearable={true}\n          label=\"Cash\"\n          id=\"outlined-margin-dense\"\n          value={cash}\n          className={classes.textField}\n          margin=\"dense\"\n          variant=\"outlined\"\n          type=\"number\"\n          onChange={onChangeCash}\n        />\n      </div>\n      <div className={classes.moneyBar}>\n        <div>\n          <Select\n            // isClearable={true}\n            className={classes.textField}\n            cacheOptions\n            defaultOptions\n            hideSelectedOptions={false}\n            defaultValue={defaultValue}\n            onChange={handleSelectStockChange}\n            placeholder={\"select stock\"}\n            onInputChange={handleInputStockChange}\n            options={stockOption}\n          />\n        </div>\n        <div>\n          <Select\n            className={classes.textField}\n            cacheOptions\n            // defaultOptions\n            defaultValue={defaultValue}\n            onChange={handleSelectPeriodChange}\n            placeholder={\"select period\"}\n            options={options}\n          />\n        </div>\n      </div>\n      <div className={classes.moneyBar}>\n        <div>\n          <TextField\n            helperText=\"Period yield %\"\n            id=\"outlined-margin-dense\"\n            value={`${periodYield}`}\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"number\"\n          />\n        </div>\n        <div>\n          <TextField\n            helperText=\"Estimate yield\"\n            id=\"outlined-margin-dense\"\n            value={estimateYield}\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"number\"\n          />\n        </div>\n      </div>\n      <div className={classes.cash}>\n        <Button onClick={onClear} variant=\"contained\" color=\"primary\">\n          clear\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n","/home/michael/repos/invest-me/client/src/components/Competition.js",["130","131"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport network from \"../network/index\";\nimport useStyles from \"./CompetitionStyles\";\nimport StocksTable from \"./StocksTable\";\nimport GenericTable from \"./GenericTable\";\nimport Loading from './Loading'\n\nconst usersHeaders = [\n  \"username\",\n  \"BuyingPrice\",\n  \"Current value\",\n  \"Total profit\",\n  \"Yield\",\n];\n\nexport default function Competition() {\n  const classes = useStyles();\n  const [usersData, setUsersData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchPortfolios = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-portfolios\");\n      const array = Object.entries(data);\n      return array;\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchAllUsersProfit = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions/all-users-profit\");\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const joinedData = useCallback(async () => {\n    Promise.all([fetchPortfolios(), fetchAllUsersProfit()]).then((ans) => {\n      const newArr = [];\n      for (let i = 0; i < ans[0].length; i++) {\n        for (let j = 0; j < ans[1].length; j++) {\n          if (ans[0][i][0] === ans[1][j][\"username\"]) {\n            newArr.push([ans[0][i], [ans[1][j]]]);\n          }\n        }\n      }\n      setUsersData(newArr);\n      setLoading(false)\n    });\n  }, []);\n  \n  useEffect(() => {\n    joinedData();\n  }, []);\n\n  if(loading){\n    return <Loading type={\"spin\"} color={\"blue\"} />\n  }\n  \n  return (\n    <div className={classes.root}>\n      {usersData &&\n        usersData.map((portfolio, i) => (\n          <div className={classes.tableWrapper}>\n            <h3 className={classes.username}>{portfolio[0][0]}</h3>\n            <div className={classes.table}>\n              <StocksTable key={i} tableRows={portfolio[0][1]} />\n            </div>\n            <div className={classes.table}>\n              <GenericTable\n                key={i}\n                headers={usersHeaders}\n                rows={portfolio[1]}\n                classes={classes}\n              />\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/reportWebVitals.js",[],["132","133"],"/home/michael/repos/invest-me/client/src/components/Header.js",["134","135","136","137","138","139"],"import Toolbar from \"@material-ui/core/Toolbar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AuthApi from \"../contexts/Auth\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport network from \"../network/index\";\n\nexport default function Header({\n  classes,\n  handleDrawerOpen,\n  drawerOpen,\n}) {\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const history = useHistory();\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleProfile = useCallback(() => {\n    setAnchorEl(null);\n    history.push(\"/profile\");\n  }, []);\n\n  const handleLogout = useCallback(async () => {\n    try {\n      await network.post(\"/auth/logout\", {\n        token: Cookies.get(\"refreshToken\"),\n      });\n      Cookies.remove(\"accessToken\");\n      Cookies.remove(\"userId\");\n      Cookies.remove(\"refreshToken\");\n      Cookies.remove(\"rememberMe\");\n      Cookies.remove(\"username\");\n      setCurrentUser(null);\n      history.push(\"/login\");\n      setAnchorEl(null);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: drawerOpen,\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n          className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          InvestMe\n        </Typography>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={6} sm={3}>\n            {/* <Typography className={classes.title}>cash</Typography> */}\n          </Grid>\n          <Grid item xs={6} sm={3}>\n            {/* <Typography className={classes.title}>investments</Typography> */}\n          </Grid>\n          <Grid item xs={6} sm={3}>\n            {/* <Typography className={classes.title}>total money</Typography> */}\n          </Grid>\n        </Grid>\n        {auth && (\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleLogout}>logout</MenuItem>\n              <MenuItem onClick={handleProfile}>My account</MenuItem>\n            </Menu>\n          </div>\n        )}\n      </Toolbar>\n    </AppBar>\n    // </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/contexts/Auth.js",[],"/home/michael/repos/invest-me/client/src/components/Profile.js",["140","141","142"],"/home/michael/repos/invest-me/client/src/network/index.js",[],"/home/michael/repos/invest-me/client/src/components/Register.js",["143","144","145"],"import React, { useState } from \"react\";\nimport {\n  Typography,\n  Paper,\n  Avatar,\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport network from \"../network/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from \"react-hook-form\";\nimport GenericDialog from \"./GenericDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n}));\n\nexport default function Register(props) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [birthDate, setBirthDate] = useState(\"\");\n  const history = useHistory();\n  const [dialogOpen, setDialogOpen] = useState(\"\");\n\n  const onRegister = (data) => {\n    network\n      .post(\"/auth/register\", data)\n      .then((res) => {\n        setDialogOpen(true)\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register Account\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onRegister)}>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"firstName\">First name</InputLabel>\n            <Input\n              id=\"firstName\"\n              name=\"firstName\"\n              autoComplete=\"off\"\n              autoFocus\n              error={errors.firstName ? true : false}\n              value={firstName}\n              inputRef={register({ required: true })}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            {errors.firstName && errors.firstName.type === \"required\" && (\n              <span style={{ color: \"red\" }}>firstName is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"lastName\">Last name</InputLabel>\n            <Input\n              id=\"lastName\"\n              name=\"lastName\"\n              autoComplete=\"off\"\n              inputRef={register({ required: true })}\n              autoFocus\n              error={errors.lastName ? true : false}\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            {errors.lastName && errors.lastName.type === \"required\" && (\n              <span style={{ color: \"red\" }}>lastName is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"name\">username</InputLabel>\n            <Input\n              id=\"username\"\n              name=\"username\"\n              autoComplete=\"off\"\n              inputRef={register({ required: true })}\n              autoFocus\n              error={errors.username ? true : false}\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            {errors.username && errors.username.type === \"required\" && (\n              <span style={{ color: \"red\" }}>username is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              inputRef={register({ required: true })}\n              autoComplete=\"off\"\n              value={email}\n              error={errors.email ? true : false}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            {errors.email && errors.email.type === \"required\" && (\n              <span style={{ color: \"red\" }}>email is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"off\"\n              inputRef={register({ required: true, minLength: 6 })}\n              error={errors.password ? true : false}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            {errors.password && errors.password.type === \"minLength\" && (\n              <span style={{ color: \"red\" }}>\n                password must be at least 6 characters length\n              </span>\n            )}\n            {errors.password && errors.password.type === \"required\" && (\n              <span style={{ color: \"red\" }}>password is required</span>\n            )}\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel shrink htmlFor=\"birthDate\">\n              Birth Date\n            </InputLabel>\n            <Input\n              error={errors.birthDate ? true : false}\n              inputRef={register({ required: true })}\n              name=\"birthDate\"\n              type=\"date\"\n              id=\"birthDate\"\n              autoComplete=\"off\"\n              value={birthDate}\n              onChange={(e) => setBirthDate(e.target.value)}\n            />\n          </FormControl>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onRegister}\n            className={classes.submit}\n          >\n            Register\n          </Button>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            component={Link}\n            to=\"/login\"\n            className={classes.submit}\n          >\n            Go back to Login\n          </Button>\n        </form>\n      </Paper>\n      {dialogOpen && (\n        <GenericDialog open={dialogOpen} setOpen={setDialogOpen} />\n      )}\n    </main>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/GenericDialog.js",["146"],"/home/michael/repos/invest-me/client/src/components/SmallLoading.js",[],{"ruleId":"147","severity":1,"message":"148","line":5,"column":22,"nodeType":"149","messageId":"150","endLine":5,"endColumn":30},{"ruleId":"151","severity":1,"message":"152","line":34,"column":6,"nodeType":"153","endLine":34,"endColumn":8,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"152","line":45,"column":6,"nodeType":"153","endLine":45,"endColumn":8,"suggestions":"155"},{"ruleId":"151","severity":1,"message":"156","line":50,"column":6,"nodeType":"153","endLine":50,"endColumn":8,"suggestions":"157"},{"ruleId":"147","severity":1,"message":"158","line":55,"column":10,"nodeType":"149","messageId":"150","endLine":55,"endColumn":21},{"ruleId":"151","severity":1,"message":"159","line":74,"column":6,"nodeType":"153","endLine":74,"endColumn":8,"suggestions":"160"},{"ruleId":"147","severity":1,"message":"161","line":35,"column":10,"nodeType":"149","messageId":"150","endLine":35,"endColumn":15},{"ruleId":"147","severity":1,"message":"162","line":61,"column":15,"nodeType":"149","messageId":"150","endLine":61,"endColumn":19},{"ruleId":"151","severity":1,"message":"163","line":73,"column":6,"nodeType":"153","endLine":73,"endColumn":8,"suggestions":"164"},{"ruleId":"147","severity":1,"message":"162","line":125,"column":15,"nodeType":"149","messageId":"150","endLine":125,"endColumn":19},{"ruleId":"151","severity":1,"message":"165","line":136,"column":6,"nodeType":"153","endLine":136,"endColumn":36,"suggestions":"166"},{"ruleId":"147","severity":1,"message":"162","line":168,"column":15,"nodeType":"149","messageId":"150","endLine":168,"endColumn":19},{"ruleId":"151","severity":1,"message":"165","line":178,"column":6,"nodeType":"153","endLine":178,"endColumn":75,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":305,"column":15,"nodeType":"170","endLine":305,"endColumn":27},{"ruleId":"151","severity":1,"message":"171","line":26,"column":6,"nodeType":"153","endLine":26,"endColumn":8,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":41,"column":17,"nodeType":"175","endLine":45,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":49,"column":17,"nodeType":"175","endLine":53,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":1,"column":22,"nodeType":"149","messageId":"150","endLine":1,"endColumn":30},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"147","severity":1,"message":"180","line":6,"column":22,"nodeType":"149","messageId":"150","endLine":6,"endColumn":26},{"ruleId":"147","severity":1,"message":"158","line":11,"column":10,"nodeType":"149","messageId":"150","endLine":11,"endColumn":21},{"ruleId":"151","severity":1,"message":"159","line":30,"column":6,"nodeType":"153","endLine":30,"endColumn":8,"suggestions":"181"},{"ruleId":"147","severity":1,"message":"182","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":9},{"ruleId":"151","severity":1,"message":"183","line":68,"column":6,"nodeType":"153","endLine":68,"endColumn":8,"suggestions":"184"},{"ruleId":"151","severity":1,"message":"185","line":72,"column":6,"nodeType":"153","endLine":72,"endColumn":20,"suggestions":"186"},{"ruleId":"147","severity":1,"message":"187","line":9,"column":21,"nodeType":"149","messageId":"150","endLine":9,"endColumn":30},{"ruleId":"151","severity":1,"message":"171","line":32,"column":6,"nodeType":"153","endLine":32,"endColumn":8,"suggestions":"188"},{"ruleId":"151","severity":1,"message":"189","line":79,"column":6,"nodeType":"153","endLine":79,"endColumn":8,"suggestions":"190"},{"ruleId":"151","severity":1,"message":"191","line":83,"column":6,"nodeType":"153","endLine":83,"endColumn":20,"suggestions":"192"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":22,"nodeType":"149","messageId":"150","endLine":2,"endColumn":30},{"ruleId":"147","severity":1,"message":"193","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":19},{"ruleId":"147","severity":1,"message":"194","line":43,"column":10,"nodeType":"149","messageId":"150","endLine":43,"endColumn":15},{"ruleId":"151","severity":1,"message":"195","line":58,"column":6,"nodeType":"153","endLine":58,"endColumn":8,"suggestions":"196"},{"ruleId":"151","severity":1,"message":"197","line":71,"column":6,"nodeType":"153","endLine":71,"endColumn":17,"suggestions":"198"},{"ruleId":"151","severity":1,"message":"199","line":75,"column":6,"nodeType":"153","endLine":75,"endColumn":13,"suggestions":"200"},{"ruleId":"151","severity":1,"message":"199","line":79,"column":6,"nodeType":"153","endLine":79,"endColumn":13,"suggestions":"201"},{"ruleId":"151","severity":1,"message":"202","line":85,"column":5,"nodeType":"153","endLine":85,"endColumn":16,"suggestions":"203"},{"ruleId":"151","severity":1,"message":"204","line":53,"column":6,"nodeType":"153","endLine":53,"endColumn":8,"suggestions":"205"},{"ruleId":"151","severity":1,"message":"206","line":57,"column":6,"nodeType":"153","endLine":57,"endColumn":8,"suggestions":"207"},{"ruleId":"176","replacedBy":"208"},{"ruleId":"178","replacedBy":"209"},{"ruleId":"147","severity":1,"message":"210","line":9,"column":10,"nodeType":"149","messageId":"150","endLine":9,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":9,"column":22,"nodeType":"149","messageId":"150","endLine":9,"endColumn":30},{"ruleId":"147","severity":1,"message":"158","line":27,"column":10,"nodeType":"149","messageId":"150","endLine":27,"endColumn":21},{"ruleId":"147","severity":1,"message":"211","line":29,"column":9,"nodeType":"149","messageId":"150","endLine":29,"endColumn":21},{"ruleId":"151","severity":1,"message":"171","line":44,"column":6,"nodeType":"153","endLine":44,"endColumn":8,"suggestions":"212"},{"ruleId":"151","severity":1,"message":"213","line":62,"column":6,"nodeType":"153","endLine":62,"endColumn":8,"suggestions":"214"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":22,"nodeType":"149","messageId":"150","endLine":2,"endColumn":30},{"ruleId":"151","severity":1,"message":"215","line":51,"column":6,"nodeType":"153","endLine":51,"endColumn":8,"suggestions":"216"},{"ruleId":"151","severity":1,"message":"217","line":55,"column":6,"nodeType":"153","endLine":55,"endColumn":8,"suggestions":"218"},{"ruleId":"147","severity":1,"message":"219","line":62,"column":9,"nodeType":"149","messageId":"150","endLine":62,"endColumn":16},{"ruleId":"147","severity":1,"message":"194","line":63,"column":10,"nodeType":"149","messageId":"150","endLine":63,"endColumn":15},{"ruleId":"147","severity":1,"message":"220","line":63,"column":17,"nodeType":"149","messageId":"150","endLine":63,"endColumn":25},{"ruleId":"147","severity":1,"message":"221","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":17},"no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'params.symbol'. Either include it or remove the dependency array.","ArrayExpression",["222"],["223"],"React Hook useEffect has missing dependencies: 'fetchOneStock' and 'fetchStockMeta'. Either include them or remove the dependency array.",["224"],"'currentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["225"],"'value' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchUserMoney', 'fetchUserProfit', and 'getUserPortfolio'. Either include them or remove the dependency array.",["226"],"React Hook useCallback has missing dependencies: 'fetchUserMoney', 'fetchUserProfit', and 'getUserPortfolio'. Either include them or remove the dependency array.",["227"],["228"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["229"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["230"],"no-negated-in-lhs",["231"],"'Link' is defined but never used.",["232"],"'_' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchAllUsersProfit', 'fetchOptions', and 'fetchTopStocks'. Either include them or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'fetchTopStocks'. Either include it or remove the dependency array.",["234"],"'camelCase' is defined but never used.",["235"],"React Hook useEffect has missing dependencies: 'fetchBigDataList' and 'fetchOptions'. Either include them or remove the dependency array.",["236"],"React Hook useEffect has a missing dependency: 'fetchBigDataList'. Either include it or remove the dependency array.",["237"],"'AsyncSelect' is defined but never used.","'error' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'loadingStockOptions'. Either include it or remove the dependency array.",["238"],"React Hook useEffect has a missing dependency: 'loadingPeriodOptions'. Either include it or remove the dependency array.",["239"],"React Hook useEffect has a missing dependency: 'loadingStockOptions'. Either include it or remove the dependency array.",["240"],["241"],"React Hook useCallback has an unnecessary dependency: 'stockLink'. Either exclude it or remove the dependency array.",["242"],"React Hook useCallback has missing dependencies: 'fetchAllUsersProfit' and 'fetchPortfolios'. Either include them or remove the dependency array.",["243"],"React Hook useEffect has a missing dependency: 'joinedData'. Either include it or remove the dependency array.",["244"],["230"],["231"],"'makeStyles' is defined but never used.","'handleChange' is assigned a value but never used.",["245"],"React Hook useCallback has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["246"],"React Hook useCallback has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["247"],"React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["248"],"'history' is assigned a value but never used.","'setError' is assigned a value but never used.","'TextField' is defined but never used.",{"desc":"249","fix":"250"},{"desc":"249","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"262","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"278","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"262","fix":"287"},{"desc":"254","fix":"288"},{"desc":"289","fix":"290"},{"desc":"289","fix":"291"},"Update the dependencies array to be: [params.symbol]",{"range":"292","text":"293"},{"range":"294","text":"293"},"Update the dependencies array to be: [fetchOneStock, fetchStockMeta]",{"range":"295","text":"296"},"Update the dependencies array to be: [history, setCurrentUser]",{"range":"297","text":"298"},"Update the dependencies array to be: [fetchUserMoney, fetchUserProfit, getUserPortfolio]",{"range":"299","text":"300"},"Update the dependencies array to be: [amount, stockToUpdate, price, fetchUserProfit, fetchUserMoney, getUserPortfolio]",{"range":"301","text":"302"},"Update the dependencies array to be: [currentAmount, stockSellAmount, stockForSell, ifNegative, sellPrice, fetchUserProfit, fetchUserMoney, getUserPortfolio]",{"range":"303","text":"304"},"Update the dependencies array to be: [history]",{"range":"305","text":"306"},{"range":"307","text":"298"},"Update the dependencies array to be: [fetchAllUsersProfit, fetchOptions, fetchTopStocks]",{"range":"308","text":"309"},"Update the dependencies array to be: [fetchTopStocks, selectValues]",{"range":"310","text":"311"},{"range":"312","text":"306"},"Update the dependencies array to be: [fetchBigDataList, fetchOptions]",{"range":"313","text":"314"},"Update the dependencies array to be: [fetchBigDataList, selectValues]",{"range":"315","text":"316"},"Update the dependencies array to be: [loadingStockOptions]",{"range":"317","text":"318"},"Update the dependencies array to be: [loadingPeriodOptions, stockLink]",{"range":"319","text":"320"},"Update the dependencies array to be: [loadingStockOptions, query]",{"range":"321","text":"322"},{"range":"323","text":"322"},"Update the dependencies array to be: []",{"range":"324","text":"325"},"Update the dependencies array to be: [fetchAllUsersProfit, fetchPortfolios]",{"range":"326","text":"327"},"Update the dependencies array to be: [joinedData]",{"range":"328","text":"329"},{"range":"330","text":"306"},{"range":"331","text":"298"},"Update the dependencies array to be: [getUserInfo]",{"range":"332","text":"333"},{"range":"334","text":"333"},[982,984],"[params.symbol]",[1235,1237],[1309,1311],"[fetchOneStock, fetchStockMeta]",[2077,2079],"[history, setCurrentUser]",[2399,2401],"[fetchUserMoney, fetchUserProfit, getUserPortfolio]",[3905,3935],"[amount, stockToUpdate, price, fetchUserProfit, fetchUserMoney, getUserPortfolio]",[5012,5081],"[currentAmount, stockSellAmount, stockForSell, ifNegative, sellPrice, fetchUserProfit, fetchUserMoney, getUserPortfolio]",[916,918],"[history]",[1015,1017],[1843,1845],"[fetchAllUsersProfit, fetchOptions, fetchTopStocks]",[1896,1910],"[fetchTopStocks, selectValues]",[1034,1036],[2230,2232],"[fetchBigDataList, fetchOptions]",[2287,2301],"[fetchBigDataList, selectValues]",[1650,1652],"[loadingStockOptions]",[1960,1971],"[loadingPeriodOptions, stockLink]",[2027,2034],"[loadingStockOptions, query]",[2090,2097],[2212,2223],"[]",[1478,1480],"[fetchAllUsersProfit, fetchPortfolios]",[1529,1531],"[joinedData]",[1453,1455],[1932,1934],[1345,1347],"[getUserInfo]",[1395,1397]]