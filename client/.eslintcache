[{"/home/michael/repos/invest-me/client/src/components/PrivateRoute.js":"1","/home/michael/repos/invest-me/client/src/components/Home.js":"2","/home/michael/repos/invest-me/client/src/reportWebVitals.js":"3","/home/michael/repos/invest-me/client/src/components/NotFound.js":"4","/home/michael/repos/invest-me/client/src/components/Loading.js":"5","/home/michael/repos/invest-me/client/src/components/Header.js":"6"},{"size":1445,"mtime":1609618497705,"results":"7","hashOfConfig":"8"},{"size":3195,"mtime":1609672776169,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607532441111,"results":"10","hashOfConfig":"8"},{"size":379,"mtime":1609279764180,"results":"11","hashOfConfig":"8"},{"size":542,"mtime":1609655685436,"results":"12","hashOfConfig":"8"},{"size":5177,"mtime":1609673000616,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1atymq2",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"/home/michael/repos/invest-me/client/src/components/PrivateRoute.js",["27","28","29","30"],"/home/michael/repos/invest-me/client/src/components/Home.js",["31","32"],"/home/michael/repos/invest-me/client/src/reportWebVitals.js",[],"/home/michael/repos/invest-me/client/src/components/NotFound.js",["33"],"/home/michael/repos/invest-me/client/src/components/Loading.js",[],"/home/michael/repos/invest-me/client/src/components/Header.js",["34","35","36","37","38"],"import Toolbar from \"@material-ui/core/Toolbar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AuthApi from \"../contexts/Auth\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport network from \"../network/index\";\nimport { financial } from \"../functions/helpers\";\nimport { useEffect, useState } from \"react\";\nimport UpdateMoney from \"./UpdateMoney\";\nimport CircleLoading from \"./CircularLoading\";\n\nexport default function Header({ classes, handleDrawerOpen, drawerOpen }) {\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const [openModal, setOpenModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const getUserInfo = useCallback(async () => {\n    try {\n      setLoading(true);\n      const { data } = await network.get(\"/users/info\");\n      setLoading(false);\n      if (data.cash === 0) {\n        setOpenModal(true);\n      }\n      setCurrentUser(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const handleMenu = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleProfile = useCallback(() => {\n    setAnchorEl(null);\n    history.push(\"/profile\");\n  }, []);\n\n  const handleLogout = useCallback(async () => {\n    try {\n      await network.post(\"/auth/logout\", {\n        token: Cookies.get(\"refreshToken\"),\n      });\n      Cookies.remove(\"accessToken\");\n      Cookies.remove(\"userId\");\n      Cookies.remove(\"refreshToken\");\n      Cookies.remove(\"rememberMe\");\n      Cookies.remove(\"username\");\n      setCurrentUser(null);\n      history.push(\"/login\");\n      setAnchorEl(null);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    getUserInfo();\n  }, []);\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: drawerOpen,\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n          className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography testId=\"title\" variant=\"h6\" className={classes.title}>\n          InvestMe\n        </Typography>\n        {loading ? (\n           <Grid\n           container\n           direction=\"row\"\n           justify=\"center\"\n           alignItems=\"flex-start\"\n         >\n          <CircleLoading />\n          </Grid>\n        ) : (\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item xs={4} sm={5}>\n              {/* <Typography className={classes.title}>total money</Typography> */}\n            </Grid>\n            <Grid item xs={4} sm={2}>\n              <Typography className={classes.title}>\n                cash: {currentUser.cash}\n              </Typography>\n            </Grid>\n            <Grid item xs={4} sm={2}>\n              <Typography className={classes.title}>\n                investments: {financial(currentUser.investments)}\n              </Typography>\n            </Grid>\n          </Grid>\n        )}\n        {auth && (\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n              <Typography testId=\"accountMenu\">&nbsp;{currentUser.username}</Typography>\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem testId=\"logout\" onClick={handleLogout}>logout</MenuItem>\n              <MenuItem testId=\"myAccount\" onClick={handleProfile}>My account</MenuItem>\n            </Menu>\n          </div>\n        )}\n      </Toolbar>\n      {openModal && (\n        <UpdateMoney\n          getUserInfo={getUserInfo}\n          setOpen={setOpenModal}\n          open={openModal}\n        />\n      )}\n    </AppBar>\n    // </div>\n  );\n}\n",{"ruleId":"39","severity":1,"message":"40","line":11,"column":10,"nodeType":"41","messageId":"42","endLine":11,"endColumn":21},{"ruleId":"39","severity":1,"message":"43","line":12,"column":10,"nodeType":"41","messageId":"42","endLine":12,"endColumn":17},{"ruleId":"44","severity":1,"message":"45","line":23,"column":6,"nodeType":"46","endLine":23,"endColumn":8,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"48","line":38,"column":6,"nodeType":"46","endLine":38,"endColumn":8,"suggestions":"49"},{"ruleId":"44","severity":1,"message":"50","line":67,"column":6,"nodeType":"46","endLine":67,"endColumn":8,"suggestions":"51"},{"ruleId":"44","severity":1,"message":"52","line":71,"column":6,"nodeType":"46","endLine":71,"endColumn":20,"suggestions":"53"},{"ruleId":"44","severity":1,"message":"54","line":8,"column":6,"nodeType":"46","endLine":8,"endColumn":8,"suggestions":"55"},{"ruleId":"39","severity":1,"message":"56","line":22,"column":16,"nodeType":"41","messageId":"42","endLine":22,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":43,"column":6,"nodeType":"46","endLine":43,"endColumn":8,"suggestions":"57"},{"ruleId":"44","severity":1,"message":"54","line":56,"column":6,"nodeType":"46","endLine":56,"endColumn":8,"suggestions":"58"},{"ruleId":"44","severity":1,"message":"59","line":74,"column":6,"nodeType":"46","endLine":74,"endColumn":8,"suggestions":"60"},{"ruleId":"44","severity":1,"message":"61","line":78,"column":6,"nodeType":"46","endLine":78,"endColumn":8,"suggestions":"62"},"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.","ArrayExpression",["63"],"React Hook useEffect has missing dependencies: 'getUserInfo' and 'history'. Either include them or remove the dependency array.",["64"],"React Hook useEffect has missing dependencies: 'fetchAllUsersProfit', 'fetchOptions', and 'fetchTopStocks'. Either include them or remove the dependency array.",["65"],"React Hook useEffect has a missing dependency: 'fetchTopStocks'. Either include it or remove the dependency array.",["66"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["67"],"'setAuth' is assigned a value but never used.",["68"],["69"],"React Hook useCallback has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["70"],"React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["71"],{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"72","fix":"82"},{"desc":"80","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [setCurrentUser]",{"range":"88","text":"89"},"Update the dependencies array to be: [getUserInfo, history]",{"range":"90","text":"91"},"Update the dependencies array to be: [fetchAllUsersProfit, fetchOptions, fetchTopStocks]",{"range":"92","text":"93"},"Update the dependencies array to be: [fetchTopStocks, selectValues]",{"range":"94","text":"95"},"Update the dependencies array to be: [history]",{"range":"96","text":"97"},{"range":"98","text":"89"},{"range":"99","text":"97"},"Update the dependencies array to be: [history, setCurrentUser]",{"range":"100","text":"101"},"Update the dependencies array to be: [getUserInfo]",{"range":"102","text":"103"},[817,819],"[setCurrentUser]",[1168,1170],"[getUserInfo, history]",[1821,1823],"[fetchAllUsersProfit, fetchOptions, fetchTopStocks]",[1874,1888],"[fetchTopStocks, selectValues]",[219,221],"[history]",[1631,1633],[1910,1912],[2389,2391],"[history, setCurrentUser]",[2439,2441],"[getUserInfo]"]