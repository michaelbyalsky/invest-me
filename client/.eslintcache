[{"/home/michael/repos/invest-me/client/src/App.js":"1","/home/michael/repos/invest-me/client/src/contexts/Auth.js":"2","/home/michael/repos/invest-me/client/src/components/Login.js":"3","/home/michael/repos/invest-me/client/src/components/Portfolio.js":"4","/home/michael/repos/invest-me/client/src/components/PortfolioStyles.js":"5","/home/michael/repos/invest-me/client/src/AppStyle.js":"6","/home/michael/repos/invest-me/client/src/components/OneStock.js":"7","/home/michael/repos/invest-me/client/src/components/TopStocksTable.js":"8","/home/michael/repos/invest-me/client/src/components/UpdateMoney.js":"9","/home/michael/repos/invest-me/client/src/components/Loading.js":"10","/home/michael/repos/invest-me/client/src/components/GenericDialog.js":"11","/home/michael/repos/invest-me/client/src/components/Footer.js":"12","/home/michael/repos/invest-me/client/src/components/PrivateRoute.js":"13","/home/michael/repos/invest-me/client/src/components/StocksTable.js":"14","/home/michael/repos/invest-me/client/src/components/CompetitionStyles.js":"15","/home/michael/repos/invest-me/client/src/components/Header.js":"16","/home/michael/repos/invest-me/client/src/components/CircularLoading.js":"17","/home/michael/repos/invest-me/client/src/functions/helpers.js":"18","/home/michael/repos/invest-me/client/src/components/SideBar.js":"19","/home/michael/repos/invest-me/client/src/components/Competition.js":"20","/home/michael/repos/invest-me/client/src/components/NotFound.js":"21"},{"size":3418,"mtime":1609280039139,"results":"22","hashOfConfig":"23"},{"size":88,"mtime":1607586116384,"results":"24","hashOfConfig":"23"},{"size":5252,"mtime":1609077020211,"results":"25","hashOfConfig":"23"},{"size":11286,"mtime":1609236315942,"results":"26","hashOfConfig":"23"},{"size":817,"mtime":1609095375176,"results":"27","hashOfConfig":"23"},{"size":1672,"mtime":1609241610477,"results":"28","hashOfConfig":"23"},{"size":1713,"mtime":1609156923180,"results":"29","hashOfConfig":"23"},{"size":1415,"mtime":1608908849043,"results":"30","hashOfConfig":"23"},{"size":2407,"mtime":1609228845462,"results":"31","hashOfConfig":"23"},{"size":520,"mtime":1609148214544,"results":"32","hashOfConfig":"23"},{"size":1166,"mtime":1609075720030,"results":"33","hashOfConfig":"23"},{"size":244,"mtime":1609241742571,"results":"34","hashOfConfig":"23"},{"size":1517,"mtime":1609226926252,"results":"35","hashOfConfig":"23"},{"size":3388,"mtime":1609005142397,"results":"36","hashOfConfig":"23"},{"size":564,"mtime":1608652320420,"results":"37","hashOfConfig":"23"},{"size":5106,"mtime":1609274601115,"results":"38","hashOfConfig":"23"},{"size":463,"mtime":1609274592259,"results":"39","hashOfConfig":"23"},{"size":86,"mtime":1609227538352,"results":"40","hashOfConfig":"23"},{"size":2407,"mtime":1608909572782,"results":"41","hashOfConfig":"23"},{"size":2276,"mtime":1609156923180,"results":"42","hashOfConfig":"23"},{"size":379,"mtime":1609279764180,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1atymq2",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/michael/repos/invest-me/client/src/App.js",["96"],"/home/michael/repos/invest-me/client/src/contexts/Auth.js",[],["97","98"],"/home/michael/repos/invest-me/client/src/components/Login.js",["99","100"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Paper,\n  Avatar,\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport network from \"../network/index\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport AuthApi from \"../contexts/Auth\";\nimport Cookies from \"js-cookie\";\nimport SmallLoading from \"./SmallLoading\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n}));\n\nfunction Login() {\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const classes = useStyles();\n  const [email, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    let rememberMeValue = Cookies.get(\"rememberMe\");\n    let token = Cookies.get(\"username\");\n    if (rememberMeValue && token) {\n      setCurrentUser({\n        id: Cookies.get(\"userId\"),\n        username: Cookies.get(\"username\"),\n      });\n      history.push(\"/\");\n    }\n  }, []);\n\n  const login = async (e) => {\n    if (!email || !password) {\n      return handleError(\"please enter email and password\");\n    }\n    let body = {\n      email: email,\n      password: password,\n      rememberMe: rememberMe,\n    };\n    try {\n      setLoginLoading(true);\n      const { data } = await network.post(\"/auth/login\", body);\n      if (data.success !== true) {\n        return setLoginLoading(false);\n      }\n      if (rememberMe) {\n        Cookies.set(\"rememberMe\", true);\n      } else {\n        Cookies.set(\"rememberMe\", false);\n      }\n      setCurrentUser({\n        id: Cookies.get(\"userId\"),\n        username: Cookies.get(\"username\"),\n      });\n      setLoginLoading(false);\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n      setLoginLoading(false);\n      handleError(\"invalid email or password\");\n    }\n  };\n\n  const handleError = useCallback((message) => {\n    setError(message);\n    setTimeout(() => {\n      setError(null);\n    }, 3000);\n  }, []);\n\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          onSubmit={(e) => e.preventDefault() && false}\n        >\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"Email\">Email</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              autoComplete=\"off\"\n              autoFocus\n              value={email}\n              onChange={(e) => setUser(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"off\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </FormControl>\n          <label>\n            <input\n              name=\"rememberMe\"\n              checked={rememberMe}\n              onChange={(e) => setRememberMe(() => !rememberMe)}\n              type=\"checkbox\"\n            />\n            Remember me\n          </label>\n          {error && (\n            <div>\n              <label style={{ color: \"red\" }}>{error}</label>\n            </div>\n          )}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={login}\n            className={classes.submit}\n            >\n            Sign in\n          </Button>\n            {loginLoading && <SmallLoading />}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            component={Link}\n            to=\"/register\"\n            className={classes.submit}\n          >\n            Register\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n}\n\nexport default Login;\n",["101","102"],"/home/michael/repos/invest-me/client/src/components/Portfolio.js",["103","104","105","106","107","108","109","110","111"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport network from \"../network/index\";\nimport AsyncSelect from \"react-select/async\";\nimport StocksTable from \"./StocksTable\";\nimport { financial } from \"../functions/helpers\";\nimport { useStyles } from \"./PortfolioStyles\";\nimport GenericTable from \"./GenericTable\";\nimport SmallLoading from \"./SmallLoading\";\nimport Loading from \"./Loading\";\nimport AuthApi from \"../contexts/Auth\";\n\nconst usersHeaders = [\n  \"username\",\n  \"BuyingPrice\",\n  \"Current value\",\n  \"Total profit\",\n  \"Yield\",\n];\n\nexport default function Portfolio() {\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [openSell, setOpenSell] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [stockToUpdate, setStockToUpdate] = useState(null);\n  const [amount, setAmount] = useState(0);\n  const [price, setPrice] = useState(0);\n  const [value, setValue] = useState(\"\");\n  const [rows, setRows] = useState([]);\n  const [stockSellAmount, setStockSellAmount] = useState(0);\n  const [stockForSell, setStockForSell] = useState(\"\");\n  const [ifNegative, setIfNegative] = useState(false);\n  const [sellPrice, setSellPrice] = useState(0);\n  const [currentAmount, setCurrentAmount] = useState(0);\n  const [buyError, setBuyError] = useState(\"\");\n  const [sellError, setSellError] = useState(\"\");\n  const [userProfit, setUserProfit] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingBuy, setLoadingBuy] = useState(false);\n  const [loadingSell, setLoadingSell] = useState(false);\n\n  const handleClickOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleCloseSell = useCallback(() => {\n    setOpenSell(false);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const fetchAllStocks = async () => {\n    try {\n      const { data } = await network.get(\"/stocks/stocks-array\");\n      // setStocksArray(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchAllStocks();\n    getUserInfo();\n    getUserPortfolio();\n    fetchUserProfit()\n  }, []);\n\n  // useEffect(() => {\n  //   searchStocks();\n  // }, [query]);\n\n  const getUserInfo = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/users/info\");\n      setLoading(false);\n      setCurrentUser(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const fetchUserProfit = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"transactions/user-profit\");\n      setUserProfit(data);\n      setLoading(false)\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const getUserPortfolio = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/transactions\");\n      setRows(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const onAddStock = useCallback(async () => {\n    if (Number(amount) <= 0) {\n      setBuyError(\"Amount error\");\n      setTimeout(() => {\n        setBuyError(\"\");\n      }, 3000);\n      return;\n    }\n    try {\n      const obj = {\n        symbol: stockToUpdate,\n        buyPrice: price,\n        buyAmount: Number(amount),\n      };\n      setLoadingBuy(true);\n      const { data } = await network.post(\"/transactions\", obj);\n      setLoadingBuy(false);\n      getUserInfo();\n      getUserPortfolio();\n      fetchUserProfit()\n      setStockToUpdate(\"\");\n      setPrice(\"\");\n      setAmount(0);\n      setOpen(false);\n    } catch (err) {\n      setBuyError(\"system Error\");\n      setLoadingBuy(false);\n      console.error(err);\n    }\n  }, [stockToUpdate, price, amount]);\n\n  const loadingOption = useCallback(async () => {\n    try {\n      const { data } = await network.get(`/stocks/search?q=${query}`);\n      const mapped = data.map((stock) => ({\n        label: stock.title,\n        symbol: stock.symbol,\n        price: stock.lastRate,\n      }));\n      return mapped;\n    } catch (err) {\n      console.error(err);\n    }\n  }, [query]);\n\n  //remove stock\n  const onSellStock = useCallback(async () => {\n    if (currentAmount - Number(stockSellAmount) < 0) {\n      setSellError(\"Amount error\");\n      setTimeout(() => {\n        setSellError(\"\");\n      }, 3000);\n      return;\n    }\n    try {\n      const obj = {\n        symbol: parseFloat(stockForSell),\n        sellAmount: Number(stockSellAmount),\n        negative: ifNegative,\n        sellPrice: sellPrice,\n      };\n      setLoadingSell(true);\n      const { data } = await network.patch(\"/transactions\", obj);\n      setLoadingSell(false);\n      setStockForSell(\"\");\n      setStockSellAmount(0);\n      getUserInfo();\n      fetchUserProfit()\n      getUserPortfolio();\n      setOpenSell(false);\n    } catch (err) {\n      setLoadingSell(false);\n      setSellError(\"system error\");\n      console.error(err);\n    }\n  }, [sellPrice, ifNegative, stockForSell, stockSellAmount, currentAmount]);\n\n  const onPressSell = useCallback((value) => {\n    setCurrentAmount(value.currentAmount);\n    setStockForSell(value.symbol);\n    setSellPrice(value.lastRate);\n    if (value.yield < 0) {\n      setIfNegative(true);\n    } else {\n      setIfNegative(false);\n    }\n    setOpenSell(true);\n  }, []);\n\n  const handleInputChange = useCallback((value) => {\n    setQuery(value);\n  }, []);\n\n  const handleSelectChange = useCallback((value) => {\n    setStockToUpdate(value.symbol);\n    setPrice(value.price);\n    setValue(value.lable);\n  }, []);\n\n  if (loading) {\n    return <Loading type={\"spin\"} color={\"blue\"} height={333} width={185} />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.moneyBar}>\n        <div>\n          <TextField\n            label=\"Cash\"\n            id=\"outlined-margin-dense\"\n            value={currentUser.cash}\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"number\"\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"Investments\"\n            id=\"outlined-margin-dense\"\n            value={financial(currentUser.investments)}\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"number\"\n          />\n        </div>\n      </div>\n      <div>\n        <div className={classes.button}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n            new stock\n          </Button>\n        </div>\n        <Dialog\n          fullWidth=\"true\"\n          open={openSell}\n          onClose={handleCloseSell}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\n            sell stock\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>{sellError}</DialogContentText>\n            <div className={classes.actions}>\n              <TextField\n                id=\"outlined-margin-dense\"\n                value={sellPrice}\n                className={classes.textField}\n                helperText=\"stock sell price\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"number\"\n                onChange={(e) => setSellPrice(e.target.value)}\n              />\n              <TextField\n                id=\"outlined-margin-dense\"\n                value={stockSellAmount}\n                className={classes.textField}\n                helperText=\"stock sell amount\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"number\"\n                onChange={(e) => setStockSellAmount(e.target.value)}\n              />\n            </div>\n            {sellError && (\n              <div>\n                <label style={{ color: \"red\" }}>{sellError}</label>\n              </div>\n            )}\n            {loadingSell && <SmallLoading />}\n          </DialogContent>\n\n          <DialogActions>\n            <Button autoFocus onClick={handleCloseSell} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={onSellStock} color=\"primary\">\n              sell stock\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          fullWidth=\"true\"\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\n            Add stock\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Add new stock to your stock portfolio\n            </DialogContentText>\n            <AsyncSelect\n              cacheOptions\n              defaultOptions\n              hideSelectedOptions={false}\n              cacheOptions\n              // value={stockToUpdate}\n              onChange={handleSelectChange}\n              placeholder={\"slect stock\"}\n              onInputChange={handleInputChange}\n              loadOptions={loadingOption}\n            />\n            <div className={classes.actions}>\n              <TextField\n                id=\"outlined-margin-dense\"\n                value={amount}\n                className={classes.textField}\n                helperText=\"stock amount\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"number\"\n                onChange={(e) => setAmount(e.target.value)}\n              />\n              <TextField\n                id=\"outlined-margin-dense\"\n                value={price}\n                className={classes.textField}\n                helperText=\"stock buying price\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"number\"\n                onChange={(e) => setPrice(e.target.value)}\n              />\n            </div>\n          </DialogContent>\n          {buyError && (\n            <div\n              style={{\n                color: \"red\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <label>{buyError}</label>\n            </div>\n          )}\n          {loadingBuy && <SmallLoading />}\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={onAddStock} color=\"primary\">\n              Add stock\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n      <div className={classes.tableWrapper}>\n        <div className={classes.stocksTable}>\n          <StocksTable tableRows={rows} onPressSell={onPressSell} />\n        </div>\n        <div className={classes.profitTable}>\n          <GenericTable\n            headers={usersHeaders}\n            rows={userProfit}\n            classes={classes}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n",["112","113"],"/home/michael/repos/invest-me/client/src/components/PortfolioStyles.js",["114"],"/home/michael/repos/invest-me/client/src/AppStyle.js",["115"],"/home/michael/repos/invest-me/client/src/components/OneStock.js",["116","117","118","119"],"/home/michael/repos/invest-me/client/src/components/TopStocksTable.js",[],"/home/michael/repos/invest-me/client/src/components/UpdateMoney.js",["120"],"import React, { useCallback, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport network from \"../network/index\";\nimport SmallLoading from \"./SmallLoading\";\n\nexport default function UpdateMoneyModal({ open, setOpen, getUserInfo }) {\n  const [cashToUpdate, setCashToUpdate] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updateCash = useCallback(async () => {\n    try {\n      if (cashToUpdate < 1) {\n        setError(\"amount error\");\n        setTimeout(() => {\n          setError(null);\n        }, 3000);\n        return;\n      }\n      setLoading(true);\n      await network.post(\"/users/update-cash\", { cash: cashToUpdate });\n      getUserInfo()\n      setLoading(false);\n      setOpen(false);\n    } catch (err) {\n      console.error(err);\n      setError(\"system error\");\n      setTimeout(() => {\n        setError(null);\n      }, 3000);\n    }\n  }, [cashToUpdate]);\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Update your cash</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please add cash for start your investing\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"cash\"\n            type=\"number\"\n            fullWidth\n            value={cashToUpdate}\n            onChange={(e) => setCashToUpdate(e.target.value)}\n          />\n          {loading && <SmallLoading />}\n          {error && <span style={{color: \"red\", margin: \"auto\"}}>{error}</span>}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={updateCash} color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/Loading.js",[],"/home/michael/repos/invest-me/client/src/components/GenericDialog.js",["121"],"/home/michael/repos/invest-me/client/src/components/Footer.js",[],"/home/michael/repos/invest-me/client/src/components/PrivateRoute.js",["122","123","124","125"],"import React, { useEffect, useCallback, useState } from \"react\";\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\n// import { useAuth } from '../contexts/AuthContext'\nimport AuthApi from \"../contexts/Auth\";\nimport Cookies from \"js-cookie\";\nimport network from \"../network/index\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  // const { currentUser } = useAuth()\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  const getUserInfo = useCallback(async () => {\n    try {\n      const { data } = await network.get(\"/users/info\");\n      setLoading(false);\n      setCurrentUser(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    getUserInfo();\n    let rememberMeValue = Cookies.get(\"rememberMe\");\n    let token = Cookies.get(\"accessToken\");\n    if (token && rememberMeValue) {\n      return;\n    } else {\n      Cookies.remove(\"accessToken\");\n      Cookies.remove(\"refreshToken\");\n      Cookies.remove(\"userId\");\n      Cookies.remove(\"username\");\n      Cookies.remove(\"rememberMe\");\n      history.push(\"/login\");\n    }\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return Cookies.get(\"accessToken\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to=\"/login\n            \"\n          />\n        );\n      }}\n    ></Route>\n  );\n}\n",["126","127"],"/home/michael/repos/invest-me/client/src/components/StocksTable.js",["128","129","130"],"import React, { useCallback } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { financial } from \"../functions/helpers\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function StocksTable({ tableRows, onPressSell }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const handleStockClick = useCallback((symbol) => {\n    history.push(`/one-stock/${symbol}`);\n  }, []);\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Stock</TableCell>\n              <TableCell align=\"right\">Symbol</TableCell>\n              <TableCell align=\"right\">Last rate</TableCell>\n              <TableCell align=\"right\">Amount</TableCell>\n              <TableCell align=\"right\">AVG b.price</TableCell>\n              <TableCell align=\"right\">\n                Total value{\" \"}\n                <img\n                  height=\"15px\"\n                  width=\"15px\"\n                  src=\"https://img.icons8.com/material-outlined/24/000000/shekel.png\"\n                />\n              </TableCell>\n              <TableCell align=\"right\">\n                Profit{\" \"}\n                <img\n                  height=\"15px\"\n                  width=\"15px\"\n                  src=\"https://img.icons8.com/material-outlined/24/000000/shekel.png\"\n                />\n              </TableCell>\n              <TableCell align=\"right\">Yield</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableRows.length !== 0 &&\n              tableRows.map((row) => (\n                <TableRow key={row.title}>\n                  <TableCell\n                    onClick={() => handleStockClick(row.symbol)}\n                    style={{ cursor: \"pointer\" }}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    {row.title}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.symbol}</TableCell>\n                  <TableCell align=\"right\">{row.lastRate}</TableCell>\n                  <TableCell align=\"right\">{row.currentAmount}</TableCell>\n\n                  <TableCell align=\"right\">{financial(row.avgPrice)}</TableCell>\n                  <TableCell align=\"right\">\n                    {financial(row.currentPrice / 100)}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {financial(row.profitInShekels)}\n                  </TableCell>\n                  <TableCell align=\"right\">{financial(row.change)}%</TableCell>\n                  {onPressSell && (\n                    <Button onClick={() => onPressSell(row)}>sell</Button>\n                  )}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/CompetitionStyles.js",[],"/home/michael/repos/invest-me/client/src/components/Header.js",["131","132","133","134","135"],"import Toolbar from \"@material-ui/core/Toolbar\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AuthApi from \"../contexts/Auth\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport network from \"../network/index\";\nimport { financial } from \"../functions/helpers\";\nimport { useEffect, useState } from \"react\";\nimport UpdateMoney from \"./UpdateMoney\";\nimport CircleLoading from \"./CircularLoading\";\n\nexport default function Header({ classes, handleDrawerOpen, drawerOpen }) {\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const { userValue } = React.useContext(AuthApi);\n  const [currentUser, setCurrentUser] = userValue;\n  const [openModal, setOpenModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const getUserInfo = useCallback(async () => {\n    try {\n      setLoading(true);\n      const { data } = await network.get(\"/users/info\");\n      setLoading(false);\n      if (data.cash === 0) {\n        setOpenModal(true);\n      }\n      setCurrentUser(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  const handleMenu = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleProfile = useCallback(() => {\n    setAnchorEl(null);\n    history.push(\"/profile\");\n  }, []);\n\n  const handleLogout = useCallback(async () => {\n    try {\n      await network.post(\"/auth/logout\", {\n        token: Cookies.get(\"refreshToken\"),\n      });\n      Cookies.remove(\"accessToken\");\n      Cookies.remove(\"userId\");\n      Cookies.remove(\"refreshToken\");\n      Cookies.remove(\"rememberMe\");\n      Cookies.remove(\"username\");\n      setCurrentUser(null);\n      history.push(\"/login\");\n      setAnchorEl(null);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    getUserInfo();\n  }, []);\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: drawerOpen,\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n          className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          InvestMe\n        </Typography>\n        {loading ? (\n           <Grid\n           container\n           direction=\"row\"\n           justify=\"center\"\n           alignItems=\"flex-start\"\n         >\n          <CircleLoading />\n          </Grid>\n        ) : (\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item xs={4} sm={5}>\n              {/* <Typography className={classes.title}>total money</Typography> */}\n            </Grid>\n            <Grid item xs={4} sm={2}>\n              <Typography className={classes.title}>\n                cash: {currentUser.cash}\n              </Typography>\n            </Grid>\n            <Grid item xs={4} sm={2}>\n              <Typography className={classes.title}>\n                investments: {financial(currentUser.investments)}\n              </Typography>\n            </Grid>\n          </Grid>\n        )}\n        {auth && (\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n              <Typography>&nbsp;{currentUser.username}</Typography>\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleLogout}>logout</MenuItem>\n              <MenuItem onClick={handleProfile}>My account</MenuItem>\n            </Menu>\n          </div>\n        )}\n      </Toolbar>\n      {openModal && (\n        <UpdateMoney\n          getUserInfo={getUserInfo}\n          setOpen={setOpenModal}\n          open={openModal}\n        />\n      )}\n    </AppBar>\n    // </div>\n  );\n}\n","/home/michael/repos/invest-me/client/src/components/CircularLoading.js",[],"/home/michael/repos/invest-me/client/src/functions/helpers.js",[],"/home/michael/repos/invest-me/client/src/components/SideBar.js",[],"/home/michael/repos/invest-me/client/src/components/Competition.js",["136","137"],"/home/michael/repos/invest-me/client/src/components/NotFound.js",["138"],{"ruleId":"139","severity":1,"message":"140","line":21,"column":8,"nodeType":"141","messageId":"142","endLine":21,"endColumn":16},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"139","severity":1,"message":"147","line":55,"column":10,"nodeType":"141","messageId":"142","endLine":55,"endColumn":21},{"ruleId":"148","severity":1,"message":"149","line":74,"column":6,"nodeType":"150","endLine":74,"endColumn":8,"suggestions":"151"},{"ruleId":"143","replacedBy":"152"},{"ruleId":"145","replacedBy":"153"},{"ruleId":"139","severity":1,"message":"154","line":37,"column":10,"nodeType":"141","messageId":"142","endLine":37,"endColumn":15},{"ruleId":"139","severity":1,"message":"155","line":65,"column":15,"nodeType":"141","messageId":"142","endLine":65,"endColumn":19},{"ruleId":"148","severity":1,"message":"156","line":77,"column":6,"nodeType":"150","endLine":77,"endColumn":8,"suggestions":"157"},{"ruleId":"148","severity":1,"message":"158","line":91,"column":6,"nodeType":"150","endLine":91,"endColumn":8,"suggestions":"159"},{"ruleId":"139","severity":1,"message":"155","line":127,"column":15,"nodeType":"141","messageId":"142","endLine":127,"endColumn":19},{"ruleId":"148","severity":1,"message":"160","line":141,"column":6,"nodeType":"150","endLine":141,"endColumn":36,"suggestions":"161"},{"ruleId":"139","severity":1,"message":"155","line":174,"column":15,"nodeType":"141","messageId":"142","endLine":174,"endColumn":19},{"ruleId":"148","severity":1,"message":"160","line":187,"column":6,"nodeType":"150","endLine":187,"endColumn":75,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":314,"column":15,"nodeType":"165","endLine":314,"endColumn":27},{"ruleId":"143","replacedBy":"166"},{"ruleId":"145","replacedBy":"167"},{"ruleId":"139","severity":1,"message":"168","line":1,"column":22,"nodeType":"141","messageId":"142","endLine":1,"endColumn":30},{"ruleId":"139","severity":1,"message":"168","line":1,"column":22,"nodeType":"141","messageId":"142","endLine":1,"endColumn":30},{"ruleId":"139","severity":1,"message":"168","line":5,"column":22,"nodeType":"141","messageId":"142","endLine":5,"endColumn":30},{"ruleId":"148","severity":1,"message":"169","line":37,"column":6,"nodeType":"150","endLine":37,"endColumn":8,"suggestions":"170"},{"ruleId":"148","severity":1,"message":"169","line":48,"column":6,"nodeType":"150","endLine":48,"endColumn":8,"suggestions":"171"},{"ruleId":"148","severity":1,"message":"172","line":53,"column":6,"nodeType":"150","endLine":53,"endColumn":8,"suggestions":"173"},{"ruleId":"148","severity":1,"message":"174","line":42,"column":6,"nodeType":"150","endLine":42,"endColumn":20,"suggestions":"175"},{"ruleId":"139","severity":1,"message":"176","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":17},{"ruleId":"139","severity":1,"message":"147","line":11,"column":10,"nodeType":"141","messageId":"142","endLine":11,"endColumn":21},{"ruleId":"139","severity":1,"message":"177","line":12,"column":10,"nodeType":"141","messageId":"142","endLine":12,"endColumn":17},{"ruleId":"148","severity":1,"message":"158","line":23,"column":6,"nodeType":"150","endLine":23,"endColumn":8,"suggestions":"178"},{"ruleId":"148","severity":1,"message":"179","line":39,"column":6,"nodeType":"150","endLine":39,"endColumn":8,"suggestions":"180"},{"ruleId":"143","replacedBy":"181"},{"ruleId":"145","replacedBy":"182"},{"ruleId":"148","severity":1,"message":"183","line":26,"column":6,"nodeType":"150","endLine":26,"endColumn":8,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":41,"column":17,"nodeType":"187","endLine":45,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":49,"column":17,"nodeType":"187","endLine":53,"endColumn":19},{"ruleId":"139","severity":1,"message":"188","line":22,"column":16,"nodeType":"141","messageId":"142","endLine":22,"endColumn":23},{"ruleId":"148","severity":1,"message":"158","line":43,"column":6,"nodeType":"150","endLine":43,"endColumn":8,"suggestions":"189"},{"ruleId":"148","severity":1,"message":"183","line":56,"column":6,"nodeType":"150","endLine":56,"endColumn":8,"suggestions":"190"},{"ruleId":"148","severity":1,"message":"191","line":74,"column":6,"nodeType":"150","endLine":74,"endColumn":8,"suggestions":"192"},{"ruleId":"148","severity":1,"message":"193","line":78,"column":6,"nodeType":"150","endLine":78,"endColumn":8,"suggestions":"194"},{"ruleId":"148","severity":1,"message":"195","line":53,"column":6,"nodeType":"150","endLine":53,"endColumn":8,"suggestions":"196"},{"ruleId":"148","severity":1,"message":"197","line":57,"column":6,"nodeType":"150","endLine":57,"endColumn":8,"suggestions":"198"},{"ruleId":"148","severity":1,"message":"183","line":8,"column":6,"nodeType":"150","endLine":8,"endColumn":8,"suggestions":"199"},"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","no-native-reassign",["200"],"no-negated-in-lhs",["201"],"'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.","ArrayExpression",["202"],["200"],["201"],"'value' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchUserProfit', 'getUserInfo', and 'getUserPortfolio'. Either include them or remove the dependency array.",["203"],"React Hook useCallback has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.",["204"],"React Hook useCallback has missing dependencies: 'fetchUserProfit', 'getUserInfo', and 'getUserPortfolio'. Either include them or remove the dependency array.",["205"],["206"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["200"],["201"],"'useTheme' is defined but never used.","React Hook useCallback has a missing dependency: 'params.symbol'. Either include it or remove the dependency array.",["207"],["208"],"React Hook useEffect has missing dependencies: 'fetchOneStock' and 'fetchStockMeta'. Either include them or remove the dependency array.",["209"],"React Hook useCallback has missing dependencies: 'getUserInfo' and 'setOpen'. Either include them or remove the dependency array. If 'getUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["210"],"'TextField' is defined but never used.","'loading' is assigned a value but never used.",["211"],"React Hook useEffect has missing dependencies: 'getUserInfo' and 'history'. Either include them or remove the dependency array.",["212"],["200"],["201"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["213"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setAuth' is assigned a value but never used.",["214"],["215"],"React Hook useCallback has missing dependencies: 'history' and 'setCurrentUser'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["217"],"React Hook useCallback has missing dependencies: 'fetchAllUsersProfit' and 'fetchPortfolios'. Either include them or remove the dependency array.",["218"],"React Hook useEffect has a missing dependency: 'joinedData'. Either include it or remove the dependency array.",["219"],["220"],"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"231","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"225","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"225","fix":"243"},{"desc":"241","fix":"244"},{"desc":"221","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"241","fix":"252"},"Update the dependencies array to be: [history, setCurrentUser]",{"range":"253","text":"254"},"Update the dependencies array to be: [fetchUserProfit, getUserInfo, getUserPortfolio]",{"range":"255","text":"256"},"Update the dependencies array to be: [setCurrentUser]",{"range":"257","text":"258"},"Update the dependencies array to be: [amount, stockToUpdate, price, getUserInfo, getUserPortfolio, fetchUserProfit]",{"range":"259","text":"260"},"Update the dependencies array to be: [currentAmount, stockSellAmount, stockForSell, ifNegative, sellPrice, getUserInfo, fetchUserProfit, getUserPortfolio]",{"range":"261","text":"262"},"Update the dependencies array to be: [params.symbol]",{"range":"263","text":"264"},{"range":"265","text":"264"},"Update the dependencies array to be: [fetchOneStock, fetchStockMeta]",{"range":"266","text":"267"},"Update the dependencies array to be: [cashToUpdate, getUserInfo, setOpen]",{"range":"268","text":"269"},{"range":"270","text":"258"},"Update the dependencies array to be: [getUserInfo, history]",{"range":"271","text":"272"},"Update the dependencies array to be: [history]",{"range":"273","text":"274"},{"range":"275","text":"258"},{"range":"276","text":"274"},{"range":"277","text":"254"},"Update the dependencies array to be: [getUserInfo]",{"range":"278","text":"279"},"Update the dependencies array to be: [fetchAllUsersProfit, fetchPortfolios]",{"range":"280","text":"281"},"Update the dependencies array to be: [joinedData]",{"range":"282","text":"283"},{"range":"284","text":"274"},[2077,2079],"[history, setCurrentUser]",[2618,2620],"[fetchUserProfit, getUserInfo, getUserPortfolio]",[2914,2916],"[setCurrentUser]",[4102,4132],"[amount, stockToUpdate, price, getUserInfo, getUserPortfolio, fetchUserProfit]",[5327,5396],"[currentAmount, stockSellAmount, stockForSell, ifNegative, sellPrice, getUserInfo, fetchUserProfit, getUserPortfolio]",[1085,1087],"[params.symbol]",[1338,1340],[1412,1414],"[fetchOneStock, fetchStockMeta]",[1346,1360],"[cashToUpdate, getUserInfo, setOpen]",[817,819],[1240,1242],"[getUserInfo, history]",[916,918],"[history]",[1631,1633],[1910,1912],[2389,2391],[2439,2441],"[getUserInfo]",[1478,1480],"[fetchAllUsersProfit, fetchPortfolios]",[1529,1531],"[joinedData]",[219,221]]